{
	"id": "40247b3af8782080942693968cb22def",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"SimplePools.sol": {
				"content": "pragma solidity ^0.8.17;\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n// Simple Pools smart contract DeFi exchange.\r\n// Copyright (C) 2023 Simple Pools\r\n\r\n// This program is free software: you can redistribute it and/or modify it under\r\n// the terms of the GNU General Public License as published by the Free Software \r\n// Foundation, either version 3 of the License, or (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful, but WITHOUT \r\n// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS \r\n// FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License along with this \r\n// program. If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Simple Pools\r\n * https://simplepools.org/\r\n * DeFi made simple.\r\n */\r\ncontract SimplePools {\r\n\r\n    /**\r\n     * Main structure for the simple DeFi pool.\r\n     */ \r\n    struct Pool {\r\n\r\n        /**\r\n         * The ID of the pool.\r\n         */\r\n        uint64 poolId;\r\n\r\n        /**\r\n         * Flag indicating whether asset1 is the native blockchain currency.\r\n         */\r\n        bool isAsset1NativeBlockchainCurrency;\r\n\r\n        /**\r\n         * The ERC20 contract address of the first asset in the pool\r\n         * (the initially offered asset for selling).\r\n         * Used only if isAsset1NativeBlockchainCurrency is false.\r\n         */\r\n        address asset1;\r\n\r\n        /**\r\n         * Flag indicating whether asset2 is the native blockchain currency.\r\n         */\r\n        bool isAsset2NativeBlockchainCurrency;\r\n\r\n        /**\r\n         * The ERC20 contract address of the second asset in the pool\r\n         * (the initially asked asset for buying).\r\n         * Used only if isAsset2NativeBlockchainCurrency is false.\r\n         */\r\n        address asset2;\r\n\r\n        /**\r\n         * The current amount of asset1 in the pool.\r\n         */\r\n        uint256 asset1Amount;\r\n\r\n        /**\r\n         * The current amount of asset2 in the pool.\r\n         */\r\n        uint256 asset2Amount;\r\n\r\n        /**\r\n         * Initial asked price in asset2 requested for the whole asset1.\r\n         */\r\n        uint256 asset2InitiallyAskedAmount;\r\n\r\n        /**\r\n         * Maximum percent of asset1 that can be bought with one transaction.\r\n         * For example when the pool is used like a limit order in an orderbook\r\n         * the value of maxBuyAsset1PercentPerTransaction can be 100% so the \r\n         * order can be filled with one transaction. But if a newly created\r\n         * asset for which the whole supply is added to a simple pool the value\r\n         * of maxBuyAsset1PercentPerTransaction can be 1% (or 5%, 10%, 15%, 50%),\r\n         * depending on the use case.\r\n         */\r\n        uint8 maxBuyAsset1PercentPerTransaction;\r\n\r\n        /**\r\n         * The constantProduct equals (asset1Amount * (asset2Amount + asset2InitiallyAskedAmount))\r\n         * it is used to calculate the amount of bought and sold assets on exchange transactions.\r\n         * This is an invariant hold after each transaction in the pool when the flag isConstantPrice\r\n         * is set to false. If isConstantPrice is true then this value is ignored and only \r\n         * asset2InitiallyAskedAmount and initialAsset1Amount is used for price calculation.\r\n         */\r\n        uint256 constantProduct; // (A1*(A2+IA2)) = constantProduct\r\n\r\n        /**\r\n         * Flag indicating whether the pool is with changing price for asset in asset2.\r\n         * If the flag is \"true\" then the price will be always the same and constantProduct\r\n         * is ignored. Otherwise the pool changes the price on each transaction to keep the\r\n         * invariant (A1*(A2+IA2)) = constantProduct.\r\n         */\r\n        bool isConstantPrice;\r\n\r\n        /**\r\n         * The inital asset1 amount value when the pools was created. It is used to calculate\r\n         * the amount of bought and sold assets when the flag \"isConstantPrice\" is set to \"true\". \r\n         */\r\n        uint256 initialAsset1Amount;\r\n\r\n        /**\r\n         * The owner of the pool can take all assets, change maxBuyAsset1PercentPerTransaction,\r\n         * change the constantPrice when the pool is not locked. Also the pool owner takes half\r\n         * of the transaction taxes for each transaction. The other half is taken by the contract\r\n         * owner.\r\n         */\r\n        address payable poolOwner;\r\n\r\n        /**\r\n         * Flag indicating whether the pool is locked. Locked pools cannot be unlocked.\r\n         */\r\n        bool isLocked;\r\n\r\n        /**\r\n         * Flag indicating whether all assets (asset1 and asset1) are taken from\r\n         * the pool by the pool owner.\r\n         * Empty pools cannot be used. \r\n         * Locked pools cannot be emptied.\r\n         */\r\n        bool isEmpty;\r\n    }\r\n\r\n    /**\r\n     * List with all the pools in the smart contract.\r\n     */\r\n    Pool[] public _pools;\r\n\r\n    /**\r\n     * Each transaction with the smart contract is associated with a signle pool.\r\n     * This array keeps for each transaction with what pool it was associated.\r\n     * This is useful to sync the state of all pools in an indexed Database.\r\n     * \r\n     * The procedure for syncing pool states is the following:\r\n     * The Database stores the index of the last transaction with which it has synced\r\n     * all pools. Then it gets the current state of transactions in the smart contract\r\n     * by querying _allTransactionsPoolIds.length, and then get the only the indexes of the\r\n     * pools that were modified by the lates transactions (not synced with the DB), and\r\n     * sync the states only for these pools.\r\n     */\r\n    uint64[] _allTransactionsPoolIds;\r\n\r\n    /*\r\n     * Note: First the asset contract (if not native) have to allow the asset for spending \r\n     * by the SimplePools contract and then the operations can be performed.\r\n     */\r\n\r\n    /**\r\n     * Creates a simple pool.\r\n     * For the documentation of each parameter check the Pool structure definition.\r\n     * \r\n     * @param poolCreatorAddress the address of the pool creator\r\n     * @param isAsset1Native                         *\r\n     * @param asset1                                 *\r\n     * @param isAsset2Native                         *\r\n     * @param asset2                                 *\r\n     * @param asset1Amount                           *\r\n     * @param asset2InitiallyAskedAmount             *\r\n     * @param maxBuyAsset1PercentPerTransaction      *\r\n     * @param isConstantPrice                        *\r\n     */\r\n    function createPool(\r\n        address poolCreatorAddress,\r\n        bool isAsset1Native,\r\n        IERC20 asset1,\r\n        bool isAsset2Native,\r\n        IERC20 asset2,\r\n        uint256 asset1Amount,\r\n        uint256 asset2InitiallyAskedAmount,\r\n        uint8 maxBuyAsset1PercentPerTransaction, \r\n        bool isConstantPrice\r\n    ) external payable {\r\n        uint256 nativeAmountRequired = contractTransactionTax + (isAsset1Native ? asset1Amount : 0);\r\n        require(msg.value >= nativeAmountRequired, \"Lower than the required transaction value\");\r\n\r\n        uint64 poolId = uint64(_pools.length);\r\n        _allTransactionsPoolIds.push(poolId);\r\n        if (isAsset1Native) {\r\n            payable(this).transfer(asset1Amount);\r\n            contractOwner.transfer(msg.value - asset1Amount);\r\n        } else {\r\n            asset1.transferFrom(poolCreatorAddress, address(this), asset1Amount);\r\n            contractOwner.transfer(msg.value);\r\n        }\r\n        _pools.push().poolId = poolId;\r\n        Pool storage pool = _pools[poolId];\r\n        pool.asset1 = address(asset1);\r\n        pool.asset1Amount = asset1Amount;\r\n        pool.asset2 = address(asset2);\r\n        pool.asset2Amount = 0;\r\n        pool.isAsset1NativeBlockchainCurrency = isAsset1Native;\r\n        pool.isAsset2NativeBlockchainCurrency = isAsset2Native;\r\n        pool.asset2InitiallyAskedAmount = asset2InitiallyAskedAmount;\r\n        pool.maxBuyAsset1PercentPerTransaction = maxBuyAsset1PercentPerTransaction;\r\n        pool.isConstantPrice = isConstantPrice;\r\n        pool.constantProduct = asset1Amount * asset2InitiallyAskedAmount;\r\n        pool.initialAsset1Amount = asset1Amount;\r\n        pool.poolOwner = payable(poolCreatorAddress);\r\n        pool.isLocked = false;\r\n        pool.isEmpty = false;\r\n    }\r\n\r\n    /**\r\n     * Exchanges asset for asset from a simple pool.\r\n     * \r\n     * @param personExecutingTheExchange address of the person executing the exchange\r\n     * @param poolId the poolId for the pool where the exchange happens\r\n     * @param isBuyingAsset1 boolean flag indicating whether asset1 is requested\r\n     *            for buying in the transaction. If the value of the flag is true\r\n     *            then asset2 from the pool is sold for asset1. Otherwise if the\r\n     *            value of the flag is false then asset1 from the pool is sold for asset2.\r\n     * @param sellAmount the amount of asset to sell for the exchange\r\n     * @param minReceiveAssetToBuyAmount the minimum amount received from assetToBuy.\r\n     *        This param ensures that front-runner bots cannot take advantage of the\r\n     *        transaction. This should be set automatically by simplepools.org or\r\n     *        calculated manually\r\n     * @return the actual amount bought from the transaction\r\n     */\r\n    function exchangeAsset(\r\n        address personExecutingTheExchange,\r\n        uint64 poolId,\r\n        bool isBuyingAsset1,\r\n        uint256 sellAmount, \r\n        uint256 minReceiveAssetToBuyAmount\r\n    ) external payable returns (uint256) {\r\n        require(poolId < _pools.length, \"Invalid poolId\");\r\n        Pool storage pool = _pools[poolId];\r\n        require(!pool.isEmpty, \"Pool is empty\");\r\n        _allTransactionsPoolIds.push(poolId);\r\n\r\n        if (isBuyingAsset1) {\r\n            uint256 amountOut;\r\n            if (pool.isConstantPrice) {\r\n                // amountOut = (sellAmount*initialAsset1Amount)/asset2InitiallyAskedAmount\r\n                amountOut = Math.mulDiv(sellAmount, pool.initialAsset1Amount, pool.asset2InitiallyAskedAmount);\r\n            } else {\r\n                // amountOut = asset1Amount - constantProduct/(asset2InitiallyAsked+asset2Amount+sellAmount)\r\n                amountOut = pool.asset1Amount -\r\n                    pool.constantProduct / (pool.asset2InitiallyAskedAmount + pool.asset2Amount + sellAmount);\r\n            }\r\n            // maxBuyAsset1PercentPerTransaction correction of amountOut\r\n            amountOut = Math.min(amountOut, \r\n                    Math.mulDiv(pool.asset1Amount, pool.maxBuyAsset1PercentPerTransaction, 100));\r\n            require(minReceiveAssetToBuyAmount <= amountOut,\"minReceive is less than calcualted amount\");\r\n            // complete the transaction now\r\n\r\n            // transfer asset2 to the pool\r\n            uint256 taxDivided = contractTransactionTax / 2;\r\n            if (pool.isAsset2NativeBlockchainCurrency) {\r\n                require(msg.value >= sellAmount + contractTransactionTax, \"lower transaction value\");\r\n                payable(this).transfer(sellAmount); // move funds to the pool\r\n                pool.poolOwner.transfer(taxDivided);\r\n                contractOwner.transfer(msg.value - sellAmount - taxDivided);\r\n            } else {\r\n                require(msg.value >= contractTransactionTax, \"lower transaction value\");\r\n                IERC20(pool.asset2).transferFrom(personExecutingTheExchange, address(this), sellAmount);\r\n                pool.poolOwner.transfer(taxDivided);\r\n                contractOwner.transfer(msg.value - taxDivided);\r\n            }\r\n            pool.asset2Amount += sellAmount;\r\n            // transfer asset1 from the pool\r\n            if (pool.isAsset1NativeBlockchainCurrency) {\r\n                payable(personExecutingTheExchange).transfer(amountOut);\r\n            } else {\r\n                IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut);\r\n            }\r\n            pool.asset1Amount -= amountOut;\r\n\r\n            pool.constantProduct = (pool.asset1Amount) * (pool.asset2Amount + pool.asset2InitiallyAskedAmount);\r\n            return amountOut;\r\n        } else { // is buying asset2 by selling asset1\r\n            require(pool.asset2Amount > 0, \"zero amount of asset2 for buy in the pool\");\r\n            uint256 amountOut;\r\n            if (pool.isConstantPrice) {\r\n                // amountOut = (sellAmount * asset2InitiallyAskedAmount) / initialAsset1Amount\r\n                amountOut = Math.mulDiv(sellAmount, pool.asset2InitiallyAskedAmount, pool.initialAsset1Amount);\r\n            } else {\r\n                amountOut = pool.asset2InitiallyAskedAmount + pool.asset2Amount -\r\n                        pool.constantProduct / (pool.asset1Amount + sellAmount);\r\n            }\r\n            // sell only from the available amount in the pool\r\n            amountOut = Math.min(amountOut, pool.asset2Amount);\r\n            require(minReceiveAssetToBuyAmount <= amountOut,\"minReceive is more than calcualted amount\");\r\n            // complete the transaction now\r\n            uint256 taxDivided = contractTransactionTax / 2;\r\n            // transfer asset1 to the pool\r\n            if (pool.isAsset1NativeBlockchainCurrency) {\r\n                require(msg.value >= sellAmount + contractTransactionTax, \"lower transaction value\");\r\n                payable(this).transfer(sellAmount);\r\n                pool.poolOwner.transfer(taxDivided);\r\n                contractOwner.transfer(msg.value - sellAmount - taxDivided);\r\n            } else {\r\n                require(msg.value >= contractTransactionTax, \"lower transaction value\");\r\n                IERC20(pool.asset1).transferFrom(personExecutingTheExchange, address(this), sellAmount);\r\n                pool.poolOwner.transfer(taxDivided);\r\n                contractOwner.transfer(msg.value - taxDivided);\r\n            }\r\n            pool.asset1Amount += sellAmount;\r\n            // transfer asset2 from the pool\r\n            if (pool.isAsset2NativeBlockchainCurrency) {\r\n                payable(personExecutingTheExchange).transfer(amountOut);\r\n            } else {\r\n                IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut);\r\n            }\r\n            pool.asset2Amount -= amountOut;\r\n            pool.constantProduct = (pool.asset1Amount) * (pool.asset2Amount + pool.asset2InitiallyAskedAmount);\r\n            return amountOut;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transfers all assets (asset1 and asset2) from a pool to\r\n     * the pool owner. Only callable by the pool owner.\r\n     *\r\n     * @param poolId the poolId of the pool\r\n     */\r\n    function getAllAssetsFromPool(\r\n            uint64 poolId) external payable {\r\n        require(_pools.length > poolId, \"invalid pool id\");\r\n        Pool storage pool = _pools[poolId];\r\n        require(!pool.isLocked, \"pool is locked\");\r\n        require(!pool.isEmpty, \"pool is empty\");\r\n        require(pool.poolOwner == msg.sender, \"only the pool owner can empty pool\");\r\n        _allTransactionsPoolIds.push(poolId);\r\n        require(msg.value >= contractTransactionTax, \"lower tax specified\");\r\n        contractOwner.transfer(msg.value); // transfer the tax to the owner\r\n        if (pool.isAsset1NativeBlockchainCurrency) {\r\n            payable(msg.sender).transfer(pool.asset1Amount);\r\n        } else {\r\n            IERC20(pool.asset1).transfer(msg.sender, pool.asset1Amount);\r\n        }\r\n        pool.asset1Amount = 0;\r\n\r\n        if (pool.isAsset2NativeBlockchainCurrency) {\r\n            payable(msg.sender).transfer(pool.asset2Amount);\r\n        } else {\r\n            IERC20(pool.asset2).transfer(msg.sender, pool.asset2Amount);\r\n        }\r\n        pool.asset2Amount = 0;\r\n        pool.asset2InitiallyAskedAmount = 0;\r\n        pool.isEmpty = true;\r\n    }\r\n\r\n    /**\r\n     * Locks a pool. Only callable by the pool owner.\r\n     * Locked pools cannot be unlocked and the assets cannot be taken from the pool owner.\r\n     *\r\n     * @param poolId the id of the pool\r\n     */\r\n    function lockPool(\r\n            uint64 poolId) external payable {\r\n        require(_pools.length > poolId, \"invalid pool id\");\r\n        Pool storage pool = _pools[poolId];\r\n        require(!pool.isLocked, \"pool is already locked\");\r\n        require(pool.poolOwner == msg.sender, \"only the pool owner can lock a pool\");\r\n        _allTransactionsPoolIds.push(poolId);\r\n        require(msg.value >= contractTransactionTax, \"lower tax specified\");\r\n        contractOwner.transfer(msg.value); // transfer the tax to the owner\r\n        pool.isLocked = true;\r\n    }\r\n\r\n    /**\r\n     * Changes the ownership of a pool. Only callable by the pool owner.\r\n     * If the owner gets compromised and is fast enough, they can transfer the ownership of the pool.\r\n     * \r\n     * @param poolId the id of the pool\r\n     * @param newPoolOwner the address of the new pool owner\r\n     */\r\n    function changeOwner(\r\n            uint64 poolId, \r\n            address newPoolOwner) external payable {\r\n        require(poolId < _pools.length, \"invalid poolId\");\r\n        Pool storage pool = _pools[poolId];\r\n        require(!pool.isLocked, \"pool is locked\");\r\n        require(pool.poolOwner == msg.sender, \"only the pool owner can change ownership\");\r\n        pool.poolOwner = payable(newPoolOwner);\r\n        _allTransactionsPoolIds.push(poolId);\r\n        require(msg.value >= contractTransactionTax, \"lower tax specified\");\r\n        contractOwner.transfer(msg.value); // transfer the tax to the owner\r\n    }\r\n\r\n    /**\r\n     * Changes maxBuyAsset1PercentPerTransaction. Only callable by the pool owner.\r\n     * \r\n     * @param poolId the id of the pool\r\n     * @param newMaxBuyAsset1PercentPerTransaction the new maxBuyAsset1PercentPerTransaction\r\n     */\r\n    function changePoolMaxBuyAsset1PercentPerTransaction(\r\n            uint64 poolId, \r\n            uint8 newMaxBuyAsset1PercentPerTransaction) external payable {\r\n        require(poolId < _pools.length, \"invalid poolId\");\r\n        Pool storage pool = _pools[poolId];\r\n        require(!pool.isLocked, \"pool is locked\");\r\n        require(pool.poolOwner == msg.sender, \r\n                \"only the pool owner can change newMaxBuyAsset1PercentPerTransaction\");\r\n        require(newMaxBuyAsset1PercentPerTransaction <= 100 &&\r\n                    newMaxBuyAsset1PercentPerTransaction > 0, \r\n                    \"invalid max percent per transaction\");\r\n        _pools[poolId].maxBuyAsset1PercentPerTransaction = newMaxBuyAsset1PercentPerTransaction;\r\n        _allTransactionsPoolIds.push(poolId);\r\n        require(msg.value >= contractTransactionTax, \"lower tax specified\");\r\n        contractOwner.transfer(msg.value); // transfer the tax to the owner\r\n    }\r\n\r\n    /**\r\n     * Changes a pool constant product. Only callable by the pool owner.\r\n     * \r\n     * @param poolId the poolId\r\n     * @param newConstantProduct the new constant product\r\n     */\r\n    function changeContantProduct(\r\n            uint64 poolId, \r\n            uint256 newConstantProduct) external payable {\r\n        require(poolId < _pools.length, \"invalid poolId\");\r\n        Pool storage pool = _pools[poolId];\r\n        require(!pool.isLocked, \"pool is locked\");\r\n        require(pool.poolOwner == msg.sender, \"only the pool owner can change the constant product\");\r\n        require(newConstantProduct > 0, \"invalid constant product (only positive numbers)\");\r\n        pool.constantProduct = newConstantProduct;\r\n        _allTransactionsPoolIds.push(poolId);\r\n        require(msg.value >= contractTransactionTax, \"lower tax specified\");\r\n        contractOwner.transfer(msg.value); // transfer the tax to the owner\r\n    }\r\n\r\n    /**\r\n     * Returns whether a pool is locked.\r\n     * \r\n     * @param poolId the id of the pool\r\n     *\r\n     * @return true if the pool is locked\r\n     */\r\n    function isPoolLocked(uint64 poolId) external view returns (bool) {\r\n        return _pools[poolId].isLocked;\r\n    }\r\n\r\n    /**\r\n     * @return number of pools in the smart contract.\r\n     */\r\n    function getPoolsCount() external view returns (uint) {\r\n        return _pools.length;\r\n    }\r\n\r\n    /**\r\n     * Gets the states of the pools in a given range [startPoolIndex, ..., endPoolIndex).\r\n     * Start index is included and end index is not included.\r\n     * \r\n     * @param startPoolIndex the start index\r\n     * @param endPoolIndex the end index\r\n     *\r\n     * @return list of requested pools\r\n     */\r\n    function getPools(\r\n            uint64 startPoolIndex, \r\n            uint64 endPoolIndex\r\n    ) external view returns (Pool[] memory) {\r\n       require(endPoolIndex > startPoolIndex && endPoolIndex <= _pools.length, \"invalid indexes\");\r\n       Pool[] memory pools = new Pool[](endPoolIndex - startPoolIndex);\r\n       for (uint64 i = startPoolIndex; i < endPoolIndex; ++i) {\r\n            pools[i - startPoolIndex] = _pools[i];\r\n       }\r\n       return pools;\r\n    }\r\n    \r\n    /**\r\n     * Gets the states of the pools from a given starting index till the end.\r\n     * \r\n     * @param startPoolIndex the start index\r\n     *\r\n     * @return list of requested pools\r\n     */\r\n    function getPoolsFrom(\r\n            uint64 startPoolIndex) external view returns (Pool[] memory) {\r\n       require(startPoolIndex < _pools.length, \"invalid index\");\r\n       Pool[] memory pools = new Pool[](_pools.length - startPoolIndex);\r\n       for (uint64 i = startPoolIndex; i < _pools.length; ++i) {\r\n            pools[i - startPoolIndex] = _pools[i];\r\n        }\r\n        return pools;\r\n    }\r\n\r\n    /**\r\n     * Returns the states of the pools with the requested indexes.\r\n     * \r\n     * @param indexes the list of requested pool indexes\r\n     * \r\n     * @return list of requested pools\r\n     */\r\n    function getPools(\r\n            uint64[] memory indexes) external view returns (Pool[] memory) {\r\n        Pool[] memory pools = new Pool[](indexes.length);\r\n        for (uint64 i = 0; i < indexes.length; ++i) {\r\n            Pool storage pool = _pools[indexes[i]];\r\n            pools[i] = pool;\r\n        }\r\n        return pools;\r\n    }\r\n\r\n    /**\r\n     * Returns the state of a single pool.\r\n     * \r\n     * @param poolId the id of the requested pool\r\n     * \r\n     * @return the requested pool \r\n     */\r\n    function getPool(uint64 poolId) external view returns (Pool memory) {\r\n        return _pools[poolId];\r\n    }\r\n\r\n    /**\r\n     * Returns the count of all transactions executed with the smart contract.\r\n     */\r\n    function getTransactionsCount() external view returns (uint256) {\r\n        return _allTransactionsPoolIds.length;\r\n    }\r\n\r\n    /**\r\n     * Returns the list of pool indexes of the pools participating in\r\n     * the list of requested transactions in range [startTransactionIndex, ..., endTransactionIndex).\r\n     * \r\n     * @param startTransactionIndex the index of the starting transaction\r\n     * @param endTransactionIndex the index of the last transaction\r\n     *\r\n     * @return the requested list of pool indexes\r\n     */\r\n    function getPoolsForTransactionsWithIndexesBetween(\r\n            uint64 startTransactionIndex,\r\n            uint64 endTransactionIndex\r\n    ) external view returns (uint64[] memory) {\r\n        require(endTransactionIndex > startTransactionIndex && \r\n                endTransactionIndex <= _allTransactionsPoolIds.length, \"invalid indexes\");\r\n        uint64[] memory poolIndexes = new uint64[](endTransactionIndex - startTransactionIndex);\r\n        for (uint64 i = startTransactionIndex; i < endTransactionIndex; ++i) {\r\n            poolIndexes[i - startTransactionIndex] = _allTransactionsPoolIds[i];\r\n        }\r\n        return poolIndexes;\r\n    }\r\n\r\n    /**\r\n     * Returns the list of pool indexes of the pools participating in\r\n     * the list of requested transactions in range [startTransactionIndex, ..., _allTransactionsPoolIds.length).\r\n     * \r\n     * @param startTransactionIndex the index of the starting transaction\r\n     *\r\n     * @return the requested list of pool indexes\r\n     */\r\n    function getPoolsForTransactionsWithIndexesFrom(\r\n            uint64 startTransactionIndex) external view returns (uint64[] memory) {\r\n        require(startTransactionIndex < _allTransactionsPoolIds.length, \"invalid index\");\r\n        uint64[] memory poolIndexes = new uint64[](_allTransactionsPoolIds.length - startTransactionIndex);\r\n        for (uint64 i = startTransactionIndex; i < _allTransactionsPoolIds.length; ++i) {\r\n            poolIndexes[i - startTransactionIndex] = _allTransactionsPoolIds[i];\r\n        }\r\n        return poolIndexes;\r\n    }\r\n\r\n    /**\r\n     * The owner of the contract (the receiver of the taxes).\r\n     */\r\n    address payable public contractOwner;\r\n\r\n    /**\r\n     * Set the initial contract owner to the msg.sender.\r\n     */\r\n    constructor() {\r\n        contractOwner = payable(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * Function to receive native asset, msg.data must be empty.\r\n     */\r\n    receive() external payable {}\r\n\r\n    /**\r\n     * Fallback function is called when msg.data is not empty.\r\n     */\r\n    fallback() external payable {}\r\n\r\n    /**\r\n     * Gets the current native asset balance of contract.\r\n     */\r\n    function getBalance() public view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    /**\r\n     * Sets a new contract owner. Only callable by the current contract owner.\r\n     */\r\n    function setNewOwner(address newOwner) external {\r\n        require(msg.sender == contractOwner, \"only the current owner can change the owner\");\r\n        contractOwner = payable(newOwner);\r\n    }\r\n\r\n    /**\r\n     * Tax is equally divided by the contract owner and pool creator on each transaction.\r\n     */\r\n    uint256 contractTransactionTax = 10 ** 15;\r\n\r\n    /**\r\n     * This is the list of valid transaction taxes that can be set by the contract owner.\r\n     */\r\n    uint256[] validContractTransactionTaxes = [10**13, 10**14, 10**15, 10**16, 10**17];\r\n\r\n    /**\r\n     * Sets a new contractTransactionNax. Only callable by the current contract owner.\r\n     * The list of valid transaction taxes which can be set is validContractTransactionTaxes.\r\n     */\r\n    function setNewGlobalTax(uint8 newTaxIndexFromValidContractTransactionTaxes) external {\r\n        require(msg.sender == contractOwner, \"only the current owner can change the tax\");\r\n        require(newTaxIndexFromValidContractTransactionTaxes < validContractTransactionTaxes.length &&\r\n                newTaxIndexFromValidContractTransactionTaxes >= 0, \r\n                \"invalid newTaxIndexFromValidContractTransactionTaxes\");\r\n        contractTransactionTax = validContractTransactionTaxes[newTaxIndexFromValidContractTransactionTaxes];\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(\r\n        uint256 x,\r\n        uint256 y,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1);\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(\r\n        uint256 x,\r\n        uint256 y,\r\n        uint256 denominator,\r\n        Rounding rounding\r\n    ) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Interface for ERC20 assets.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"SimplePools.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for ERC20 assets.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimplePools.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"SimplePools.sol\":{\"keccak256\":\"0xe8c70c7483f57de63f1a32ba4a0d5a860ff8bf726c05e1b949f8246565a5ad03\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c15189a651b1e25ffc3c687f28bb0f0a758c2571561eab4e2cc1bbcd20dbdaf8\",\"dweb:/ipfs/QmYfrGjyCW9wbGdL5f22JYJmWF6HV5JYf7q8pNe6iyLRQL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for ERC20 assets.",
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SimplePools.sol\":26732:31876  library Math {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"SimplePools.sol\":26732:31876  library Math {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122003359bfd0cb25d1c58c01b35ffb1f62944448c8f596600076d3369814f49971c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122003359bfd0cb25d1c58c01b35ffb1f62944448c8f596600076d3369814f49971c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB CALLDATALOAD SWAP12 REVERT 0xC 0xB2 0x5D SHR PC 0xC0 SHL CALLDATALOAD SELFDESTRUCT 0xB1 0xF6 0x29 DIFFICULTY DIFFICULTY DUP13 DUP16 MSIZE PUSH7 0x76D3369814F 0x49 SWAP8 SHR PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "26732:5144:0:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea264697066735822122003359bfd0cb25d1c58c01b35ffb1f62944448c8f596600076d3369814f49971c64736f6c63430008110033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB CALLDATALOAD SWAP12 REVERT 0xC 0xB2 0x5D SHR PC 0xC0 SHL CALLDATALOAD SELFDESTRUCT 0xB1 0xF6 0x29 DIFFICULTY DIFFICULTY DUP13 DUP16 MSIZE PUSH7 0x76D3369814F 0x49 SWAP8 SHR PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "26732:5144:0:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26732,
									"end": 31876,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "library_deploy_address"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26732,
									"end": 31876,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003359bfd0cb25d1c58c01b35ffb1f62944448c8f596600076d3369814f49971c64736f6c63430008110033",
									".code": [
										{
											"begin": 26732,
											"end": 31876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26732,
											"end": 31876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 31876,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"SimplePools.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimplePools.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"SimplePools.sol\":{\"keccak256\":\"0xe8c70c7483f57de63f1a32ba4a0d5a860ff8bf726c05e1b949f8246565a5ad03\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c15189a651b1e25ffc3c687f28bb0f0a758c2571561eab4e2cc1bbcd20dbdaf8\",\"dweb:/ipfs/QmYfrGjyCW9wbGdL5f22JYJmWF6HV5JYf7q8pNe6iyLRQL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SimplePools": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_pools",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								},
								{
									"internalType": "bool",
									"name": "isAsset1NativeBlockchainCurrency",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "asset1",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isAsset2NativeBlockchainCurrency",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "asset2",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "asset1Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "asset2Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "asset2InitiallyAskedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "maxBuyAsset1PercentPerTransaction",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "constantProduct",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isConstantPrice",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "initialAsset1Amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "poolOwner",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isLocked",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isEmpty",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								},
								{
									"internalType": "uint256",
									"name": "newConstantProduct",
									"type": "uint256"
								}
							],
							"name": "changeContantProduct",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "newPoolOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								},
								{
									"internalType": "uint8",
									"name": "newMaxBuyAsset1PercentPerTransaction",
									"type": "uint8"
								}
							],
							"name": "changePoolMaxBuyAsset1PercentPerTransaction",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolCreatorAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isAsset1Native",
									"type": "bool"
								},
								{
									"internalType": "contract IERC20",
									"name": "asset1",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isAsset2Native",
									"type": "bool"
								},
								{
									"internalType": "contract IERC20",
									"name": "asset2",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "asset1Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "asset2InitiallyAskedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "maxBuyAsset1PercentPerTransaction",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "isConstantPrice",
									"type": "bool"
								}
							],
							"name": "createPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "personExecutingTheExchange",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								},
								{
									"internalType": "bool",
									"name": "isBuyingAsset1",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "sellAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minReceiveAssetToBuyAmount",
									"type": "uint256"
								}
							],
							"name": "exchangeAsset",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								}
							],
							"name": "getAllAssetsFromPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "poolId",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "isAsset1NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset1",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isAsset2NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset2",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "asset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2InitiallyAskedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "maxBuyAsset1PercentPerTransaction",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "constantProduct",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isConstantPrice",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "initialAsset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "poolOwner",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isLocked",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isEmpty",
											"type": "bool"
										}
									],
									"internalType": "struct SimplePools.Pool",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64[]",
									"name": "indexes",
									"type": "uint64[]"
								}
							],
							"name": "getPools",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "poolId",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "isAsset1NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset1",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isAsset2NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset2",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "asset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2InitiallyAskedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "maxBuyAsset1PercentPerTransaction",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "constantProduct",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isConstantPrice",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "initialAsset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "poolOwner",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isLocked",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isEmpty",
											"type": "bool"
										}
									],
									"internalType": "struct SimplePools.Pool[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "startPoolIndex",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endPoolIndex",
									"type": "uint64"
								}
							],
							"name": "getPools",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "poolId",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "isAsset1NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset1",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isAsset2NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset2",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "asset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2InitiallyAskedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "maxBuyAsset1PercentPerTransaction",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "constantProduct",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isConstantPrice",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "initialAsset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "poolOwner",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isLocked",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isEmpty",
											"type": "bool"
										}
									],
									"internalType": "struct SimplePools.Pool[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "startTransactionIndex",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endTransactionIndex",
									"type": "uint64"
								}
							],
							"name": "getPoolsForTransactionsWithIndexesBetween",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "startTransactionIndex",
									"type": "uint64"
								}
							],
							"name": "getPoolsForTransactionsWithIndexesFrom",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "startPoolIndex",
									"type": "uint64"
								}
							],
							"name": "getPoolsFrom",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "poolId",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "isAsset1NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset1",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isAsset2NativeBlockchainCurrency",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "asset2",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "asset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2Amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "asset2InitiallyAskedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "maxBuyAsset1PercentPerTransaction",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "constantProduct",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isConstantPrice",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "initialAsset1Amount",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "poolOwner",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isLocked",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isEmpty",
											"type": "bool"
										}
									],
									"internalType": "struct SimplePools.Pool[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTransactionsCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								}
							],
							"name": "isPoolLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "poolId",
									"type": "uint64"
								}
							],
							"name": "lockPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "newTaxIndexFromValidContractTransactionTaxes",
									"type": "uint8"
								}
							],
							"name": "setNewGlobalTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "setNewOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"changeContantProduct(uint64,uint256)": {
								"params": {
									"newConstantProduct": "the new constant product",
									"poolId": "the poolId"
								}
							},
							"changeOwner(uint64,address)": {
								"params": {
									"newPoolOwner": "the address of the new pool owner",
									"poolId": "the id of the pool"
								}
							},
							"changePoolMaxBuyAsset1PercentPerTransaction(uint64,uint8)": {
								"params": {
									"newMaxBuyAsset1PercentPerTransaction": "the new maxBuyAsset1PercentPerTransaction",
									"poolId": "the id of the pool"
								}
							},
							"createPool(address,bool,address,bool,address,uint256,uint256,uint8,bool)": {
								"params": {
									"asset1": "*",
									"asset1Amount": "*",
									"asset2": "*",
									"asset2InitiallyAskedAmount": "*",
									"isAsset1Native": "*",
									"isAsset2Native": "*",
									"isConstantPrice": "*",
									"maxBuyAsset1PercentPerTransaction": "*",
									"poolCreatorAddress": "the address of the pool creator"
								}
							},
							"exchangeAsset(address,uint64,bool,uint256,uint256)": {
								"params": {
									"isBuyingAsset1": "boolean flag indicating whether asset1 is requested            for buying in the transaction. If the value of the flag is true            then asset2 from the pool is sold for asset1. Otherwise if the            value of the flag is false then asset1 from the pool is sold for asset2.",
									"minReceiveAssetToBuyAmount": "the minimum amount received from assetToBuy.        This param ensures that front-runner bots cannot take advantage of the        transaction. This should be set automatically by simplepools.org or        calculated manually",
									"personExecutingTheExchange": "address of the person executing the exchange",
									"poolId": "the poolId for the pool where the exchange happens",
									"sellAmount": "the amount of asset to sell for the exchange"
								},
								"returns": {
									"_0": "the actual amount bought from the transaction"
								}
							},
							"getAllAssetsFromPool(uint64)": {
								"params": {
									"poolId": "the poolId of the pool"
								}
							},
							"getPool(uint64)": {
								"params": {
									"poolId": "the id of the requested pool "
								},
								"returns": {
									"_0": "the requested pool "
								}
							},
							"getPools(uint64,uint64)": {
								"params": {
									"endPoolIndex": "the end index",
									"startPoolIndex": "the start index"
								},
								"returns": {
									"_0": "list of requested pools"
								}
							},
							"getPools(uint64[])": {
								"params": {
									"indexes": "the list of requested pool indexes "
								},
								"returns": {
									"_0": "list of requested pools"
								}
							},
							"getPoolsCount()": {
								"returns": {
									"_0": "number of pools in the smart contract."
								}
							},
							"getPoolsForTransactionsWithIndexesBetween(uint64,uint64)": {
								"params": {
									"endTransactionIndex": "the index of the last transaction",
									"startTransactionIndex": "the index of the starting transaction"
								},
								"returns": {
									"_0": "the requested list of pool indexes"
								}
							},
							"getPoolsForTransactionsWithIndexesFrom(uint64)": {
								"params": {
									"startTransactionIndex": "the index of the starting transaction"
								},
								"returns": {
									"_0": "the requested list of pool indexes"
								}
							},
							"getPoolsFrom(uint64)": {
								"params": {
									"startPoolIndex": "the start index"
								},
								"returns": {
									"_0": "list of requested pools"
								}
							},
							"isPoolLocked(uint64)": {
								"params": {
									"poolId": "the id of the pool"
								},
								"returns": {
									"_0": "true if the pool is locked"
								}
							},
							"lockPool(uint64)": {
								"params": {
									"poolId": "the id of the pool"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  0x80\n  jumpi(tag_1, callvalue)\n    /* \"SimplePools.sol\":25686:25694  10 ** 15 */\n  0x038d7ea4c68000\n  0x03\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  dup2\n  swap1\n  sstore\n    /* \"SimplePools.sol\":25686:25694  10 ** 15 */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  0xa0\n  dup3\n  add\n  dup2\n  dup2\n  gt\n  dup4\n  dup3\n  lt\n  or\n  tag_3\n  jumpi\n  0x40\n  mstore\n    /* \"SimplePools.sol\":25855:25861  10**13 */\n  0x09184e72a000\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  dup3\n  mstore\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  0x20\n  swap3\n    /* \"SimplePools.sol\":25863:25869  10**14 */\n  0x5af3107a4000\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  dup5\n  dup5\n  add\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  mstore\n  0x40\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  dup4\n  add\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  mstore\n    /* \"SimplePools.sol\":25879:25885  10**16 */\n  0x2386f26fc10000\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  0x60\n  dup4\n  add\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  mstore\n    /* \"SimplePools.sol\":25887:25893  10**17 */\n  0x016345785d8a0000\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  0x80\n  dup4\n  add\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  mstore\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  0x04\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  sload\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  swap2\n  0x05\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  swap3\n  dup4\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  0x04\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  sstore\n  dup1\n  dup5\n  lt\n  tag_5\n  jumpi\ntag_6:\n  pop\n  swap1\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  0x04\n  0x00\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  mstore\n  dup4\n  0x00\n  keccak256\n  0x00\ntag_7:\n  dup5\n  dup2\n  lt\n  tag_8\n  jumpi\n    /* \"SimplePools.sol\":24771:24806  contractOwner = payable(msg.sender) */\n  0x02\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"SimplePools.sol\":24795:24805  msg.sender */\n  caller\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  or\n  swap1\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_8:\n  dup4\n  mload\n  dup4\n  and\n  dup3\n  dup3\n  add\n  sstore\n  swap3\n  dup6\n  add\n  swap3\n  0x01\n  add\n  jump(tag_7)\ntag_5:\n  0x00\n    /* \"SimplePools.sol\":25854:25894  [10**13, 10**14, 10**15, 10**16, 10**17] */\n  0x04\n    /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n  dup2\n  mstore\n  dup5\n  dup7\n  dup3\n  keccak256\n  swap3\n  dup4\n  add\n  swap3\n  add\ntag_10:\n  dup3\n  dup2\n  lt\n  tag_11\n  jumpi\n  pop\n  pop\n  jump(tag_6)\ntag_11:\n  dup2\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_10)\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x40\n      0x80\n      dup2\n      mstore\n      0x04\n      swap1\n      dup2\n      calldatasize\n      lt\n      iszero\n      tag_37\n      jumpi\n    tag_38:\n      pop\n      pop\n      jumpi(tag_39, iszero(calldatasize))\n      stop\n    tag_39:\n      stop\n    tag_37:\n      0x00\n      swap2\n      dup3\n      calldataload\n      0xe0\n      shr\n      dup1\n      0x0376e49c\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x0c95be25\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x1e67d542\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x22668de1\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x3997663c\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x455b5adc\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x578cb8f9\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x57b0b64d\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x74d13a23\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x81d802ba\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x919adab8\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xacb8001f\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xb0b15560\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xb4ac6860\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xce606ee0\n      eq\n      tag_71\n      jumpi\n      dup1\n      0xd5700cbb\n      eq\n      tag_73\n      jumpi\n      dup1\n      0xf5a1f5b4\n      eq\n      tag_75\n      jumpi\n      dup1\n      0xf6fce7a9\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xf8c81b90\n      eq\n      tag_79\n      jumpi\n      0xfa5a67ed\n      eq\n      tag_81\n      jumpi\n      pop\n      jump(tag_38)\n    tag_81:\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_83\n      jumpi\n      tag_85\n      tag_1\n      jump\t// in\n    tag_85:\n      calldataload(0x24)\n        /* \"SimplePools.sol\":19056:19105  require(poolId < _pools.length, \"invalid poolId\") */\n      tag_86\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      dup5\n      and\n        /* \"SimplePools.sol\":19064:19086  poolId < _pools.length */\n      lt\n        /* \"SimplePools.sol\":19056:19105  require(poolId < _pools.length, \"invalid poolId\") */\n      tag_25\n      jump\t// in\n    tag_86:\n        /* \"SimplePools.sol\":19136:19150  _pools[poolId] */\n      tag_87\n      dup3\n      tag_8\n      jump\t// in\n    tag_87:\n        /* \"SimplePools.sol\":19170:19183  pool.isLocked */\n      pop\n      0x09\n      dup2\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap4\n        /* \"SimplePools.sol\":19161:19202  require(!pool.isLocked, \"pool is locked\") */\n      tag_88\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0xff\n      dup7\n      0xa0\n      shr\n      and\n        /* \"SimplePools.sol\":19169:19183  !pool.isLocked */\n      iszero\n        /* \"SimplePools.sol\":19161:19202  require(!pool.isLocked, \"pool is locked\") */\n      tag_23\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap5\n        /* \"SimplePools.sol\":19239:19249  msg.sender */\n      caller\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup7\n      and\n        /* \"SimplePools.sol\":19221:19249  pool.poolOwner == msg.sender */\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_89\n      jumpi\n        /* \"SimplePools.sol\":19324:19346  newConstantProduct > 0 */\n      dup3\n      iszero\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_91\n      jumpi\n        /* \"SimplePools.sol\":19410:19430  pool.constantProduct */\n      pop\n      dup6\n      swap4\n        /* \"SimplePools.sol\":19462:19498  _allTransactionsPoolIds.push(poolId) */\n      tag_93\n        /* \"SimplePools.sol\":19410:19430  pool.constantProduct */\n      dup6\n      swap5\n      dup6\n      swap5\n      0x06\n      dup7\n      swap6\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n        /* \"SimplePools.sol\":19462:19498  _allTransactionsPoolIds.push(poolId) */\n      tag_13\n      jump\t// in\n    tag_93:\n        /* \"SimplePools.sol\":19509:19576  require(msg.value >= contractTransactionTax, \"lower tax specified\") */\n      tag_94\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload(0x03)\n        /* \"SimplePools.sol\":19517:19526  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":19517:19552  msg.value >= contractTransactionTax */\n      lt\n      iszero\n        /* \"SimplePools.sol\":19509:19576  require(msg.value >= contractTransactionTax, \"lower tax specified\") */\n      tag_24\n      jump\t// in\n    tag_94:\n        /* \"SimplePools.sol\":19587:19600  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":19587:19620  contractOwner.transfer(msg.value) */\n      dup2\n        /* \"SimplePools.sol\":19517:19526  msg.value */\n      swap1\n      callvalue\n        /* \"SimplePools.sol\":19587:19620  contractOwner.transfer(msg.value) */\n      iszero\n      tag_95\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_96:\n        /* \"SimplePools.sol\":19517:19526  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":19587:19620  contractOwner.transfer(msg.value) */\n      swap2\n      call\n      iszero\n      tag_97\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n      dup1\n      return\n        /* \"SimplePools.sol\":19587:19620  contractOwner.transfer(msg.value) */\n    tag_97:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":19587:19620  contractOwner.transfer(msg.value) */\n    tag_95:\n      0x08fc\n      swap2\n      pop\n      jump(tag_96)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_91:\n      0x84\n      swap1\n      0x20\n      dup8\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x30\n      0x24\n      dup3\n      add\n      mstore\n      0x696e76616c696420636f6e7374616e742070726f6475637420286f6e6c792070\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x80, 0x6f736974697665206e756d6265727329)\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_89:\n      0x84\n      swap1\n      0x20\n      dup8\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x33\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c792074686520706f6f6c206f776e65722063616e206368616e67652074\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x1a194818dbdb9cdd185b9d081c1c9bd91d58dd)\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_83:\n      dup3\n      dup1\n      revert\n    tag_79:\n      dup3\n      dup5\n      jumpi(tag_101, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_101\n      jumpi\n      tag_103\n      tag_1\n      jump\t// in\n    tag_103:\n      swap1\n      dup2\n        /* \"SimplePools.sol\":20710:20751  new Pool[](endPoolIndex - startPoolIndex) */\n      tag_104\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_105\n      tag_2\n      jump\t// in\n    tag_105:\n        /* \"SimplePools.sol\":20721:20750  endPoolIndex - startPoolIndex */\n      tag_106\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap6\n      dup3\n        /* \"SimplePools.sol\":20588:20678  require(endPoolIndex > startPoolIndex && endPoolIndex <= _pools.length, \"invalid indexes\") */\n      tag_107\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup9\n      dup1\n      swap6\n      and\n      swap8\n      dup6\n      dup5\n      and\n        /* \"SimplePools.sol\":20596:20625  endPoolIndex > startPoolIndex */\n      dup10\n      gt\n        /* \"SimplePools.sol\":20596:20658  endPoolIndex > startPoolIndex && endPoolIndex <= _pools.length */\n      swap1\n      dup2\n      tag_108\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_109:\n        /* \"SimplePools.sol\":20588:20678  require(endPoolIndex > startPoolIndex && endPoolIndex <= _pools.length, \"invalid indexes\") */\n      pop\n      tag_26\n      jump\t// in\n    tag_107:\n        /* \"SimplePools.sol\":20721:20750  endPoolIndex - startPoolIndex */\n      tag_27\n      jump\t// in\n    tag_106:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      and\n        /* \"SimplePools.sol\":20710:20751  new Pool[](endPoolIndex - startPoolIndex) */\n      tag_29\n      jump\t// in\n    tag_104:\n        /* \"SimplePools.sol\":20766:20791  uint64 i = startPoolIndex */\n      swap3\n      dup2\n        /* \"SimplePools.sol\":20793:20809  i < endPoolIndex */\n    tag_110:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      dup3\n      dup3\n      and\n        /* \"SimplePools.sol\":20793:20809  i < endPoolIndex */\n      lt\n      tag_111\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      mload\n      dup1\n      tag_113\n      dup8\n      dup3\n      tag_4\n      jump\t// in\n    tag_113:\n      sub\n      swap1\n      return\n        /* \"SimplePools.sol\":20811:20814  ++i */\n    tag_111:\n        /* \"SimplePools.sol\":20859:20868  _pools[i] */\n      dup1\n        /* \"SimplePools.sol\":20831:20868  pools[i - startPoolIndex] = _pools[i] */\n      tag_114\n        /* \"SimplePools.sol\":20859:20868  _pools[i] */\n      tag_115\n        /* \"SimplePools.sol\":20811:20814  ++i */\n      tag_116\n        /* \"SimplePools.sol\":20859:20868  _pools[i] */\n      swap4\n      tag_8\n      jump\t// in\n    tag_115:\n        /* \"SimplePools.sol\":20837:20855  i - startPoolIndex */\n      pop\n      dup5\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_117\n        /* \"SimplePools.sol\":20837:20855  i - startPoolIndex */\n      tag_118\n      dup9\n      dup7\n      tag_27\n      jump\t// in\n    tag_118:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap3\n      tag_32\n      jump\t// in\n    tag_117:\n      swap2\n      and\n        /* \"SimplePools.sol\":20831:20868  pools[i - startPoolIndex] = _pools[i] */\n      swap1\n      tag_119\n      dup3\n      dup11\n      tag_31\n      jump\t// in\n    tag_119:\n      mstore\n      dup8\n      tag_31\n      jump\t// in\n    tag_114:\n      pop\n        /* \"SimplePools.sol\":20811:20814  ++i */\n      tag_30\n      jump\t// in\n    tag_116:\n        /* \"SimplePools.sol\":20766:20791  uint64 i = startPoolIndex */\n      jump(tag_110)\n        /* \"SimplePools.sol\":20596:20658  endPoolIndex > startPoolIndex && endPoolIndex <= _pools.length */\n    tag_108:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      pop\n      sload\n        /* \"SimplePools.sol\":20629:20658  endPoolIndex <= _pools.length */\n      dup9\n      gt\n      iszero\n        /* \"SimplePools.sol\":20596:20658  endPoolIndex > startPoolIndex && endPoolIndex <= _pools.length */\n      dup12\n      jump(tag_109)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_101:\n      dup1\n      revert\n    tag_77:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_83\n      jumpi\n      tag_122\n      tag_1\n      jump\t// in\n    tag_122:\n      calldataload(0x24)\n      0xff\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_123\n      jumpi\n        /* \"SimplePools.sol\":17946:17995  require(poolId < _pools.length, \"invalid poolId\") */\n      tag_125\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      dup5\n      and\n        /* \"SimplePools.sol\":17954:17976  poolId < _pools.length */\n      lt\n        /* \"SimplePools.sol\":17946:17995  require(poolId < _pools.length, \"invalid poolId\") */\n      tag_25\n      jump\t// in\n    tag_125:\n        /* \"SimplePools.sol\":18060:18073  pool.isLocked */\n      0x09\n        /* \"SimplePools.sol\":18026:18040  _pools[poolId] */\n      tag_126\n      dup4\n      tag_8\n      jump\t// in\n    tag_126:\n        /* \"SimplePools.sol\":18060:18073  pool.isLocked */\n      pop\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap3\n        /* \"SimplePools.sol\":18051:18092  require(!pool.isLocked, \"pool is locked\") */\n      tag_127\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0xff\n      dup6\n      0xa0\n      shr\n      and\n        /* \"SimplePools.sol\":18059:18073  !pool.isLocked */\n      iszero\n        /* \"SimplePools.sol\":18051:18092  require(!pool.isLocked, \"pool is locked\") */\n      tag_23\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap4\n        /* \"SimplePools.sol\":18129:18139  msg.sender */\n      caller\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup6\n      and\n        /* \"SimplePools.sol\":18111:18139  pool.poolOwner == msg.sender */\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_128\n      jumpi\n        /* \"SimplePools.sol\":18288:18291  100 */\n      0x64\n        /* \"SimplePools.sol\":18248:18291  newMaxBuyAsset1PercentPerTransaction <= 100 */\n      dup3\n      gt\n      iszero\n        /* \"SimplePools.sol\":18248:18356  newMaxBuyAsset1PercentPerTransaction <= 100 &&... */\n      dup1\n      tag_130\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_131:\n      iszero\n      tag_132\n      jumpi\n        /* \"SimplePools.sol\":18429:18443  _pools[poolId] */\n      pop\n      dup5\n      dup1\n      swap4\n        /* \"SimplePools.sol\":18527:18563  _allTransactionsPoolIds.push(poolId) */\n      tag_93\n        /* \"SimplePools.sol\":18429:18443  _pools[poolId] */\n      dup5\n      dup4\n      swap6\n      swap5\n        /* \"SimplePools.sol\":18429:18477  _pools[poolId].maxBuyAsset1PercentPerTransaction */\n      0x05\n        /* \"SimplePools.sol\":18429:18443  _pools[poolId] */\n      tag_135\n      dup7\n      swap8\n      tag_8\n      jump\t// in\n    tag_135:\n        /* \"SimplePools.sol\":18429:18477  _pools[poolId].maxBuyAsset1PercentPerTransaction */\n      pop\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"SimplePools.sol\":18527:18563  _allTransactionsPoolIds.push(poolId) */\n      tag_13\n      jump\t// in\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_132:\n      0x84\n      swap1\n      0x20\n      dup7\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x696e76616c6964206d61782070657263656e7420706572207472616e73616374\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe9, 0x34b7b7)\n        /* \"SimplePools.sol\":18288:18291  100 */\n      0x64\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      add\n      mstore\n      revert\n        /* \"SimplePools.sol\":18248:18356  newMaxBuyAsset1PercentPerTransaction <= 100 &&... */\n    tag_130:\n        /* \"SimplePools.sol\":18316:18356  newMaxBuyAsset1PercentPerTransaction > 0 */\n      pop\n      dup2\n      iszero\n      iszero\n        /* \"SimplePools.sol\":18248:18356  newMaxBuyAsset1PercentPerTransaction <= 100 &&... */\n      jump(tag_131)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_128:\n      0xa4\n      swap1\n      0x20\n      dup7\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x43\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206e\n      0x44\n      dup3\n      add\n      mstore\n      0x65774d617842757941737365743150657263656e745065725472616e73616374\n      0x64\n      dup3\n      add\n      mstore\n      shl(0xe9, 0x34b7b7)\n      0x84\n      dup3\n      add\n      mstore\n      revert\n    tag_123:\n      dup5\n      dup1\n      revert\n    tag_75:\n      pop\n      swap1\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      tag_145\n      tag_10\n      jump\t// in\n    tag_145:\n        /* \"SimplePools.sol\":25423:25436  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      dup6\n      and\n        /* \"SimplePools.sol\":25409:25419  msg.sender */\n      caller\n        /* \"SimplePools.sol\":25409:25436  msg.sender == contractOwner */\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_146\n      jumpi\n      pop\n      pop\n      and\n      swap1\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      and\n      or\n        /* \"SimplePools.sol\":25423:25436  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n      dup1\n      return\n    tag_146:\n      swap1\n      0x20\n      0x84\n      swap3\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x2b\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c79207468652063757272656e74206f776e65722063616e206368616e67\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xa9, 0x32903a34329037bbb732b9)\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_73:\n      pop\n      pop\n      jumpi(tag_148, slt(add(not(0x03), calldatasize), 0xa0))\n      tag_150\n      tag_10\n      jump\t// in\n    tag_150:\n      tag_151\n      tag_2\n      jump\t// in\n    tag_151:\n      swap3\n      calldataload(0x44)\n      swap1\n      dup2\n      iszero\n      iszero\n      dup3\n      sub\n      tag_101\n      jumpi\n      pop\n      swap3\n      tag_154\n      swap2\n      0x20\n      swap5\n      calldataload(0x84)\n      swap3\n      calldataload(0x64)\n      swap3\n      tag_21\n      jump\t// in\n    tag_154:\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_148:\n      pop\n      dup1\n      revert\n    tag_71:\n      pop\n      pop\n      jumpi(tag_148, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_148\n      jumpi\n        /* \"SimplePools.sol\":24625:24661  address payable public contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_69:\n      pop\n      pop\n      jumpi(tag_148, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_148\n      jumpi\n      0x20\n      swap2\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_67:\n      pop\n      swap1\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      tag_165\n      tag_1\n      jump\t// in\n    tag_165:\n      swap2\n        /* \"SimplePools.sol\":16115:16165  require(_pools.length > poolId, \"invalid pool id\") */\n      tag_166\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup5\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      dup6\n      and\n      lt\n        /* \"SimplePools.sol\":16115:16165  require(_pools.length > poolId, \"invalid pool id\") */\n      tag_22\n      jump\t// in\n    tag_166:\n        /* \"SimplePools.sol\":16230:16243  pool.isLocked */\n      0x09\n        /* \"SimplePools.sol\":16196:16210  _pools[poolId] */\n      tag_167\n      dup5\n      tag_8\n      jump\t// in\n    tag_167:\n        /* \"SimplePools.sol\":16230:16243  pool.isLocked */\n      pop\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap3\n      dup4\n      sload\n      swap2\n      0xff\n      dup4\n      0xa0\n      shr\n      and\n      tag_168\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n        /* \"SimplePools.sol\":16307:16317  msg.sender */\n      caller\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup5\n      and\n        /* \"SimplePools.sol\":16289:16317  pool.poolOwner == msg.sender */\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_170\n      jumpi\n        /* \"SimplePools.sol\":16368:16404  _allTransactionsPoolIds.push(poolId) */\n      pop\n      dup5\n      dup1\n      dup1\n      swap4\n      tag_172\n      dup3\n      swap5\n      tag_13\n      jump\t// in\n    tag_172:\n        /* \"SimplePools.sol\":16415:16482  require(msg.value >= contractTransactionTax, \"lower tax specified\") */\n      tag_173\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload(0x03)\n        /* \"SimplePools.sol\":16423:16432  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":16423:16458  msg.value >= contractTransactionTax */\n      lt\n      iszero\n        /* \"SimplePools.sol\":16415:16482  require(msg.value >= contractTransactionTax, \"lower tax specified\") */\n      tag_24\n      jump\t// in\n    tag_173:\n        /* \"SimplePools.sol\":16493:16506  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":16493:16526  contractOwner.transfer(msg.value) */\n      dup2\n        /* \"SimplePools.sol\":16423:16432  msg.value */\n      swap1\n      callvalue\n        /* \"SimplePools.sol\":16493:16526  contractOwner.transfer(msg.value) */\n      iszero\n      tag_174\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_175:\n        /* \"SimplePools.sol\":16423:16432  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":16493:16526  contractOwner.transfer(msg.value) */\n      swap2\n      call\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n      dup1\n      return\n        /* \"SimplePools.sol\":16493:16526  contractOwner.transfer(msg.value) */\n    tag_176:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload\n      swap2\n      returndatasize\n      swap2\n      pop\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":16493:16526  contractOwner.transfer(msg.value) */\n    tag_174:\n      0x08fc\n      swap2\n      pop\n      jump(tag_175)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_170:\n      0x84\n      swap1\n      0x20\n      dup6\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c792074686520706f6f6c206f776e65722063616e206c6f636b20612070\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xea, 0x1bdbdb)\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_168:\n      0x64\n      swap1\n      0x20\n      dup6\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x52, 0x1c1bdbdb081a5cc8185b1c9958591e481b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n    tag_65:\n      dup3\n      dup5\n      jumpi(tag_101, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_101\n      jumpi\n      pop\n      tag_182\n      tag_1\n      jump\t// in\n    tag_182:\n      tag_183\n      tag_2\n      jump\t// in\n    tag_183:\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n        /* \"SimplePools.sol\":23362:23419  new uint64[](endTransactionIndex - startTransactionIndex) */\n      tag_184\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup5\n        /* \"SimplePools.sol\":23375:23418  endTransactionIndex - startTransactionIndex */\n      tag_185\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      dup3\n      dup6\n      and\n      swap5\n      dup4\n      dup3\n      and\n        /* \"SimplePools.sol\":23183:23226  endTransactionIndex > startTransactionIndex */\n      dup7\n      gt\n        /* \"SimplePools.sol\":23183:23301  endTransactionIndex > startTransactionIndex && ... */\n      dup1\n      tag_186\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_187:\n        /* \"SimplePools.sol\":23175:23321  require(endTransactionIndex > startTransactionIndex && ... */\n      tag_107\n      swap1\n      tag_26\n      jump\t// in\n        /* \"SimplePools.sol\":23375:23418  endTransactionIndex - startTransactionIndex */\n    tag_185:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      and\n        /* \"SimplePools.sol\":23362:23419  new uint64[](endTransactionIndex - startTransactionIndex) */\n      tag_34\n      jump\t// in\n    tag_184:\n        /* \"SimplePools.sol\":23435:23467  uint64 i = startTransactionIndex */\n      swap3\n      dup1\n        /* \"SimplePools.sol\":23469:23492  i < endTransactionIndex */\n    tag_189:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      dup7\n      dup3\n      and\n        /* \"SimplePools.sol\":23469:23492  i < endTransactionIndex */\n      lt\n      tag_190\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      mload\n      dup1\n      tag_113\n      dup8\n      dup3\n      tag_9\n      jump\t// in\n        /* \"SimplePools.sol\":23494:23497  ++i */\n    tag_190:\n        /* \"SimplePools.sol\":23555:23581  _allTransactionsPoolIds[i] */\n      dup1\n      dup7\n      tag_193\n        /* \"SimplePools.sol\":23494:23497  ++i */\n      tag_194\n        /* \"SimplePools.sol\":23555:23581  _allTransactionsPoolIds[i] */\n      swap4\n      tag_12\n      jump\t// in\n    tag_193:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      and\n        /* \"SimplePools.sol\":23514:23581  poolIndexes[i - startTransactionIndex] = _allTransactionsPoolIds[i] */\n      tag_195\n        /* \"SimplePools.sol\":23526:23551  i - startTransactionIndex */\n      dup9\n      tag_196\n      dup7\n      dup6\n      tag_27\n      jump\t// in\n    tag_196:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      and\n        /* \"SimplePools.sol\":23514:23581  poolIndexes[i - startTransactionIndex] = _allTransactionsPoolIds[i] */\n      dup9\n      tag_31\n      jump\t// in\n    tag_195:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mstore\n        /* \"SimplePools.sol\":23494:23497  ++i */\n      tag_30\n      jump\t// in\n    tag_194:\n        /* \"SimplePools.sol\":23435:23467  uint64 i = startTransactionIndex */\n      jump(tag_189)\n        /* \"SimplePools.sol\":23183:23301  endTransactionIndex > startTransactionIndex && ... */\n    tag_186:\n      pop\n        /* \"SimplePools.sol\":23271:23294  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":23248:23301  endTransactionIndex <= _allTransactionsPoolIds.length */\n      dup7\n      gt\n      iszero\n        /* \"SimplePools.sol\":23183:23301  endTransactionIndex > startTransactionIndex && ... */\n      jump(tag_187)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_63:\n      pop\n      pop\n      jumpi(tag_148, callvalue)\n      jumpi(tag_148, slt(add(not(0x03), calldatasize), 0x20))\n      0x01e0\n      swap1\n      tag_201\n      tag_202\n        /* \"SimplePools.sol\":22322:22336  _pools[poolId] */\n      tag_203\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_204\n      tag_1\n      jump\t// in\n    tag_204:\n      tag_205\n      tag_28\n      jump\t// in\n    tag_205:\n      pop\n        /* \"SimplePools.sol\":22322:22336  _pools[poolId] */\n      tag_8\n      jump\t// in\n    tag_203:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n      tag_32\n      jump\t// in\n    tag_202:\n      swap2\n      mload\n      dup1\n      swap3\n      tag_3\n      jump\t// in\n    tag_201:\n      return\n    tag_61:\n      pop\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_83\n      jumpi\n      tag_208\n      tag_1\n      jump\t// in\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      calldataload(0x24)\n      dup4\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_209\n      jumpi\n        /* \"SimplePools.sol\":17027:17076  require(poolId < _pools.length, \"invalid poolId\") */\n      tag_211\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      dup6\n      and\n        /* \"SimplePools.sol\":17035:17057  poolId < _pools.length */\n      lt\n        /* \"SimplePools.sol\":17027:17076  require(poolId < _pools.length, \"invalid poolId\") */\n      tag_25\n      jump\t// in\n    tag_211:\n        /* \"SimplePools.sol\":17141:17154  pool.isLocked */\n      0x09\n        /* \"SimplePools.sol\":17107:17121  _pools[poolId] */\n      tag_212\n      dup5\n      tag_8\n      jump\t// in\n    tag_212:\n        /* \"SimplePools.sol\":17141:17154  pool.isLocked */\n      pop\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap2\n      dup3\n      sload\n      swap1\n        /* \"SimplePools.sol\":17132:17173  require(!pool.isLocked, \"pool is locked\") */\n      tag_213\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0xff\n      dup4\n      0xa0\n      shr\n      and\n        /* \"SimplePools.sol\":17140:17154  !pool.isLocked */\n      iszero\n        /* \"SimplePools.sol\":17132:17173  require(!pool.isLocked, \"pool is locked\") */\n      tag_23\n      jump\t// in\n    tag_213:\n        /* \"SimplePools.sol\":17210:17220  msg.sender */\n      caller\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      dup4\n      and\n        /* \"SimplePools.sol\":17192:17220  pool.poolOwner == msg.sender */\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_214\n      jumpi\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup3\n      and\n      dup4\n      or\n      dup5\n      sstore\n      dup8\n      dup8\n      dup2\n      dup1\n      dup1\n      dup1\n      dup12\n        /* \"SimplePools.sol\":17325:17361  _allTransactionsPoolIds.push(poolId) */\n      tag_93\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup13\n        /* \"SimplePools.sol\":17325:17361  _allTransactionsPoolIds.push(poolId) */\n      tag_13\n      jump\t// in\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_214:\n      0x84\n      swap1\n      0x20\n      dup9\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x28\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206f\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xc4, 0x0776e65727368697)\n      0x64\n      dup3\n      add\n      mstore\n      revert\n    tag_209:\n      dup6\n      dup1\n      revert\n    tag_59:\n      pop\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      calldataload\n      swap2\n      0xff\n      dup4\n      and\n      swap1\n      dup2\n      dup5\n      sub\n      tag_123\n      jumpi\n        /* \"SimplePools.sol\":26223:26236  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"SimplePools.sol\":26209:26219  msg.sender */\n      caller\n        /* \"SimplePools.sol\":26209:26236  msg.sender == contractOwner */\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_228\n      jumpi\n      dup3\n      sload\n        /* \"SimplePools.sol\":26301:26384  newTaxIndexFromValidContractTransactionTaxes < validContractTransactionTaxes.length */\n      dup1\n      swap3\n      lt\n        /* \"SimplePools.sol\":26301:26454  newTaxIndexFromValidContractTransactionTaxes < validContractTransactionTaxes.length &&... */\n      dup1\n      tag_230\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_231:\n      iszero\n      tag_232\n      jumpi\n      pop\n      dup3\n      lt\n      iszero\n      tag_234\n      jumpi\n      pop\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      add\n      sload\n      0x03\n      sstore\n      dup1\n      return\n    tag_234:\n      shl(0xe0, 0x4e487b71)\n      dup4\n      mstore\n      0x32\n      swap1\n      mstore\n      0x24\n      dup3\n      revert\n    tag_232:\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      dup2\n      dup5\n      add\n      mstore\n      0x34\n      0x24\n      dup3\n      add\n      mstore\n      0x696e76616c6964206e6577546178496e64657846726f6d56616c6964436f6e74\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x60, 0x726163745472616e73616374696f6e5461786573)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"SimplePools.sol\":26301:26454  newTaxIndexFromValidContractTransactionTaxes < validContractTransactionTaxes.length &&... */\n    tag_230:\n      pop\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x01\n        /* \"SimplePools.sol\":26301:26454  newTaxIndexFromValidContractTransactionTaxes < validContractTransactionTaxes.length &&... */\n      jump(tag_231)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_228:\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      dup2\n      dup5\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c79207468652063757272656e74206f776e65722063616e206368616e67\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xbb, 0x0ca40e8d0ca40e8c2f)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_57:\n      pop\n      swap2\n      swap1\n      jumpi(tag_148, slt(add(not(0x03), calldatasize), 0x0120))\n      tag_238\n      tag_10\n      jump\t// in\n    tag_238:\n      swap1\n      calldataload(0x24)\n      swap1\n      dup2\n      iszero\n      iszero\n      swap1\n      dup2\n      dup4\n      sub\n      tag_123\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      calldataload(0x44)\n      dup5\n      dup2\n      and\n      swap1\n      dup2\n      dup2\n      sub\n      tag_241\n      jumpi\n      calldataload(0x64)\n      dup1\n      iszero\n      iszero\n      dup1\n      swap2\n      sub\n      tag_243\n      jumpi\n      calldataload(0x84)\n      dup8\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_245\n      jumpi\n      calldataload(0xa4)\n      swap7\n      calldataload(0xc4)\n      swap7\n      calldataload(0xe4)\n      swap7\n      0xff\n      dup9\n      and\n      dup1\n      swap9\n      sub\n      tag_247\n      jumpi\n      calldataload(0x0104)\n      swap7\n      dup8\n      iszero\n      iszero\n      dup1\n      swap9\n      sub\n      tag_249\n      jumpi\n      sload(0x03)\n        /* \"SimplePools.sol\":6989:7049  contractTransactionTax + (isAsset1Native ? asset1Amount : 0) */\n      tag_251\n      swap1\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup16\n        /* \"SimplePools.sol\":7015:7048  isAsset1Native ? asset1Amount : 0 */\n      dup5\n      iszero\n      tag_252\n      jumpi\n      pop\n      dup13\n      swap1\n        /* \"SimplePools.sol\":6989:7049  contractTransactionTax + (isAsset1Native ? asset1Amount : 0) */\n      tag_11\n      jump\t// in\n    tag_251:\n        /* \"SimplePools.sol\":7068:7077  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":7068:7101  msg.value >= nativeAmountRequired */\n      lt\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_255\n      jumpi\n      dup13\n      dup16\n      dup16\n      swap3\n      dup14\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup6\n      sload\n      and\n        /* \"SimplePools.sol\":7208:7244  _allTransactionsPoolIds.push(poolId) */\n      swap6\n      tag_257\n      dup8\n      tag_13\n      jump\t// in\n    tag_257:\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"SimplePools.sol\":7290:7326  payable(this).transfer(asset1Amount) */\n      pop\n      pop\n      pop\n      pop\n      dup1\n      dup12\n      dup1\n      iszero\n      tag_260\n      jumpi\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n    tag_261:\n        /* \"SimplePools.sol\":7298:7302  this */\n      dup3\n      dup1\n      swap3\n      swap2\n      dup2\n      swap3\n      address\n        /* \"SimplePools.sol\":7290:7326  payable(this).transfer(asset1Amount) */\n      swap1\n      call\n      iszero\n      tag_267\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup13\n      dup1\n      dup1\n      dup1\n      dup14\n      dup16\n        /* \"SimplePools.sol\":7364:7388  msg.value - asset1Amount */\n      tag_264\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n        /* \"SimplePools.sol\":7341:7354  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":7068:7077  msg.value */\n      swap2\n      callvalue\n        /* \"SimplePools.sol\":7364:7388  msg.value - asset1Amount */\n      tag_16\n      jump\t// in\n    tag_264:\n        /* \"SimplePools.sol\":7341:7389  contractOwner.transfer(msg.value - asset1Amount) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_265\n      jumpi\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n    tag_266:\n        /* \"SimplePools.sol\":7341:7389  contractOwner.transfer(msg.value - asset1Amount) */\n      call\n      iszero\n      tag_267\n      jumpi\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n    tag_269:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup13\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_270\n      jumpi\n      swap2\n      dup14\n      swap15\n      swap6\n      swap4\n      swap2\n      dup4\n      dup16\n      swap15\n      swap16\n      swap14\n      swap15\n      0x01\n      dup14\n      swap11\n      swap9\n      swap7\n      add\n      swap1\n      sstore\n      tag_272\n      swap1\n      tag_8\n      jump\t// in\n    tag_272:\n      pop\n      dup1\n      sload\n      not(0xffffffffffffffff)\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"SimplePools.sol\":7620:7634  _pools[poolId] */\n      tag_273\n      swap1\n      tag_8\n      jump\t// in\n    tag_273:\n      pop\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      sload\n        /* \"SimplePools.sol\":7685:7702  pool.asset1Amount */\n      0x02\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup14\n      swap1\n      sstore\n      0x01\n        /* \"SimplePools.sol\":7728:7739  pool.asset2 */\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      swap5\n      sstore\n      0x03\n        /* \"SimplePools.sol\":7768:7785  pool.asset2Amount */\n      dup2\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap13\n      swap1\n      swap13\n      sstore\n      shl(0xe8, 0xff)\n      0xe8\n      swap5\n      swap1\n      swap5\n      shl\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      shl\n      0xff0000000000000000\n      and\n      sub(shl(0xe8, 0x01), 0x01000000000000000000)\n      0x48\n      swap5\n      swap1\n      swap5\n      shl\n      swap4\n      swap1\n      swap4\n      and\n      not(sub(shl(0xf0, 0x01), 0x010000000000000000))\n      swap1\n      swap2\n      and\n      or\n      swap2\n      swap1\n      swap2\n      or\n      or\n      dup8\n      sstore\n        /* \"SimplePools.sol\":7930:7961  pool.asset2InitiallyAskedAmount */\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n        /* \"SimplePools.sol\":8001:8039  pool.maxBuyAsset1PercentPerTransaction */\n      0x05\n      dup6\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      sload\n      not(0xff)\n      swap1\n      dup2\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      sstore\n        /* \"SimplePools.sol\":8086:8106  pool.isConstantPrice */\n      0x07\n      dup6\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      0xff\n      swap2\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"SimplePools.sol\":8158:8199  asset1Amount * asset2InitiallyAskedAmount */\n      tag_274\n      swap1\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n        /* \"SimplePools.sol\":8158:8199  asset1Amount * asset2InitiallyAskedAmount */\n      tag_17\n      jump\t// in\n    tag_274:\n        /* \"SimplePools.sol\":8135:8155  pool.constantProduct */\n      0x06\n      dup4\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n        /* \"SimplePools.sol\":8210:8234  pool.initialAsset1Amount */\n      0x08\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n        /* \"SimplePools.sol\":8260:8274  pool.poolOwner */\n      0x09\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap2\n      and\n      shl(0xb0, 0xffffffffffffffffffff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      dup1\n      return\n    tag_270:\n      pop\n      pop\n      shl(0xe0, 0x4e487b71)\n      dup13\n      mstore\n      0x41\n      dup14\n      mstore\n      0x24\n      dup13\n      revert\n        /* \"SimplePools.sol\":7341:7389  contractOwner.transfer(msg.value - asset1Amount) */\n    tag_267:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup2\n      mload\n      returndatasize\n      dup15\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":7341:7389  contractOwner.transfer(msg.value - asset1Amount) */\n    tag_265:\n      pop\n      0x08fc\n      jump(tag_266)\n        /* \"SimplePools.sol\":7290:7326  payable(this).transfer(asset1Amount) */\n    tag_260:\n      0x08fc\n      swap2\n      pop\n      jump(tag_261)\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n    tag_258:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      mload\n      shl(0xe0, 0x23b872dd)\n        /* \"SimplePools.sol\":7422:7490  asset1.transferFrom(poolCreatorAddress, address(this), asset1Amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      swap5\n      and\n        /* \"SimplePools.sol\":7422:7490  asset1.transferFrom(poolCreatorAddress, address(this), asset1Amount) */\n      swap1\n      dup5\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup2\n      mstore\n        /* \"SimplePools.sol\":7470:7474  this */\n      address\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x20\n      dup3\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap3\n      swap4\n      swap2\n      swap3\n      dup5\n      swap3\n      dup4\n      swap2\n      dup3\n      swap1\n      0x60\n      add\n        /* \"SimplePools.sol\":7422:7490  asset1.transferFrom(poolCreatorAddress, address(this), asset1Amount) */\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_276\n      jumpi\n      dup15\n      dup1\n      dup15\n      dup2\n      swap5\n      dup3\n      swap5\n      tag_278\n      jumpi\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n    tag_279:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n        /* \"SimplePools.sol\":7505:7518  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":7505:7538  contractOwner.transfer(msg.value) */\n      dup2\n        /* \"SimplePools.sol\":7068:7077  msg.value */\n      swap1\n      callvalue\n        /* \"SimplePools.sol\":7505:7538  contractOwner.transfer(msg.value) */\n      iszero\n      tag_280\n      jumpi\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n    tag_281:\n        /* \"SimplePools.sol\":7068:7077  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":7505:7538  contractOwner.transfer(msg.value) */\n      swap2\n      call\n        /* \"SimplePools.sol\":7255:7550  if (isAsset1Native) {... */\n      tag_269\n        /* \"SimplePools.sol\":7505:7538  contractOwner.transfer(msg.value) */\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup2\n      mload\n      returndatasize\n      dup15\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":7505:7538  contractOwner.transfer(msg.value) */\n    tag_280:\n      0x08fc\n      swap2\n      pop\n      jump(tag_281)\n        /* \"SimplePools.sol\":7422:7490  asset1.transferFrom(poolCreatorAddress, address(this), asset1Amount) */\n    tag_278:\n      tag_284\n      swap1\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x20\n        /* \"SimplePools.sol\":7422:7490  asset1.transferFrom(poolCreatorAddress, address(this), asset1Amount) */\n      returndatasize\n      dup2\n      gt\n      tag_285\n      jumpi\n    tag_286:\n      tag_287\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_287:\n      dup2\n      add\n      swap1\n      tag_14\n      jump\t// in\n    tag_284:\n      pop\n      codesize\n      jump(tag_279)\n    tag_285:\n      pop\n      returndatasize\n      jump(tag_286)\n    tag_276:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup15\n      dup5\n      mload\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_255:\n      0x84\n      dup16\n      0x20\n      dup6\n      mload\n      swap2\n      shl(0xe5, 0x461bcd)\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x4c6f776572207468616e20746865207265717569726564207472616e73616374\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xb8, 0x696f6e2076616c7565)\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"SimplePools.sol\":7015:7048  isAsset1Native ? asset1Amount : 0 */\n    tag_252:\n      swap1\n        /* \"SimplePools.sol\":6989:7049  contractTransactionTax + (isAsset1Native ? asset1Amount : 0) */\n      tag_11\n      jump\t// in\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_249:\n      dup14\n      dup1\n      revert\n    tag_247:\n      dup13\n      dup1\n      revert\n    tag_245:\n      dup10\n      dup1\n      revert\n    tag_243:\n      dup9\n      dup1\n      revert\n    tag_241:\n      dup8\n      dup1\n      revert\n    tag_55:\n      pop\n      pop\n      jumpi(tag_148, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_148\n      jumpi\n      0x20\n      swap1\n        /* \"SimplePools.sol\":22532:22555  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap1\n      mload\n      swap1\n      dup2\n      mstore\n      return\n    tag_53:\n      dup3\n      dup5\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      pop\n      tag_296\n      tag_1\n      jump\t// in\n    tag_296:\n        /* \"SimplePools.sol\":24158:24181  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n        /* \"SimplePools.sol\":24247:24315  new uint64[](_allTransactionsPoolIds.length - startTransactionIndex) */\n      tag_297\n        /* \"SimplePools.sol\":24260:24314  _allTransactionsPoolIds.length - startTransactionIndex */\n      tag_298\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      dup6\n      and\n        /* \"SimplePools.sol\":24126:24206  require(startTransactionIndex < _allTransactionsPoolIds.length, \"invalid index\") */\n      tag_299\n        /* \"SimplePools.sol\":24134:24188  startTransactionIndex < _allTransactionsPoolIds.length */\n      dup5\n      dup3\n      lt\n        /* \"SimplePools.sol\":24126:24206  require(startTransactionIndex < _allTransactionsPoolIds.length, \"invalid index\") */\n      tag_33\n      jump\t// in\n    tag_299:\n        /* \"SimplePools.sol\":24260:24314  _allTransactionsPoolIds.length - startTransactionIndex */\n      dup4\n      tag_16\n      jump\t// in\n    tag_298:\n        /* \"SimplePools.sol\":24247:24315  new uint64[](_allTransactionsPoolIds.length - startTransactionIndex) */\n      tag_34\n      jump\t// in\n    tag_297:\n        /* \"SimplePools.sol\":24331:24363  uint64 i = startTransactionIndex */\n      swap3\n      dup1\n        /* \"SimplePools.sol\":24365:24399  i < _allTransactionsPoolIds.length */\n    tag_300:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      dup7\n      dup3\n      and\n        /* \"SimplePools.sol\":24365:24399  i < _allTransactionsPoolIds.length */\n      lt\n      tag_301\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      mload\n      dup1\n      tag_113\n      dup8\n      dup3\n      tag_9\n      jump\t// in\n        /* \"SimplePools.sol\":24401:24404  ++i */\n    tag_301:\n        /* \"SimplePools.sol\":24462:24488  _allTransactionsPoolIds[i] */\n      dup1\n      dup7\n      tag_193\n        /* \"SimplePools.sol\":24401:24404  ++i */\n      tag_305\n        /* \"SimplePools.sol\":24462:24488  _allTransactionsPoolIds[i] */\n      swap4\n      tag_12\n      jump\t// in\n        /* \"SimplePools.sol\":24401:24404  ++i */\n    tag_305:\n        /* \"SimplePools.sol\":24331:24363  uint64 i = startTransactionIndex */\n      jump(tag_300)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_51:\n      pop\n      jumpi(tag_83, callvalue)\n      jumpi(tag_83, slt(add(not(0x03), calldatasize), 0x20))\n      dup1\n      calldataload\n      swap3\n      dup1\n      sload\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      dup5\n      lt\n      iszero\n      tag_101\n      jumpi\n      pop\n      tag_314\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x01e0\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap4\n      tag_8\n      jump\t// in\n    tag_314:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n      dup1\n      sload\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap1\n      dup2\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x01\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      0x02\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      0x03\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      dup4\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap6\n      dup4\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap6\n      0xff\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap7\n      dup8\n      0x05\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap2\n      0x06\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap4\n      dup10\n      0x07\n      dup9\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap6\n      dup11\n      0x09\n      0x08\n      dup11\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":4948:4968  Pool[] public _pools */\n      swap10\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap11\n      dup14\n      mload\n      dup1\n      swap15\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      and\n      dup3\n      mstore\n      dup4\n      dup4\n      dup3\n      shr\n      and\n      iszero\n      iszero\n      0x20\n      dup4\n      add\n      mstore\n      dup13\n      dup4\n      0x48\n      shr\n      and\n      swap2\n      add\n      mstore\n      0xe8\n      shr\n      and\n      iszero\n      iszero\n      0x60\n      dup14\n      add\n      mstore\n      0x80\n      dup13\n      add\n      mstore\n      0xa0\n      dup12\n      add\n      mstore\n      0xc0\n      dup11\n      add\n      mstore\n      0xe0\n      dup10\n      add\n      mstore\n      0x0100\n      dup9\n      add\n      mstore\n      0x0120\n      dup8\n      add\n      mstore\n      iszero\n      iszero\n      0x0140\n      dup7\n      add\n      mstore\n      0x0160\n      dup6\n      add\n      mstore\n      dup2\n      and\n      0x0180\n      dup5\n      add\n      mstore\n      dup2\n      dup2\n      0xa0\n      shr\n      and\n      iszero\n      iszero\n      0x01a0\n      dup5\n      add\n      mstore\n      0xa8\n      shr\n      and\n      iszero\n      iszero\n      0x01c0\n      dup3\n      add\n      mstore\n      return\n    tag_49:\n      pop\n      dup3\n      jumpi(tag_101, callvalue)\n      0x20\n      swap2\n      dup3\n      add(calldatasize, not(0x03))\n      slt\n      tag_148\n      jumpi\n      dup1\n      calldataload\n      swap3\n      sub(shl(0x40, 0x01), 0x01)\n      swap2\n      dup3\n      dup6\n      gt\n      tag_321\n      jumpi\n      calldatasize\n      0x23\n      dup7\n      add\n      slt\n      iszero\n      tag_321\n      jumpi\n      dup5\n      add\n      calldataload\n      swap4\n      tag_323\n      dup6\n      tag_7\n      jump\t// in\n    tag_323:\n      swap5\n      tag_324\n      dup8\n      mload\n      swap7\n      dup8\n      tag_6\n      jump\t// in\n    tag_324:\n      dup1\n      dup7\n      mstore\n      0x24\n      dup4\n      dup8\n      add\n      swap2\n      0x05\n      shl\n      dup4\n      add\n      add\n      swap2\n      calldatasize\n      dup4\n      gt\n      tag_209\n      jumpi\n      0x24\n      add\n      swap1\n    tag_327:\n      dup3\n      dup3\n      lt\n      tag_328\n      jumpi\n      pop\n      pop\n      pop\n      pop\n        /* \"SimplePools.sol\":21855:21881  new Pool[](indexes.length) */\n      tag_330\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      mload\n        /* \"SimplePools.sol\":21855:21881  new Pool[](indexes.length) */\n      tag_29\n      jump\t// in\n    tag_330:\n        /* \"SimplePools.sol\":21897:21909  uint64 i = 0 */\n      swap2\n        /* \"SimplePools.sol\":21931:21934  ++i */\n    tag_331:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      mload\n      dup3\n      dup3\n      and\n        /* \"SimplePools.sol\":21911:21929  i < indexes.length */\n      swap1\n      dup2\n      lt\n      iszero\n      tag_332\n      jumpi\n        /* \"SimplePools.sol\":21978:21988  indexes[i] */\n      swap1\n        /* \"SimplePools.sol\":22004:22019  pools[i] = pool */\n      tag_114\n        /* \"SimplePools.sol\":21978:21988  indexes[i] */\n      dup3\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_335\n        /* \"SimplePools.sol\":21971:21989  _pools[indexes[i]] */\n      tag_203\n        /* \"SimplePools.sol\":21978:21988  indexes[i] */\n      dup7\n      tag_337\n        /* \"SimplePools.sol\":21931:21934  ++i */\n      tag_338\n        /* \"SimplePools.sol\":21978:21988  indexes[i] */\n      swap8\n      dup12\n      tag_31\n      jump\t// in\n    tag_337:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload\n      and\n        /* \"SimplePools.sol\":21971:21989  _pools[indexes[i]] */\n      tag_8\n      jump\t// in\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_335:\n        /* \"SimplePools.sol\":22004:22019  pools[i] = pool */\n      tag_339\n      dup3\n      dup9\n      tag_31\n      jump\t// in\n    tag_339:\n      mstore\n      dup6\n      tag_31\n      jump\t// in\n        /* \"SimplePools.sol\":21931:21934  ++i */\n    tag_338:\n        /* \"SimplePools.sol\":21897:21909  uint64 i = 0 */\n      jump(tag_331)\n        /* \"SimplePools.sol\":21911:21929  i < indexes.length */\n    tag_332:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      mload\n      dup1\n      tag_113\n        /* \"SimplePools.sol\":21911:21929  i < indexes.length */\n      dup7\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      tag_4\n      jump\t// in\n    tag_328:\n      dup2\n      calldataload\n      dup6\n      dup2\n      and\n      dup2\n      sub\n      tag_341\n      jumpi\n      dup2\n      mstore\n      swap1\n      dup4\n      add\n      swap1\n      dup4\n      add\n      jump(tag_327)\n    tag_341:\n      dup7\n      dup1\n      revert\n    tag_321:\n      dup4\n      dup1\n      revert\n    tag_47:\n      pop\n      pop\n      jumpi(tag_148, callvalue)\n      jumpi(tag_148, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      0xff\n        /* \"SimplePools.sol\":19914:19937  _pools[poolId].isLocked */\n      0x09\n        /* \"SimplePools.sol\":19914:19928  _pools[poolId] */\n      tag_347\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_348\n      tag_1\n      jump\t// in\n    tag_348:\n        /* \"SimplePools.sol\":19914:19928  _pools[poolId] */\n      tag_8\n      jump\t// in\n    tag_347:\n        /* \"SimplePools.sol\":19914:19937  _pools[poolId].isLocked */\n      pop\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      0xa0\n      shr\n      and\n      swap1\n      mload\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_45:\n      pop\n      pop\n      jumpi(tag_148, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_148\n      jumpi\n      mload\n        /* \"SimplePools.sol\":25207:25228  address(this).balance */\n      selfbalance\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_43:\n      pop\n      dup3\n      swap1\n      0x20\n      swap1\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_83\n      jumpi\n      tag_355\n      tag_1\n      jump\t// in\n    tag_355:\n      swap4\n        /* \"SimplePools.sol\":14745:14795  require(_pools.length > poolId, \"invalid pool id\") */\n      tag_356\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup5\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      dup8\n      and\n      lt\n        /* \"SimplePools.sol\":14745:14795  require(_pools.length > poolId, \"invalid pool id\") */\n      tag_22\n      jump\t// in\n    tag_356:\n        /* \"SimplePools.sol\":14826:14840  _pools[poolId] */\n      tag_357\n      dup6\n      tag_8\n      jump\t// in\n    tag_357:\n        /* \"SimplePools.sol\":14860:14873  pool.isLocked */\n      pop\n      swap1\n      0x09\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap4\n      dup5\n      sload\n        /* \"SimplePools.sol\":14851:14892  require(!pool.isLocked, \"pool is locked\") */\n      tag_358\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0xff\n      dup3\n      0xa0\n      shr\n      and\n        /* \"SimplePools.sol\":14859:14873  !pool.isLocked */\n      iszero\n        /* \"SimplePools.sol\":14851:14892  require(!pool.isLocked, \"pool is locked\") */\n      tag_23\n      jump\t// in\n    tag_358:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0xff\n      dup2\n      0xa8\n      shr\n      and\n      tag_359\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n        /* \"SimplePools.sol\":14979:14989  msg.sender */\n      caller\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup3\n      and\n        /* \"SimplePools.sol\":14961:14989  pool.poolOwner == msg.sender */\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_361\n      jumpi\n        /* \"SimplePools.sol\":15039:15075  _allTransactionsPoolIds.push(poolId) */\n      tag_363\n      dup8\n      swap9\n      swap8\n      swap7\n      swap8\n      tag_13\n      jump\t// in\n    tag_363:\n        /* \"SimplePools.sol\":15086:15153  require(msg.value >= contractTransactionTax, \"lower tax specified\") */\n      tag_364\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload(0x03)\n        /* \"SimplePools.sol\":15094:15103  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":15094:15129  msg.value >= contractTransactionTax */\n      lt\n      iszero\n        /* \"SimplePools.sol\":15086:15153  require(msg.value >= contractTransactionTax, \"lower tax specified\") */\n      tag_24\n      jump\t// in\n    tag_364:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      dup1\n      dup1\n      dup1\n      dup5\n        /* \"SimplePools.sol\":15164:15177  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":15164:15197  contractOwner.transfer(msg.value) */\n      dup2\n        /* \"SimplePools.sol\":15094:15103  msg.value */\n      swap1\n      callvalue\n        /* \"SimplePools.sol\":15164:15197  contractOwner.transfer(msg.value) */\n      iszero\n      tag_365\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_366:\n        /* \"SimplePools.sol\":15094:15103  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":15164:15197  contractOwner.transfer(msg.value) */\n      swap2\n      call\n      iszero\n      tag_373\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      sload\n      dup3\n      dup2\n      dup6\n      shr\n      0xff\n      and\n      iszero\n      tag_369\n      jumpi\n        /* \"SimplePools.sol\":15328:15345  pool.asset1Amount */\n      pop\n      pop\n      dup6\n      dup1\n      dup1\n      dup1\n        /* \"SimplePools.sol\":15164:15177  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":15328:15345  pool.asset1Amount */\n      dup9\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":15299:15346  payable(msg.sender).transfer(pool.asset1Amount) */\n      dup2\n      dup2\n      iszero\n      tag_371\n      jumpi\n        /* \"SimplePools.sol\":15241:15450  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_372:\n        /* \"SimplePools.sol\":14979:14989  msg.sender */\n      caller\n        /* \"SimplePools.sol\":15299:15346  payable(msg.sender).transfer(pool.asset1Amount) */\n      swap1\n      call\n      iszero\n      tag_373\n      jumpi\n        /* \"SimplePools.sol\":15241:15450  if (pool.isAsset1NativeBlockchainCurrency) {... */\n      dup6\n      swap1\n    tag_375:\n        /* \"SimplePools.sol\":15460:15477  pool.asset1Amount */\n      dup2\n        /* \"SimplePools.sol\":15164:15177  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":15460:15477  pool.asset1Amount */\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n      0xff\n      dup6\n      sload\n      0xe8\n      shr\n      and\n        /* \"SimplePools.sol\":15494:15703  if (pool.isAsset2NativeBlockchainCurrency) {... */\n      0x00\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      eq\n      tag_376\n      jumpi\n        /* \"SimplePools.sol\":15581:15598  pool.asset2Amount */\n      pop\n      dup1\n      dup1\n      dup1\n      swap4\n      pop\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x03\n        /* \"SimplePools.sol\":15581:15598  pool.asset2Amount */\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":15552:15599  payable(msg.sender).transfer(pool.asset2Amount) */\n      dup2\n      dup2\n      iszero\n      tag_378\n      jumpi\n        /* \"SimplePools.sol\":15494:15703  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_379:\n        /* \"SimplePools.sol\":14979:14989  msg.sender */\n      caller\n        /* \"SimplePools.sol\":15552:15599  payable(msg.sender).transfer(pool.asset2Amount) */\n      swap1\n      call\n      iszero\n      tag_380\n      jumpi\n        /* \"SimplePools.sol\":15494:15703  if (pool.isAsset2NativeBlockchainCurrency) {... */\n      pop\n    tag_382:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x03\n        /* \"SimplePools.sol\":15713:15730  pool.asset2Amount */\n      dup2\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      swap1\n      sstore\n        /* \"SimplePools.sol\":15745:15776  pool.asset2InitiallyAskedAmount */\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n      dup1\n      return\n        /* \"SimplePools.sol\":15552:15599  payable(msg.sender).transfer(pool.asset2Amount) */\n    tag_380:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":15552:15599  payable(msg.sender).transfer(pool.asset2Amount) */\n    tag_378:\n      pop\n      0x08fc\n      jump(tag_379)\n        /* \"SimplePools.sol\":15494:15703  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_376:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x01\n        /* \"SimplePools.sol\":15639:15650  pool.asset2 */\n      dup6\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      0x03\n        /* \"SimplePools.sol\":15673:15690  pool.asset2Amount */\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      dup6\n      mload\n      shl(0xe0, 0xa9059cbb)\n        /* \"SimplePools.sol\":15632:15691  IERC20(pool.asset2).transfer(msg.sender, pool.asset2Amount) */\n      dup2\n      mstore\n        /* \"SimplePools.sol\":14979:14989  msg.sender */\n      caller\n        /* \"SimplePools.sol\":15632:15691  IERC20(pool.asset2).transfer(msg.sender, pool.asset2Amount) */\n      dup10\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"SimplePools.sol\":15639:15650  pool.asset2 */\n      swap5\n      swap6\n      swap4\n      dup7\n      swap4\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      swap4\n      and\n      swap2\n      dup4\n      swap2\n        /* \"SimplePools.sol\":15639:15650  pool.asset2 */\n      swap1\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap1\n      0x40\n      add\n        /* \"SimplePools.sol\":15632:15691  IERC20(pool.asset2).transfer(msg.sender, pool.asset2Amount) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_384\n      jumpi\n      pop\n      tag_386\n      jumpi\n        /* \"SimplePools.sol\":15494:15703  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_387:\n      pop\n      pop\n      jump(tag_382)\n        /* \"SimplePools.sol\":15632:15691  IERC20(pool.asset2).transfer(msg.sender, pool.asset2Amount) */\n    tag_386:\n      dup2\n      tag_388\n      swap3\n      swap1\n      returndatasize\n      lt\n      tag_285\n      jumpi\n      tag_287\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_388:\n      pop\n      dup6\n      dup1\n      jump(tag_387)\n    tag_384:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload\n      returndatasize\n      dup8\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":15299:15346  payable(msg.sender).transfer(pool.asset1Amount) */\n    tag_373:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      mload\n      returndatasize\n      dup8\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":15299:15346  payable(msg.sender).transfer(pool.asset1Amount) */\n    tag_371:\n      pop\n      0x08fc\n      jump(tag_372)\n        /* \"SimplePools.sol\":15241:15450  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_369:\n        /* \"SimplePools.sol\":15164:15177  contractOwner */\n      0x02\n        /* \"SimplePools.sol\":15420:15437  pool.asset1Amount */\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      dup6\n      mload\n      shl(0xe0, 0xa9059cbb)\n        /* \"SimplePools.sol\":15379:15438  IERC20(pool.asset1).transfer(msg.sender, pool.asset1Amount) */\n      dup2\n      mstore\n        /* \"SimplePools.sol\":14979:14989  msg.sender */\n      caller\n        /* \"SimplePools.sol\":15379:15438  IERC20(pool.asset1).transfer(msg.sender, pool.asset1Amount) */\n      dup10\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap3\n      dup4\n      swap2\n        /* \"SimplePools.sol\":15379:15438  IERC20(pool.asset1).transfer(msg.sender, pool.asset1Amount) */\n      dup3\n      swap1\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x40\n        /* \"SimplePools.sol\":15379:15438  IERC20(pool.asset1).transfer(msg.sender, pool.asset1Amount) */\n      add\n      swap1\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap1\n      dup12\n      swap1\n      0x48\n      shr\n      dup8\n      and\n        /* \"SimplePools.sol\":15379:15438  IERC20(pool.asset1).transfer(msg.sender, pool.asset1Amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_393\n      jumpi\n      swap1\n      dup8\n      swap3\n      swap2\n      tag_395\n      jumpi\n        /* \"SimplePools.sol\":15241:15450  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_396:\n      pop\n      jump(tag_375)\n        /* \"SimplePools.sol\":15379:15438  IERC20(pool.asset1).transfer(msg.sender, pool.asset1Amount) */\n    tag_395:\n      tag_397\n      swap1\n      dup5\n      returndatasize\n      dup7\n      gt\n      tag_285\n      jumpi\n      tag_287\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_397:\n      pop\n      dup10\n      jump(tag_396)\n    tag_393:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup5\n      mload\n      returndatasize\n      dup10\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":15164:15197  contractOwner.transfer(msg.value) */\n    tag_365:\n      0x08fc\n      swap2\n      pop\n      jump(tag_366)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_361:\n      dup3\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      dup1\n      dup7\n      add\n      dup4\n      swap1\n      mstore\n      0x22\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c792074686520706f6f6c206f776e65722063616e20656d70747920706f\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xf2, 0x1bdb)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_359:\n      dup3\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      dup1\n      dup7\n      add\n      dup4\n      swap1\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x706f6f6c20697320656d707479)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_41:\n      dup3\n      dup5\n      jumpi(tag_101, callvalue)\n      jumpi(tag_101, slt(add(not(0x03), calldatasize), 0x20))\n      tag_405\n      tag_1\n      jump\t// in\n    tag_405:\n      swap1\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      swap2\n        /* \"SimplePools.sol\":21315:21357  new Pool[](_pools.length - startPoolIndex) */\n      tag_406\n        /* \"SimplePools.sol\":21326:21356  _pools.length - startPoolIndex */\n      tag_407\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup5\n      dup4\n      and\n        /* \"SimplePools.sol\":21227:21283  require(startPoolIndex < _pools.length, \"invalid index\") */\n      tag_408\n        /* \"SimplePools.sol\":21235:21265  startPoolIndex < _pools.length */\n      dup6\n      dup3\n      lt\n        /* \"SimplePools.sol\":21227:21283  require(startPoolIndex < _pools.length, \"invalid index\") */\n      tag_33\n      jump\t// in\n    tag_408:\n        /* \"SimplePools.sol\":21326:21356  _pools.length - startPoolIndex */\n      dup5\n      tag_16\n      jump\t// in\n    tag_407:\n        /* \"SimplePools.sol\":21315:21357  new Pool[](_pools.length - startPoolIndex) */\n      tag_29\n      jump\t// in\n    tag_406:\n        /* \"SimplePools.sol\":21372:21397  uint64 i = startPoolIndex */\n      swap3\n      dup2\n        /* \"SimplePools.sol\":21399:21416  i < _pools.length */\n    tag_409:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      dup3\n      dup3\n      and\n        /* \"SimplePools.sol\":21399:21416  i < _pools.length */\n      lt\n      tag_410\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      mload\n      dup1\n      tag_113\n      dup8\n      dup3\n      tag_4\n      jump\t// in\n        /* \"SimplePools.sol\":21418:21421  ++i */\n    tag_410:\n        /* \"SimplePools.sol\":21466:21475  _pools[i] */\n      dup1\n        /* \"SimplePools.sol\":21438:21475  pools[i - startPoolIndex] = _pools[i] */\n      tag_114\n        /* \"SimplePools.sol\":21466:21475  _pools[i] */\n      tag_115\n        /* \"SimplePools.sol\":21418:21421  ++i */\n      tag_415\n        /* \"SimplePools.sol\":21466:21475  _pools[i] */\n      swap4\n      tag_8\n      jump\t// in\n        /* \"SimplePools.sol\":21418:21421  ++i */\n    tag_415:\n        /* \"SimplePools.sol\":21372:21397  uint64 i = startPoolIndex */\n      jump(tag_409)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_419\n      jumpi\n      jump\t// out\n    tag_419:\n      0x00\n      dup1\n      revert\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_419\n      jumpi\n      jump\t// out\n    tag_3:\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      mload\n      and\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      mload\n      iszero\n      iszero\n      0x20\n      dup4\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      0x40\n      dup4\n      add\n      mload\n      and\n      0x40\n      dup5\n      add\n      mstore\n      0x60\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      0x60\n      dup5\n      add\n      mstore\n      dup1\n      0x80\n      dup4\n      add\n      mload\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0xa0\n      dup3\n      add\n      mload\n      0xa0\n      dup5\n      add\n      mstore\n      0xc0\n      dup3\n      add\n      mload\n      0xc0\n      dup5\n      add\n      mstore\n      0xe0\n      dup3\n      add\n      mload\n      0xe0\n      dup5\n      add\n      mstore\n      0x0100\n      0xff\n      dup2\n      dup5\n      add\n      mload\n      and\n      swap1\n      dup5\n      add\n      mstore\n      0x0120\n      dup1\n      dup4\n      add\n      mload\n      swap1\n      dup5\n      add\n      mstore\n      0x0140\n      dup1\n      dup4\n      add\n      mload\n      iszero\n      iszero\n      swap1\n      dup5\n      add\n      mstore\n      0x0160\n      dup1\n      dup4\n      add\n      mload\n      swap1\n      dup5\n      add\n      mstore\n      0x0180\n      swap1\n      dup2\n      dup4\n      add\n      mload\n      and\n      swap1\n      dup4\n      add\n      mstore\n      0x01a0\n      dup1\n      dup3\n      add\n      mload\n      iszero\n      iszero\n      swap1\n      dup4\n      add\n      mstore\n      0x01c0\n      dup1\n      swap2\n      add\n      mload\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_4:\n      0x20\n      swap1\n      dup2\n      0x40\n      dup2\n      dup4\n      add\n      swap3\n      dup3\n      dup2\n      mstore\n      dup6\n      mload\n      dup1\n      swap5\n      mstore\n      add\n      swap4\n      add\n      swap2\n      0x00\n    tag_423:\n      dup3\n      dup2\n      lt\n      tag_424\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_424:\n      swap1\n      swap2\n      swap3\n      swap4\n      dup3\n      0x01e0\n      dup3\n      tag_426\n      0x01\n      swap5\n      dup10\n      mload\n      tag_3\n      jump\t// in\n    tag_426:\n      add\n      swap6\n      add\n      swap4\n      swap3\n      swap2\n      add\n      jump(tag_423)\n    tag_5:\n      0x01e0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_427\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_427:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_6:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_427\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_7:\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_427\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_8:\n      swap1\n      0x00\n      swap2\n      dup3\n      sload\n      dup2\n      lt\n      iszero\n      tag_433\n      jumpi\n      0x0a\n      swap1\n      dup4\n      dup1\n      mstore\n      mul\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n      swap2\n      swap1\n      jump\t// out\n    tag_433:\n      shl(0xe0, 0x4e487b71)\n      dup4\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n      dup4\n      revert\n    tag_9:\n      0x20\n      swap1\n      dup2\n      0x40\n      dup2\n      dup4\n      add\n      swap3\n      dup3\n      dup2\n      mstore\n      dup6\n      mload\n      dup1\n      swap5\n      mstore\n      add\n      swap4\n      add\n      swap2\n      0x00\n    tag_435:\n      dup3\n      dup2\n      lt\n      tag_436\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_436:\n      dup4\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      dup6\n      mstore\n      swap4\n      dup2\n      add\n      swap4\n      swap3\n      dup2\n      add\n      swap3\n      0x01\n      add\n      jump(tag_435)\n    tag_10:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_419\n      jumpi\n      jump\t// out\n    tag_11:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_440\n      jumpi\n      jump\t// out\n    tag_440:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_12:\n      swap1\n        /* \"SimplePools.sol\":24158:24181  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      dup3\n      lt\n      iszero\n      tag_442\n      jumpi\n        /* \"SimplePools.sol\":24158:24181  _allTransactionsPoolIds */\n      0x01\n      0x00\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mstore\n      0x18\n      dup3\n      0x02\n      shr\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n      add\n      swap3\n      0x03\n      shl\n      and\n      swap1\n      jump\t// out\n    tag_442:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_13:\n        /* \"SimplePools.sol\":15039:15062  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_427\n      jumpi\n      dup1\n        /* \"SimplePools.sol\":15039:15062  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_446\n      swap3\n      add\n        /* \"SimplePools.sol\":15039:15062  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n      tag_12\n      jump\t// in\n    tag_446:\n      dup2\n      swap3\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      swap3\n      dup4\n      dup2\n      shl\n      swap4\n      dup5\n      swap3\n      and\n      swap1\n      shl\n      and\n      swap2\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\t// out\n    tag_14:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_419\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_419\n      jumpi\n      swap1\n      jump\t// out\n    tag_16:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_440\n      jumpi\n      jump\t// out\n    tag_17:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_440\n      jumpi\n      jump\t// out\n    tag_18:\n      dup2\n      iszero\n      tag_455\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_455:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n    tag_19:\n      iszero\n      tag_457\n      jumpi\n      jump\t// out\n    tag_457:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x6c6f776572207472616e73616374696f6e2076616c7565000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"SimplePools.sol\":9387:14458  function exchangeAsset(... */\n    tag_21:\n      swap3\n      swap1\n      swap3\n        /* \"SimplePools.sol\":9654:9660  _pools */\n      0x00\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap1\n      dup2\n      sload\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n      dup8\n      and\n        /* \"SimplePools.sol\":9645:9667  poolId < _pools.length */\n      lt\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      iszero\n      tag_459\n      jumpi\n      dup6\n      lt\n      iszero\n      tag_461\n      jumpi\n      dup2\n      dup1\n      mstore\n      0x0a\n      dup6\n      mul\n      swap5\n      dup6\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n      add\n        /* \"SimplePools.sol\":9751:9763  pool.isEmpty */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56c\n      dup8\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap6\n      0xff\n      swap3\n      dup4\n      dup9\n      sload\n      0xa8\n      shr\n      and\n      tag_463\n      jumpi\n        /* \"SimplePools.sol\":9792:9828  _allTransactionsPoolIds.push(poolId) */\n      tag_465\n      swap1\n      tag_13\n      jump\t// in\n    tag_465:\n        /* \"SimplePools.sol\":9841:14451  if (isBuyingAsset1) {... */\n      iszero\n      tag_466\n      jumpi\n        /* \"SimplePools.sol\":9912:9932  pool.isConstantPrice */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      dup8\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      dup3\n      and\n      iszero\n      tag_468\n      jumpi\n        /* \"SimplePools.sol\":10057:10139  Math.mulDiv(sellAmount, pool.initialAsset1Amount, pool.asset2InitiallyAskedAmount) */\n      tag_470\n        /* \"SimplePools.sol\":10081:10105  pool.initialAsset1Amount */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56b\n      dup9\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9c418048a637d1641c6d732dd38174732bbf7b47a1cf6d5f65895384518b07d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":10107:10138  pool.asset2InitiallyAskedAmount */\n      dup10\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":10057:10139  Math.mulDiv(sellAmount, pool.initialAsset1Amount, pool.asset2InitiallyAskedAmount) */\n      swap1\n      dup8\n      tag_36\n      jump\t// in\n    tag_470:\n        /* \"SimplePools.sol\":9908:10448  if (pool.isConstantPrice) {... */\n      swap6\n    tag_471:\n      0x00\n      dup1\n      mload\n      0x20\n      data_63d75db57ae45c3799740c3cd8dcee96a498324843d79ae390adc81d74b52f13\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":10602:10619  pool.asset1Amount */\n      dup9\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap7\n        /* \"SimplePools.sol\":10590:10665  Math.mulDiv(pool.asset1Amount, pool.maxBuyAsset1PercentPerTransaction, 100) */\n      tag_472\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup9\n      sload\n        /* \"SimplePools.sol\":10621:10659  pool.maxBuyAsset1PercentPerTransaction */\n      dup6\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568\n      dup13\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":10590:10665  Math.mulDiv(pool.asset1Amount, pool.maxBuyAsset1PercentPerTransaction, 100) */\n      swap1\n      tag_35\n      jump\t// in\n    tag_472:\n        /* \"SimplePools.sol\":27039:27044  a < b */\n      dup1\n      dup3\n      lt\n      iszero\n      tag_473\n      jumpi\n        /* \"SimplePools.sol\":27039:27052  a < b ? a : b */\n      pop\n      dup1\n      swap10\n    tag_475:\n        /* \"SimplePools.sol\":10689:10728  minReceiveAssetToBuyAmount <= amountOut */\n      gt\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_476\n      jumpi\n        /* \"SimplePools.sol\":10900:10922  contractTransactionTax */\n      0x03\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      swap1\n      dup2\n        /* \"SimplePools.sol\":9792:9815  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      shr\n      swap2\n      dup5\n      dup5\n      sload\n      0xe8\n      shr\n      and\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n      0x00\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      eq\n      tag_478\n      jumpi\n      pop\n        /* \"SimplePools.sol\":11003:11087  require(msg.value >= sellAmount + contractTransactionTax, \"lower transaction value\") */\n      tag_480\n        /* \"SimplePools.sol\":11024:11059  sellAmount + contractTransactionTax */\n      tag_481\n        /* \"SimplePools.sol\":10900:10922  contractTransactionTax */\n      0x03\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":11024:11059  sellAmount + contractTransactionTax */\n      dup10\n      tag_11\n      jump\t// in\n    tag_481:\n        /* \"SimplePools.sol\":11011:11020  msg.value */\n      callvalue\n        /* \"SimplePools.sol\":11011:11059  msg.value >= sellAmount + contractTransactionTax */\n      lt\n      iszero\n        /* \"SimplePools.sol\":11003:11087  require(msg.value >= sellAmount + contractTransactionTax, \"lower transaction value\") */\n      tag_19\n      jump\t// in\n    tag_480:\n        /* \"SimplePools.sol\":11106:11140  payable(this).transfer(sellAmount) */\n      dup6\n      dup1\n      dup9\n      dup1\n      iszero\n      tag_482\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_483:\n        /* \"SimplePools.sol\":11114:11118  this */\n      dup3\n      dup1\n      swap3\n      swap2\n      dup2\n      swap3\n      address\n        /* \"SimplePools.sol\":11106:11140  payable(this).transfer(sellAmount) */\n      swap1\n      call\n      iszero\n      tag_488\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      dup1\n      dup1\n      dup1\n      dup6\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap7\n      sload\n      and\n        /* \"SimplePools.sol\":11185:11220  pool.poolOwner.transfer(taxDivided) */\n      dup3\n      dup3\n      iszero\n      tag_486\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_487:\n        /* \"SimplePools.sol\":11185:11220  pool.poolOwner.transfer(taxDivided) */\n      call\n      iszero\n      tag_488\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      dup1\n      dup1\n      swap4\n        /* \"SimplePools.sol\":11262:11297  msg.value - sellAmount - taxDivided */\n      tag_490\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap5\n        /* \"SimplePools.sol\":10602:10619  pool.asset1Amount */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":11011:11020  msg.value */\n      swap2\n        /* \"SimplePools.sol\":11262:11284  msg.value - sellAmount */\n      tag_491\n        /* \"SimplePools.sol\":11011:11020  msg.value */\n      dup13\n      callvalue\n        /* \"SimplePools.sol\":11262:11284  msg.value - sellAmount */\n      tag_16\n      jump\t// in\n    tag_491:\n        /* \"SimplePools.sol\":11262:11297  msg.value - sellAmount - taxDivided */\n      tag_16\n      jump\t// in\n    tag_490:\n        /* \"SimplePools.sol\":11239:11298  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_492\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_493:\n        /* \"SimplePools.sol\":11239:11298  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n      call\n      iszero\n      tag_494\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n      swap1\n      dup8\n      swap4\n      swap3\n      swap2\n    tag_496:\n        /* \"SimplePools.sol\":11665:11696  pool.asset2Amount += sellAmount */\n      tag_497\n        /* \"SimplePools.sol\":11665:11682  pool.asset2Amount */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup10\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap7\n      dup8\n      sload\n        /* \"SimplePools.sol\":11665:11696  pool.asset2Amount += sellAmount */\n      tag_11\n      jump\t// in\n    tag_497:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      sstore\n      sload\n      swap1\n      dup2\n      0x40\n      shr\n      and\n        /* \"SimplePools.sol\":11757:11998  if (pool.isAsset1NativeBlockchainCurrency) {... */\n      0x00\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      eq\n      tag_498\n      jumpi\n        /* \"SimplePools.sol\":11819:11874  payable(personExecutingTheExchange).transfer(amountOut) */\n      pop\n      dup2\n      dup1\n      dup1\n      swap5\n      dup2\n      swap4\n      dup3\n      swap1\n      dup3\n      iszero\n      tag_500\n      jumpi\n        /* \"SimplePools.sol\":11757:11998  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_501:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      and\n      swap1\n        /* \"SimplePools.sol\":11819:11874  payable(personExecutingTheExchange).transfer(amountOut) */\n      call\n      iszero\n      tag_502\n      jumpi\n        /* \"SimplePools.sol\":11757:11998  if (pool.isAsset1NativeBlockchainCurrency) {... */\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_aaab8540682e3a537d17674663ea013e92c83fdd69958f314b4521edb3b76f1a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n        /* \"SimplePools.sol\":12105:12156  pool.asset2Amount + pool.asset2InitiallyAskedAmount */\n      tag_504\n        /* \"SimplePools.sol\":12082:12157  (pool.asset1Amount) * (pool.asset2Amount + pool.asset2InitiallyAskedAmount) */\n      tag_505\n        /* \"SimplePools.sol\":11757:11998  if (pool.isAsset1NativeBlockchainCurrency) {... */\n      swap3\n    tag_506:\n        /* \"SimplePools.sol\":12012:12042  pool.asset1Amount -= amountOut */\n      tag_507\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup8\n      dup5\n      sload\n        /* \"SimplePools.sol\":12012:12042  pool.asset1Amount -= amountOut */\n      tag_16\n      jump\t// in\n    tag_507:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      swap4\n      sstore\n      sload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9c418048a637d1641c6d732dd38174732bbf7b47a1cf6d5f65895384518b07d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":12125:12156  pool.asset2InitiallyAskedAmount */\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":12105:12156  pool.asset2Amount + pool.asset2InitiallyAskedAmount */\n      swap1\n      tag_11\n      jump\t// in\n    tag_504:\n        /* \"SimplePools.sol\":12082:12157  (pool.asset1Amount) * (pool.asset2Amount + pool.asset2InitiallyAskedAmount) */\n      swap1\n      tag_17\n      jump\t// in\n    tag_505:\n        /* \"SimplePools.sol\":12059:12079  pool.constantProduct */\n      swap2\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sstore\n        /* \"SimplePools.sol\":12172:12188  return amountOut */\n      swap1\n      jump\t// out\n        /* \"SimplePools.sol\":11819:11874  payable(personExecutingTheExchange).transfer(amountOut) */\n    tag_502:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":11819:11874  payable(personExecutingTheExchange).transfer(amountOut) */\n    tag_500:\n      0x08fc\n      swap2\n      pop\n      jump(tag_501)\n        /* \"SimplePools.sol\":11757:11998  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_498:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"SimplePools.sol\":11915:11982  IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap3\n      dup4\n      and\n        /* \"SimplePools.sol\":11915:11982  IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut) */\n      0x04\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"SimplePools.sol\":11915:11982  IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut) */\n      0x20\n      swap2\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup5\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      dup7\n      swap2\n      0x48\n      swap2\n      swap1\n      swap2\n      shr\n      and\n        /* \"SimplePools.sol\":11915:11982  IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_502\n      jumpi\n      pop\n        /* \"SimplePools.sol\":12082:12157  (pool.asset1Amount) * (pool.asset2Amount + pool.asset2InitiallyAskedAmount) */\n      tag_505\n        /* \"SimplePools.sol\":11915:11982  IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut) */\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_aaab8540682e3a537d17674663ea013e92c83fdd69958f314b4521edb3b76f1a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap5\n      swap3\n        /* \"SimplePools.sol\":12105:12156  pool.asset2Amount + pool.asset2InitiallyAskedAmount */\n      tag_504\n        /* \"SimplePools.sol\":11915:11982  IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut) */\n      swap3\n      tag_511\n      jumpi\n        /* \"SimplePools.sol\":11757:11998  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_512:\n      pop\n      jump(tag_506)\n        /* \"SimplePools.sol\":11915:11982  IERC20(pool.asset1).transfer(personExecutingTheExchange, amountOut) */\n    tag_511:\n      tag_513\n      swap1\n      0x20\n      returndatasize\n      dup2\n      gt\n      tag_285\n      jumpi\n      tag_287\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_513:\n      pop\n      codesize\n      jump(tag_512)\n        /* \"SimplePools.sol\":11239:11298  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n    tag_494:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload(0x40)\n      returndatasize\n      dup6\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":11239:11298  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n    tag_492:\n      pop\n      0x08fc\n      jump(tag_493)\n        /* \"SimplePools.sol\":11185:11220  pool.poolOwner.transfer(taxDivided) */\n    tag_488:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload(0x40)\n      returndatasize\n      dup8\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":11185:11220  pool.poolOwner.transfer(taxDivided) */\n    tag_486:\n      pop\n      0x08fc\n      jump(tag_487)\n        /* \"SimplePools.sol\":11106:11140  payable(this).transfer(sellAmount) */\n    tag_482:\n      0x08fc\n      swap2\n      pop\n      jump(tag_483)\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_478:\n        /* \"SimplePools.sol\":11347:11356  msg.value */\n      swap1\n        /* \"SimplePools.sol\":11339:11410  require(msg.value >= contractTransactionTax, \"lower transaction value\") */\n      tag_517\n        /* \"SimplePools.sol\":11436:11447  pool.asset2 */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n        /* \"SimplePools.sol\":11347:11356  msg.value */\n      swap3\n      callvalue\n        /* \"SimplePools.sol\":11347:11382  msg.value >= contractTransactionTax */\n      lt\n      iszero\n        /* \"SimplePools.sol\":11339:11410  require(msg.value >= contractTransactionTax, \"lower transaction value\") */\n      tag_19\n      jump\t// in\n    tag_517:\n        /* \"SimplePools.sol\":11436:11447  pool.asset2 */\n      swap1\n      dup10\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"SimplePools.sol\":11429:11516  IERC20(pool.asset2).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup8\n      dup2\n      and\n        /* \"SimplePools.sol\":11429:11516  IERC20(pool.asset2).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      0x04\n      dup4\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mstore\n        /* \"SimplePools.sol\":11498:11502  this */\n      address\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      dup11\n      swap1\n      mstore\n      swap3\n        /* \"SimplePools.sol\":11436:11447  pool.asset2 */\n      swap2\n        /* \"SimplePools.sol\":11429:11516  IERC20(pool.asset2).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      0x20\n      swap1\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup13\n      swap1\n      dup9\n      and\n        /* \"SimplePools.sol\":11429:11516  IERC20(pool.asset2).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_519\n      jumpi\n      dup9\n      dup6\n      dup6\n      dup3\n      swap6\n      dup4\n      swap6\n      dup5\n      swap6\n      tag_521\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_522:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n      sload\n      and\n        /* \"SimplePools.sol\":11535:11570  pool.poolOwner.transfer(taxDivided) */\n      dup3\n      dup3\n      iszero\n      tag_523\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_524:\n        /* \"SimplePools.sol\":11535:11570  pool.poolOwner.transfer(taxDivided) */\n      call\n      iszero\n      tag_488\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      dup1\n      dup1\n      swap4\n        /* \"SimplePools.sol\":11612:11634  msg.value - taxDivided */\n      tag_527\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap5\n        /* \"SimplePools.sol\":10602:10619  pool.asset1Amount */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":11347:11356  msg.value */\n      swap2\n      callvalue\n        /* \"SimplePools.sol\":11612:11634  msg.value - taxDivided */\n      tag_16\n      jump\t// in\n    tag_527:\n        /* \"SimplePools.sol\":11589:11635  contractOwner.transfer(msg.value - taxDivided) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_528\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_529:\n        /* \"SimplePools.sol\":11589:11635  contractOwner.transfer(msg.value - taxDivided) */\n      call\n      iszero\n      tag_494\n      jumpi\n        /* \"SimplePools.sol\":10941:11651  if (pool.isAsset2NativeBlockchainCurrency) {... */\n      swap1\n      dup8\n      swap4\n      swap3\n      swap2\n      jump(tag_496)\n        /* \"SimplePools.sol\":11589:11635  contractOwner.transfer(msg.value - taxDivided) */\n    tag_528:\n      pop\n      0x08fc\n      jump(tag_529)\n        /* \"SimplePools.sol\":11535:11570  pool.poolOwner.transfer(taxDivided) */\n    tag_523:\n      pop\n      0x08fc\n      jump(tag_524)\n        /* \"SimplePools.sol\":11429:11516  IERC20(pool.asset2).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n    tag_521:\n      tag_532\n      swap1\n      0x20\n      returndatasize\n      dup2\n      gt\n      tag_285\n      jumpi\n      tag_287\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_532:\n      pop\n      codesize\n      jump(tag_522)\n    tag_519:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mload(0x40)\n      returndatasize\n      dup11\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_476:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x6d696e52656365697665206973206c657373207468616e2063616c6375616c74\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xba, 0x195908185b5bdd5b9d)\n        /* \"SimplePools.sol\":10661:10664  100 */\n      0x64\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"SimplePools.sol\":27039:27052  a < b ? a : b */\n    tag_473:\n      swap1\n      pop\n      dup1\n      swap10\n      jump(tag_475)\n        /* \"SimplePools.sol\":9908:10448  if (pool.isConstantPrice) {... */\n    tag_468:\n        /* \"SimplePools.sol\":10302:10432  pool.asset1Amount -... */\n      tag_536\n      0x00\n      dup1\n      mload\n      0x20\n      data_63d75db57ae45c3799740c3cd8dcee96a498324843d79ae390adc81d74b52f13\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":10302:10319  pool.asset1Amount */\n      dup9\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":10343:10432  pool.constantProduct / (pool.asset2InitiallyAskedAmount + pool.asset2Amount + sellAmount) */\n      tag_537\n      0x00\n      dup1\n      mload\n      0x20\n      data_aaab8540682e3a537d17674663ea013e92c83fdd69958f314b4521edb3b76f1a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":10343:10363  pool.constantProduct */\n      dup11\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":10367:10431  pool.asset2InitiallyAskedAmount + pool.asset2Amount + sellAmount */\n      tag_538\n        /* \"SimplePools.sol\":10367:10398  pool.asset2InitiallyAskedAmount */\n      dup10\n        /* \"SimplePools.sol\":10367:10418  pool.asset2InitiallyAskedAmount + pool.asset2Amount */\n      tag_539\n        /* \"SimplePools.sol\":10367:10398  pool.asset2InitiallyAskedAmount */\n      dup14\n        /* \"SimplePools.sol\":10401:10418  pool.asset2Amount */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      0x00\n      dup1\n      mload\n      0x20\n      data_9c418048a637d1641c6d732dd38174732bbf7b47a1cf6d5f65895384518b07d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":10367:10398  pool.asset2InitiallyAskedAmount */\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":10401:10418  pool.asset2Amount */\n      swap2\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":10367:10418  pool.asset2InitiallyAskedAmount + pool.asset2Amount */\n      swap1\n      tag_11\n      jump\t// in\n    tag_539:\n        /* \"SimplePools.sol\":10367:10431  pool.asset2InitiallyAskedAmount + pool.asset2Amount + sellAmount */\n      tag_11\n      jump\t// in\n    tag_538:\n        /* \"SimplePools.sol\":10343:10432  pool.constantProduct / (pool.asset2InitiallyAskedAmount + pool.asset2Amount + sellAmount) */\n      swap1\n      tag_18\n      jump\t// in\n    tag_537:\n        /* \"SimplePools.sol\":10302:10432  pool.asset1Amount -... */\n      swap1\n      tag_16\n      jump\t// in\n    tag_536:\n        /* \"SimplePools.sol\":9908:10448  if (pool.isConstantPrice) {... */\n      swap6\n      jump(tag_471)\n        /* \"SimplePools.sol\":9841:14451  if (isBuyingAsset1) {... */\n    tag_466:\n        /* \"SimplePools.sol\":12267:12284  pool.asset2Amount */\n      swap5\n      swap2\n      swap1\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566\n      dup8\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap6\n      dup7\n      sload\n        /* \"SimplePools.sol\":12267:12288  pool.asset2Amount > 0 */\n      dup1\n      iszero\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_540\n      jumpi\n        /* \"SimplePools.sol\":12385:12405  pool.isConstantPrice */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a\n      dup10\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      dup4\n      and\n      iszero\n      tag_542\n      jumpi\n        /* \"SimplePools.sol\":12534:12616  Math.mulDiv(sellAmount, pool.asset2InitiallyAskedAmount, pool.initialAsset1Amount) */\n      tag_544\n      0x00\n      dup1\n      mload\n      0x20\n      data_9c418048a637d1641c6d732dd38174732bbf7b47a1cf6d5f65895384518b07d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":12558:12589  pool.asset2InitiallyAskedAmount */\n      dup11\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":12591:12615  pool.initialAsset1Amount */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56b\n      dup12\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":12534:12616  Math.mulDiv(sellAmount, pool.asset2InitiallyAskedAmount, pool.initialAsset1Amount) */\n      swap1\n      dup10\n      tag_36\n      jump\t// in\n    tag_544:\n        /* \"SimplePools.sol\":12381:12819  if (pool.isConstantPrice) {... */\n      swap1\n    tag_545:\n        /* \"SimplePools.sol\":27039:27044  a < b */\n      dup1\n      dup3\n      lt\n      iszero\n      tag_546\n      jumpi\n        /* \"SimplePools.sol\":27039:27052  a < b ? a : b */\n      pop\n      dup1\n      swap10\n    tag_548:\n        /* \"SimplePools.sol\":12970:13009  minReceiveAssetToBuyAmount <= amountOut */\n      gt\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      tag_549\n      jumpi\n        /* \"SimplePools.sol\":12267:12284  pool.asset2Amount */\n      0x03\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      dup2\n      sload\n      0x40\n      swap6\n        /* \"SimplePools.sol\":9792:9815  _allTransactionsPoolIds */\n      0x01\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup4\n      swap1\n      shr\n      swap3\n      dup3\n      dup9\n      shr\n      dup7\n      and\n      iszero\n      tag_551\n      jumpi\n      pop\n      swap1\n      pop\n        /* \"SimplePools.sol\":13282:13366  require(msg.value >= sellAmount + contractTransactionTax, \"lower transaction value\") */\n      tag_553\n        /* \"SimplePools.sol\":13303:13338  sellAmount + contractTransactionTax */\n      tag_481\n        /* \"SimplePools.sol\":12267:12284  pool.asset2Amount */\n      0x03\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":13303:13338  sellAmount + contractTransactionTax */\n      dup11\n      tag_11\n      jump\t// in\n        /* \"SimplePools.sol\":13282:13366  require(msg.value >= sellAmount + contractTransactionTax, \"lower transaction value\") */\n    tag_553:\n        /* \"SimplePools.sol\":13385:13419  payable(this).transfer(sellAmount) */\n      dup7\n      dup1\n      dup10\n      dup1\n      iszero\n      tag_555\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_556:\n        /* \"SimplePools.sol\":13393:13397  this */\n      dup3\n      dup1\n      swap3\n      swap2\n      dup2\n      swap3\n      address\n        /* \"SimplePools.sol\":13385:13419  payable(this).transfer(sellAmount) */\n      swap1\n      call\n      iszero\n      tag_561\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      dup1\n      dup1\n      dup1\n      dup6\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap7\n      sload\n      and\n        /* \"SimplePools.sol\":13438:13473  pool.poolOwner.transfer(taxDivided) */\n      dup3\n      dup3\n      iszero\n      tag_559\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_560:\n        /* \"SimplePools.sol\":13438:13473  pool.poolOwner.transfer(taxDivided) */\n      call\n      iszero\n      tag_561\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      dup1\n      dup1\n      swap4\n        /* \"SimplePools.sol\":13515:13550  msg.value - sellAmount - taxDivided */\n      tag_563\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap5\n        /* \"SimplePools.sol\":13160:13161  2 */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":13290:13299  msg.value */\n      swap2\n        /* \"SimplePools.sol\":13515:13537  msg.value - sellAmount */\n      tag_491\n        /* \"SimplePools.sol\":13290:13299  msg.value */\n      dup14\n      callvalue\n        /* \"SimplePools.sol\":13515:13537  msg.value - sellAmount */\n      tag_16\n      jump\t// in\n        /* \"SimplePools.sol\":13515:13550  msg.value - sellAmount - taxDivided */\n    tag_563:\n        /* \"SimplePools.sol\":13492:13551  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_565\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_566:\n        /* \"SimplePools.sol\":13492:13551  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n      call\n      iszero\n      tag_567\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n      swap1\n      dup9\n      swap3\n      swap2\n    tag_569:\n        /* \"SimplePools.sol\":13918:13949  pool.asset1Amount += sellAmount */\n      tag_570\n      0x00\n      dup1\n      mload\n      0x20\n      data_63d75db57ae45c3799740c3cd8dcee96a498324843d79ae390adc81d74b52f13\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SimplePools.sol\":13918:13935  pool.asset1Amount */\n      dup11\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap8\n      dup9\n      sload\n        /* \"SimplePools.sol\":13918:13949  pool.asset1Amount += sellAmount */\n      tag_11\n      jump\t// in\n    tag_570:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup8\n      sstore\n      sload\n      0xe8\n      shr\n      and\n      iszero\n      tag_571\n      jumpi\n        /* \"SimplePools.sol\":14072:14127  payable(personExecutingTheExchange).transfer(amountOut) */\n      dup4\n      dup1\n      dup1\n      swap4\n      dup2\n      swap4\n      dup3\n      swap1\n      dup3\n      iszero\n      tag_573\n      jumpi\n        /* \"SimplePools.sol\":14010:14251  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_574:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      and\n      swap1\n        /* \"SimplePools.sol\":14072:14127  payable(personExecutingTheExchange).transfer(amountOut) */\n      call\n      iszero\n      tag_97\n      jumpi\n        /* \"SimplePools.sol\":14010:14251  if (pool.isAsset2NativeBlockchainCurrency) {... */\n      pop\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_aaab8540682e3a537d17674663ea013e92c83fdd69958f314b4521edb3b76f1a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n        /* \"SimplePools.sol\":14356:14407  pool.asset2Amount + pool.asset2InitiallyAskedAmount */\n      tag_504\n        /* \"SimplePools.sol\":14333:14408  (pool.asset1Amount) * (pool.asset2Amount + pool.asset2InitiallyAskedAmount) */\n      tag_505\n        /* \"SimplePools.sol\":14010:14251  if (pool.isAsset2NativeBlockchainCurrency) {... */\n      swap3\n    tag_579:\n        /* \"SimplePools.sol\":14265:14295  pool.asset2Amount -= amountOut */\n      tag_580\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup8\n      dup5\n      sload\n        /* \"SimplePools.sol\":14265:14295  pool.asset2Amount -= amountOut */\n      tag_16\n      jump\t// in\n    tag_580:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      swap4\n      sstore\n      sload\n        /* \"SimplePools.sol\":14376:14407  pool.asset2InitiallyAskedAmount */\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_9c418048a637d1641c6d732dd38174732bbf7b47a1cf6d5f65895384518b07d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup7\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":14356:14407  pool.asset2Amount + pool.asset2InitiallyAskedAmount */\n      swap1\n      tag_11\n      jump\t// in\n        /* \"SimplePools.sol\":14072:14127  payable(personExecutingTheExchange).transfer(amountOut) */\n    tag_573:\n      0x08fc\n      swap2\n      pop\n      jump(tag_574)\n        /* \"SimplePools.sol\":14010:14251  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_571:\n        /* \"SimplePools.sol\":14175:14186  pool.asset2 */\n      0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564\n      dup8\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      dup4\n      mload\n      shl(0xe0, 0xa9059cbb)\n        /* \"SimplePools.sol\":14168:14235  IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap3\n      dup4\n      and\n        /* \"SimplePools.sol\":14168:14235  IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut) */\n      0x04\n      dup3\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mstore\n      0x24\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap2\n      swap4\n      swap2\n        /* \"SimplePools.sol\":14168:14235  IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut) */\n      0x20\n      swap2\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      swap2\n      0x44\n      swap2\n      dup4\n      swap2\n      dup7\n      swap2\n      and\n        /* \"SimplePools.sol\":14168:14235  IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut) */\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_97\n      jumpi\n      pop\n      pop\n        /* \"SimplePools.sol\":14333:14408  (pool.asset1Amount) * (pool.asset2Amount + pool.asset2InitiallyAskedAmount) */\n      tag_505\n        /* \"SimplePools.sol\":14168:14235  IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut) */\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_aaab8540682e3a537d17674663ea013e92c83fdd69958f314b4521edb3b76f1a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap5\n      swap3\n        /* \"SimplePools.sol\":14356:14407  pool.asset2Amount + pool.asset2InitiallyAskedAmount */\n      tag_504\n        /* \"SimplePools.sol\":14168:14235  IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut) */\n      swap3\n      tag_584\n      jumpi\n        /* \"SimplePools.sol\":14010:14251  if (pool.isAsset2NativeBlockchainCurrency) {... */\n    tag_585:\n      pop\n      jump(tag_579)\n        /* \"SimplePools.sol\":14168:14235  IERC20(pool.asset2).transfer(personExecutingTheExchange, amountOut) */\n    tag_584:\n      tag_586\n      swap1\n      0x20\n      returndatasize\n      dup2\n      gt\n      tag_285\n      jumpi\n      tag_287\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_586:\n      pop\n      codesize\n      jump(tag_585)\n        /* \"SimplePools.sol\":13492:13551  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n    tag_567:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n      pop\n      pop\n      mload\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":13492:13551  contractOwner.transfer(msg.value - sellAmount - taxDivided) */\n    tag_565:\n      pop\n      0x08fc\n      jump(tag_566)\n        /* \"SimplePools.sol\":13438:13473  pool.poolOwner.transfer(taxDivided) */\n    tag_561:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup6\n      mload\n      returndatasize\n      dup9\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"SimplePools.sol\":13438:13473  pool.poolOwner.transfer(taxDivided) */\n    tag_559:\n      pop\n      0x08fc\n      jump(tag_560)\n        /* \"SimplePools.sol\":13385:13419  payable(this).transfer(sellAmount) */\n    tag_555:\n      0x08fc\n      swap2\n      pop\n      jump(tag_556)\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_551:\n        /* \"SimplePools.sol\":13592:13663  require(msg.value >= contractTransactionTax, \"lower transaction value\") */\n      tag_590\n        /* \"SimplePools.sol\":13600:13609  msg.value */\n      swap1\n      callvalue\n        /* \"SimplePools.sol\":13600:13635  msg.value >= contractTransactionTax */\n      lt\n      iszero\n        /* \"SimplePools.sol\":13592:13663  require(msg.value >= contractTransactionTax, \"lower transaction value\") */\n      tag_19\n      jump\t// in\n    tag_590:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      mload\n      shl(0xe0, 0x23b872dd)\n        /* \"SimplePools.sol\":13682:13769  IERC20(pool.asset1).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup8\n      dup2\n      and\n        /* \"SimplePools.sol\":13682:13769  IERC20(pool.asset1).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      0x04\n      dup4\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mstore\n        /* \"SimplePools.sol\":13751:13755  this */\n      address\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup3\n      add\n      dup12\n      swap1\n      mstore\n      swap3\n        /* \"SimplePools.sol\":13682:13769  IERC20(pool.asset1).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      0x20\n      swap1\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup14\n      swap1\n      0x48\n      shr\n      dup9\n      and\n        /* \"SimplePools.sol\":13682:13769  IERC20(pool.asset1).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_592\n      jumpi\n      dup10\n      dup6\n      dup6\n      dup3\n      swap6\n      dup4\n      swap6\n      dup5\n      swap6\n      tag_594\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_595:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n      sload\n      and\n        /* \"SimplePools.sol\":13788:13823  pool.poolOwner.transfer(taxDivided) */\n      dup3\n      dup3\n      iszero\n      tag_596\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_597:\n        /* \"SimplePools.sol\":13788:13823  pool.poolOwner.transfer(taxDivided) */\n      call\n      iszero\n      tag_561\n      jumpi\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup7\n      dup1\n      dup1\n      swap4\n        /* \"SimplePools.sol\":13865:13887  msg.value - taxDivided */\n      tag_600\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup3\n      swap5\n        /* \"SimplePools.sol\":13160:13161  2 */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n      and\n        /* \"SimplePools.sol\":13600:13609  msg.value */\n      swap2\n      callvalue\n        /* \"SimplePools.sol\":13865:13887  msg.value - taxDivided */\n      tag_16\n      jump\t// in\n    tag_600:\n        /* \"SimplePools.sol\":13842:13888  contractOwner.transfer(msg.value - taxDivided) */\n      swap1\n      dup3\n      dup3\n      iszero\n      tag_601\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n    tag_602:\n        /* \"SimplePools.sol\":13842:13888  contractOwner.transfer(msg.value - taxDivided) */\n      call\n      iszero\n      tag_567\n      jumpi\n        /* \"SimplePools.sol\":13220:13904  if (pool.isAsset1NativeBlockchainCurrency) {... */\n      swap1\n      dup9\n      swap3\n      swap2\n      jump(tag_569)\n        /* \"SimplePools.sol\":13842:13888  contractOwner.transfer(msg.value - taxDivided) */\n    tag_601:\n      pop\n      0x08fc\n      jump(tag_602)\n        /* \"SimplePools.sol\":13788:13823  pool.poolOwner.transfer(taxDivided) */\n    tag_596:\n      pop\n      0x08fc\n      jump(tag_597)\n        /* \"SimplePools.sol\":13682:13769  IERC20(pool.asset1).transferFrom(personExecutingTheExchange, address(this), sellAmount) */\n    tag_594:\n      tag_605\n      swap1\n      0x20\n      returndatasize\n      dup2\n      gt\n      tag_285\n      jumpi\n      tag_287\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_605:\n      pop\n      codesize\n      jump(tag_595)\n    tag_592:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup9\n      mload\n      returndatasize\n      dup12\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_549:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x6d696e52656365697665206973206d6f7265207468616e2063616c6375616c74\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xba, 0x195908185b5bdd5b9d)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"SimplePools.sol\":27039:27052  a < b ? a : b */\n    tag_546:\n      swap1\n      pop\n      dup1\n      swap10\n      jump(tag_548)\n        /* \"SimplePools.sol\":12381:12819  if (pool.isConstantPrice) {... */\n    tag_542:\n        /* \"SimplePools.sol\":12669:12803  pool.asset2InitiallyAskedAmount + pool.asset2Amount -... */\n      tag_609\n        /* \"SimplePools.sol\":12669:12720  pool.asset2InitiallyAskedAmount + pool.asset2Amount */\n      tag_610\n        /* \"SimplePools.sol\":12669:12700  pool.asset2InitiallyAskedAmount */\n      dup3\n      0x00\n      dup1\n      mload\n      0x20\n      data_9c418048a637d1641c6d732dd38174732bbf7b47a1cf6d5f65895384518b07d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup13\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":12669:12720  pool.asset2InitiallyAskedAmount + pool.asset2Amount */\n      tag_11\n      jump\t// in\n    tag_610:\n        /* \"SimplePools.sol\":12748:12803  pool.constantProduct / (pool.asset1Amount + sellAmount) */\n      tag_537\n        /* \"SimplePools.sol\":12748:12768  pool.constantProduct */\n      dup12\n        /* \"SimplePools.sol\":12772:12802  pool.asset1Amount + sellAmount */\n      tag_538\n        /* \"SimplePools.sol\":12748:12768  pool.constantProduct */\n      dup12\n      0x00\n      dup1\n      mload\n      0x20\n      data_63d75db57ae45c3799740c3cd8dcee96a498324843d79ae390adc81d74b52f13\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_aaab8540682e3a537d17674663ea013e92c83fdd69958f314b4521edb3b76f1a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup5\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":12772:12789  pool.asset1Amount */\n      swap4\n      add\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      sload\n        /* \"SimplePools.sol\":12772:12802  pool.asset1Amount + sellAmount */\n      tag_11\n      jump\t// in\n        /* \"SimplePools.sol\":12669:12803  pool.asset2InitiallyAskedAmount + pool.asset2Amount -... */\n    tag_609:\n        /* \"SimplePools.sol\":12381:12819  if (pool.isConstantPrice) {... */\n      swap1\n      jump(tag_545)\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n    tag_540:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x7a65726f20616d6f756e74206f662061737365743220666f722062757920696e\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xba, 0x081d1a19481c1bdbdb)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_463:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x506f6f6c20697320656d707479)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_461:\n      shl(0xe0, 0x4e487b71)\n      dup3\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n      dup3\n      revert\n    tag_459:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x125b9d985b1a59081c1bdbdb1259)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_22:\n      iszero\n      tag_613\n      jumpi\n      jump\t// out\n    tag_613:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x1a5b9d985b1a59081c1bdbdb081a59)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_23:\n      iszero\n      tag_615\n      jumpi\n      jump\t// out\n    tag_615:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x1c1bdbdb081a5cc81b1bd8dad959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_24:\n      iszero\n      tag_617\n      jumpi\n      jump\t// out\n    tag_617:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x1b1bddd95c881d185e081cdc1958da599a5959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_25:\n      iszero\n      tag_619\n      jumpi\n      jump\t// out\n    tag_619:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x1a5b9d985b1a59081c1bdbdb1259)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_26:\n      iszero\n      tag_621\n      jumpi\n      jump\t// out\n    tag_621:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x88, 0x696e76616c696420696e6465786573)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_27:\n      sub(shl(0x40, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap1\n      dup3\n      and\n      sub\n      swap2\n      swap1\n      dup3\n      gt\n      tag_440\n      jumpi\n      jump\t// out\n    tag_28:\n      mload(0x40)\n      swap1\n      tag_625\n      dup3\n      tag_5\n      jump\t// in\n    tag_625:\n      dup2\n      0x01c0\n      0x00\n      swap2\n      dup3\n      dup2\n      mstore\n      dup3\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      0x40\n      dup3\n      add\n      mstore\n      dup3\n      0x60\n      dup3\n      add\n      mstore\n      dup3\n      0x80\n      dup3\n      add\n      mstore\n      dup3\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      0xc0\n      dup3\n      add\n      mstore\n      dup3\n      0xe0\n      dup3\n      add\n      mstore\n      dup3\n      0x0100\n      dup3\n      add\n      mstore\n      dup3\n      0x0120\n      dup3\n      add\n      mstore\n      dup3\n      0x0140\n      dup3\n      add\n      mstore\n      dup3\n      0x0160\n      dup3\n      add\n      mstore\n      dup3\n      0x0180\n      dup3\n      add\n      mstore\n      dup3\n      0x01a0\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\t// out\n    tag_29:\n      swap1\n      tag_626\n      dup3\n      tag_7\n      jump\t// in\n    tag_626:\n      tag_627\n      mload(0x40)\n      swap2\n      dup3\n      tag_6\n      jump\t// in\n    tag_627:\n      dup3\n      dup2\n      mstore\n      dup1\n      swap3\n      tag_628\n      not(0x1f)\n      swap2\n      tag_7\n      jump\t// in\n    tag_628:\n      add\n      swap1\n      0x00\n    tag_629:\n      dup3\n      dup2\n      lt\n      tag_630\n      jumpi\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_630:\n      0x20\n      swap1\n      tag_632\n      tag_28\n      jump\t// in\n    tag_632:\n      dup3\n      dup3\n      dup6\n      add\n      add\n      mstore\n      add\n      jump(tag_629)\n    tag_30:\n      sub(shl(0x40, 0x01), 0x01)\n      dup1\n      swap2\n      and\n      swap1\n      dup2\n      eq\n      tag_440\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_31:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_442\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_32:\n      swap1\n      mload(0x40)\n      tag_637\n      dup2\n      tag_5\n      jump\t// in\n    tag_637:\n      0x01c0\n      dup2\n      swap4\n      dup1\n      sload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      dup5\n      mstore\n      0x09\n      0xff\n      swap3\n      dup4\n      dup4\n      0x40\n      shr\n      and\n      iszero\n      iszero\n      0x20\n      dup8\n      add\n      mstore\n      dup4\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap4\n      dup5\n      dup2\n      0x48\n      shr\n      and\n      0x40\n      dup10\n      add\n      mstore\n      0xe8\n      shr\n      and\n      iszero\n      iszero\n      0x60\n      dup8\n      add\n      mstore\n      dup3\n      0x01\n      dup3\n      add\n      sload\n      and\n      0x80\n      dup8\n      add\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0xa0\n      dup8\n      add\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0xc0\n      dup8\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0xe0\n      dup8\n      add\n      mstore\n      dup4\n      0x05\n      dup3\n      add\n      sload\n      and\n      0x0100\n      dup8\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      0x0120\n      dup8\n      add\n      mstore\n      dup4\n      0x07\n      dup3\n      add\n      sload\n      and\n      iszero\n      iszero\n      0x0140\n      dup8\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0160\n      dup8\n      add\n      mstore\n      add\n      sload\n      swap1\n      dup2\n      and\n      0x0180\n      dup6\n      add\n      mstore\n      dup2\n      dup2\n      0xa0\n      shr\n      and\n      iszero\n      iszero\n      0x01a0\n      dup6\n      add\n      mstore\n      0xa8\n      shr\n      and\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_33:\n      iszero\n      tag_638\n      jumpi\n      jump\t// out\n    tag_638:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9b, 0x0d2dcecc2d8d2c840d2dcc8caf)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_34:\n      swap1\n      tag_640\n      dup3\n      tag_7\n      jump\t// in\n    tag_640:\n      tag_641\n      mload(0x40)\n      swap2\n      dup3\n      tag_6\n      jump\t// in\n    tag_641:\n      dup3\n      dup2\n      mstore\n      dup1\n      swap3\n      tag_642\n      not(0x1f)\n      swap2\n      tag_7\n      jump\t// in\n    tag_642:\n      add\n      swap1\n      0x20\n      calldatasize\n      swap2\n      add\n      calldatacopy\n      jump\t// out\n        /* \"SimplePools.sol\":27383:31388  function mulDiv(... */\n    tag_35:\n      not(0x00)\n        /* \"SimplePools.sol\":27996:28166  assembly {... */\n      dup3\n      dup3\n      mulmod\n      dup3\n      dup3\n      mul\n      swap2\n      dup3\n      dup1\n      dup4\n      lt\n      swap3\n      sub\n      swap2\n      dup1\n      dup4\n      sub\n        /* \"SimplePools.sol\":28250:28260  prod1 == 0 */\n      swap3\n      eq\n        /* \"SimplePools.sol\":28246:28323  if (prod1 == 0) {... */\n      tag_643\n      jumpi\n        /* \"SimplePools.sol\":28436:28455  denominator > prod1 */\n      dup2\n        /* \"SimplePools.sol\":10661:10664  100 */\n      0x64\n        /* \"SimplePools.sol\":28436:28455  denominator > prod1 */\n      gt\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      iszero\n      tag_419\n      jumpi\n      0x5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c29\n        /* \"SimplePools.sol\":28751:29058  assembly {... */\n      swap4\n        /* \"SimplePools.sol\":10661:10664  100 */\n      0x64\n        /* \"SimplePools.sol\":28751:29058  assembly {... */\n      swap2\n      mulmod\n      swap1\n      dup3\n      dup3\n      gt\n      swap1\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      0xfe\n      shl\n        /* \"SimplePools.sol\":28751:29058  assembly {... */\n      swap2\n      sub\n        /* \"SimplePools.sol\":29433:29813  assembly {... */\n      0x02\n      shr\n        /* \"SimplePools.sol\":29882:29903  prod0 |= prod1 * twos */\n      or\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mul\n        /* \"SimplePools.sol\":27383:31388  function mulDiv(... */\n      swap1\n      jump\t// out\n        /* \"SimplePools.sol\":28246:28323  if (prod1 == 0) {... */\n    tag_643:\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      pop\n      pop\n        /* \"SimplePools.sol\":10661:10664  100 */\n      0x64\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      swap2\n      pop\n      div\n        /* \"SimplePools.sol\":28281:28307  return prod0 / denominator */\n      swap1\n      jump\t// out\n        /* \"SimplePools.sol\":27383:31388  function mulDiv(... */\n    tag_36:\n      swap2\n      not(0x00)\n        /* \"SimplePools.sol\":27996:28166  assembly {... */\n      dup3\n        /* \"SimplePools.sol\":27383:31388  function mulDiv(... */\n      dup5\n        /* \"SimplePools.sol\":27996:28166  assembly {... */\n      mulmod\n      swap3\n      dup3\n      dup2\n      mul\n      swap3\n      dup4\n      dup1\n      dup7\n      lt\n      swap6\n      sub\n      swap5\n      dup1\n      dup7\n      sub\n        /* \"SimplePools.sol\":28250:28260  prod1 == 0 */\n      swap6\n      eq\n        /* \"SimplePools.sol\":28246:28323  if (prod1 == 0) {... */\n      tag_647\n      jumpi\n        /* \"SimplePools.sol\":28436:28455  denominator > prod1 */\n      dup5\n      dup4\n      gt\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      iszero\n      tag_419\n      jumpi\n        /* \"SimplePools.sol\":28751:29058  assembly {... */\n      dup3\n      swap2\n      mulmod\n        /* \"SimplePools.sol\":29416:29417  1 */\n      0x01\n        /* \"SimplePools.sol\":29401:29413  ~denominator */\n      dup3\n      not\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      add\n        /* \"SimplePools.sol\":29386:29418  denominator & (~denominator + 1) */\n      dup3\n      and\n        /* \"SimplePools.sol\":29433:29813  assembly {... */\n      dup1\n      swap3\n      div\n        /* \"SimplePools.sol\":30264:30265  2 */\n      0x02\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      dup3\n        /* \"SimplePools.sol\":30245:30246  3 */\n      0x03\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mul\n        /* \"SimplePools.sol\":30244:30265  (3 * denominator) ^ 2 */\n      xor\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      dup1\n      dup4\n      mul\n      dup3\n      sub\n      mul\n      dup1\n      dup4\n      mul\n      dup3\n      sub\n      mul\n      dup1\n      dup4\n      mul\n      dup3\n      sub\n      mul\n      dup1\n      dup4\n      mul\n      dup3\n      sub\n      mul\n      dup1\n      dup4\n      mul\n      dup3\n      sub\n      mul\n      dup1\n      swap3\n      mul\n      swap1\n      sub\n      mul\n        /* \"SimplePools.sol\":29433:29813  assembly {... */\n      swap4\n        /* \"SimplePools.sol\":29416:29417  1 */\n      0x01\n        /* \"SimplePools.sol\":29433:29813  assembly {... */\n      dup4\n      dup1\n        /* \"SimplePools.sol\":27996:28166  assembly {... */\n      0x00\n        /* \"SimplePools.sol\":29433:29813  assembly {... */\n      sub\n      div\n      add\n        /* \"SimplePools.sol\":28751:29058  assembly {... */\n      swap1\n      dup5\n      dup4\n      gt\n      swap1\n      sub\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mul\n        /* \"SimplePools.sol\":28751:29058  assembly {... */\n      swap3\n      sub\n        /* \"SimplePools.sol\":29433:29813  assembly {... */\n      div\n        /* \"SimplePools.sol\":29882:29903  prod0 |= prod1 * twos */\n      or\n        /* \"SimplePools.sol\":886:26651  contract SimplePools {... */\n      mul\n        /* \"SimplePools.sol\":27383:31388  function mulDiv(... */\n      swap1\n      jump\t// out\n        /* \"SimplePools.sol\":28246:28323  if (prod1 == 0) {... */\n    tag_647:\n        /* \"SimplePools.sol\":28288:28307  prod0 / denominator */\n      pop\n      pop\n      swap1\n      tag_651\n      swap3\n      pop\n      tag_18\n      jump\t// in\n    tag_651:\n        /* \"SimplePools.sol\":28281:28307  return prod0 / denominator */\n      swap1\n      jump\t// out\n    stop\n    data_63d75db57ae45c3799740c3cd8dcee96a498324843d79ae390adc81d74b52f13 290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565\n    data_9c418048a637d1641c6d732dd38174732bbf7b47a1cf6d5f65895384518b07d9 290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567\n    data_aaab8540682e3a537d17674663ea013e92c83fdd69958f314b4521edb3b76f1a 290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569\n\n    auxdata: 0xa26469706673582212203c442a543119d2823687284290577bbe6779062d85a3d7810693e4883c9a0f4664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080346200010a5766038d7ea4c680006003819055906001600160401b0360a0820181811183821017620000f4576040526509184e72a0008252602092655af3107a4000848401526040830152662386f26fc10000606083015267016345785d8a000060808301526004549160059283600455808410620000c8575b509060046000528360002060005b848110620000b357600280546001600160a01b0319163317905560405161268c9081620001108239f35b83518316828201559285019260010162000089565b6000600481528486822092830192015b828110620000e85750506200007b565b818155600101620000d8565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001d575b5050361561001b57005b005b600091823560e01c80630376e49c146113395780630c95be251461108557806312065fe01461106a5780631e67d5421461103057806322668de114610f405780633997663c14610e4c578063455b5adc14610dd8578063578cb8f914610db957806357b0b64d14610a4e57806374d13a231461090b57806381d802ba1461082a578063919adab8146107e3578063acb8001f14610735578063b0b15560146105f4578063b4ac6860146105d7578063ce606ee0146105ae578063d5700cbb14610561578063f5a1f5b4146104bd578063f6fce7a91461034c578063f8c81b90146102835763fa5a67ed146101115750610011565b8160031936011261027f576101246113ac565b60243561013c85546001600160401b0384161061224c565b6101458261154b565b5060098101549361015c60ff8660a01c16156121cd565b6001600160a01b039433908616036102205782156101c4575085936101898594859460068695015561166c565b61019760035434101561220a565b60025416819034156101ba575b3491f1156101b0575080f35b51903d90823e3d90fd5b6108fc91506101a4565b608490602087519162461bcd60e51b8352820152603060248201527f696e76616c696420636f6e7374616e742070726f6475637420286f6e6c79207060448201526f6f736974697665206e756d626572732960801b6064820152fd5b608490602087519162461bcd60e51b8352820152603360248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206368616e676520746044820152721a194818dbdb9cdd185b9d081c1c9bd91d58dd606a1b6064820152fd5b8280fd5b82843461034957816003193601126103495761029d6113ac565b90816102dc6102aa6113c7565b6102d66001600160401b0395826102d188809516978584168911908161033d575b50612289565b6122c7565b1661234f565b92815b83828216106102f9578551806102f58782611498565b0390f35b806103326103096103389361154b565b508461031e61031888866122c7565b926123cb565b91169061032b828a6123b7565b52876123b7565b5061239f565b6102df565b9050548811158b6102cb565b80fd5b508160031936011261027f576103606113ac565b60243560ff81168091036104b95761038385546001600160401b0384161061224c565b600961038e8361154b565b500154926103a260ff8560a01c16156121cd565b6001600160a01b039333908516036104445760648211158061043b575b156103ec57508480936101898483959460056103db869761154b565b50019060ff1982541617905561166c565b608490602086519162461bcd60e51b8352820152602360248201527f696e76616c6964206d61782070657263656e7420706572207472616e7361637460448201526234b7b760e91b6064820152fd5b508115156103bf565b60a490602086519162461bcd60e51b8352820152604360248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206e60448201527f65774d617842757941737365743150657263656e745065725472616e7361637460648201526234b7b760e91b6084820152fd5b8480fd5b50903461027f57602036600319011261027f576104d86115dd565b600254926001600160a01b0392838516330361050a57505016906bffffffffffffffffffffffff60a01b161760025580f35b906020608492519162461bcd60e51b8352820152602b60248201527f6f6e6c79207468652063757272656e74206f776e65722063616e206368616e6760448201526a32903a34329037bbb732b960a91b6064820152fd5b505060a03660031901126105aa576105776115dd565b61057f6113c7565b926044359081151582036103495750926105a3916020946084359260643592611753565b9051908152f35b5080fd5b5050346105aa57816003193601126105aa5760025490516001600160a01b039091168152602090f35b5050346105aa57816003193601126105aa57602091549051908152f35b5090602036600319011261027f5761060a6113ac565b9161062084546001600160401b0385161061218f565b600961062b8461154b565b50019283549160ff8360a01c166106f9576001600160a01b039233908416036106aa57508480809361065d829461166c565b61066b60035434101561220a565b60025416819034156106a0575b3491f1156106955750805460ff60a01b1916600160a01b17905580f35b51913d9150823e3d90fd5b6108fc9150610678565b608490602085519162461bcd60e51b8352820152602360248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206c6f636b206120706044820152621bdbdb60ea1b6064820152fd5b606490602085519162461bcd60e51b835282015260166024820152751c1bdbdb081a5cc8185b1c9958591e481b1bd8dad95960521b6044820152fd5b828434610349578160031936011261034957506107506113ac565b6107586113c7565b916001600160401b03926107888461078285828516948382168611806107d7575b6102d190612289565b166124d8565b92805b82868216106107a1578351806102f58782611599565b80866107af6107d293611616565b90549060031b1c166107cc886107c586856122c7565b16886123b7565b5261239f565b61078b565b50600154861115610779565b5050346105aa5760203660031901126105aa576101e09061082861081f61081961080b6113ac565b6108136122e0565b5061154b565b506123cb565b915180926113dd565bf35b508160031936011261027f5761083e6113ac565b6001600160a01b0391602435838116908190036109075761086a86546001600160401b0385161061224c565b60096108758461154b565b50019182549061088b60ff8360a01c16156121cd565b33868316036108b3576001600160a01b03198216831784558787818080808b6101898c61166c565b608490602088519162461bcd60e51b8352820152602860248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206f6044820152670776e6572736869760c41b6064820152fd5b8580fd5b503461027f57602036600319011261027f5780359160ff8316908184036104b9576002546001600160a01b031633036109fa578254809210806109f2575b15610993575082101561098057507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015460035580f35b634e487b7160e01b835260329052602482fd5b5162461bcd60e51b8152602081840152603460248201527f696e76616c6964206e6577546178496e64657846726f6d56616c6964436f6e74604482015273726163745472616e73616374696f6e546178657360601b6064820152608490fd5b506001610949565b5162461bcd60e51b8152602081840152602960248201527f6f6e6c79207468652063757272656e74206f776e65722063616e206368616e676044820152680ca40e8d0ca40e8c2f60bb1b6064820152608490fd5b5091906101203660031901126105aa57610a666115dd565b9060243590811515908183036104b9576001600160a01b039260443584811690818103610db557606435801515809103610db157608435878116809103610dad5760a4359660c4359660e4359660ff8816809803610da9576101043596871515809803610da557600354610ae3908f8415610d9f57508c906115f3565b3410610d4a578c8f8f928d916001600160401b0385541695610b048761166c565b15610c955750505050808b8015610c8b575b8280929181923090f115610c78578c8080808d8f610b39906002541691346116c7565b90828215610c82575bf115610c78575b8c54600160401b811015610c6357918d9e959391838f9e9f9d9e60018d9a9896019055610b759061154b565b50805467ffffffffffffffff191682179055610b909061154b565b508054600282018d90556001820180546001600160a01b03191695909517909455600381019c909c5560ff60e81b60e89490941b93909316921b68ff0000000000000000166901000000000000000000600160e81b0360489490941b9390931668010000000000000000600160f01b0319909116179190911717875586015560058501805460ff1990811693909317905560078501805490921660ff91909116179055610c3d90826116d4565b60068301556008820155600901911669ffffffffffffffffffff60b01b82541617905580f35b5050634e487b7160e01b8c5260418d5260248cfd5b81513d8e823e3d90fd5b506108fc610b42565b6108fc9150610b16565b86516323b872dd60e01b81526001600160a01b039094169084019081523060208281019190915260408201939093529293919284928391829060600103925af18015610d3e578e808e81948294610d10575b506002541681903415610d06575b3491f1610b495781513d8e823e3d90fd5b6108fc9150610cf5565b610d309060203d8111610d37575b610d288183611513565b8101906116af565b5038610ce7565b503d610d1e565b8e8451903d90823e3d90fd5b60848f602085519162461bcd60e51b8352820152602960248201527f4c6f776572207468616e20746865207265717569726564207472616e73616374604482015268696f6e2076616c756560b81b6064820152fd5b906115f3565b8d80fd5b8c80fd5b8980fd5b8880fd5b8780fd5b5050346105aa57816003193601126105aa576020906001549051908152f35b8284346103495760203660031901126103495750610df46113ac565b600154916001600160401b0392610e20610e1b858516610e1584821061249c565b836116c7565b6124d8565b92805b8286821610610e39578351806102f58782611599565b80866107af610e4793611616565b610e23565b503461027f57602036600319011261027f5780359280548410156103495750610e776101e09361154b565b5080549060018060a01b03908160018201541660028201546003830154958301549560ff96876005860154169160068601549389600788015416958a600960088a01549901549a8d51809e6001600160401b03831682528383821c16151560208301528c8360481c1691015260e81c16151560608d015260808c015260a08b015260c08a015260e089015261010088015261012087015215156101408601526101608501528116610180840152818160a01c1615156101a084015260a81c1615156101c0820152f35b50823461034957602091826003193601126105aa578035926001600160401b039182851161102c573660238601121561102c5784013593610f8085611534565b94610f8d87519687611513565b80865260248387019160051b8301019136831161090757602401905b8282106110105750505050610fbe835161234f565b915b835182821690811015611003579061033282610fed61081986610fe6610ffe978b6123b7565b511661154b565b610ff782886123b7565b52856123b7565b610fc0565b8551806102f58682611498565b81358581168103611028578152908301908301610fa9565b8680fd5b8380fd5b5050346105aa5760203660031901126105aa5760209060ff600961105a6110556113ac565b61154b565b50015460a01c1690519015158152f35b5050346105aa57816003193601126105aa5751478152602090f35b5082906020908160031936011261027f5761109e6113ac565b936110b484546001600160401b0387161061218f565b6110bd8561154b565b5090600982019384546110d660ff8260a01c16156121cd565b60ff8160a81c16611306576001600160a01b039033908216036112b857611100879897969761166c565b61110e60035434101561220a565b858080808460025416819034156112ae575b3491f11561122a5783548281851c60ff161561123d575050858080806002880154818115611234575b3390f11561122a5785905b81600286015560ff855460e81c166000146111b55750808080935060038601548181156111ac575b3390f1156111a357505b600381018390550155805460ff60a81b1916600160a81b17905580f35b513d84823e3d90fd5b506108fc61117c565b60018501546003860154855163a9059cbb60e01b8152338982019081526020810192909252949593869386931691839190829060400103925af19081156112215750611203575b5050611186565b8161121992903d10610d3757610d288183611513565b5085806111fc565b513d87823e3d90fd5b82513d87823e3d90fd5b506108fc611149565b6002860154855163a9059cbb60e01b81523389820190815260208101929092529283918290036040019082908b9060481c87165af180156112a45790879291611287575b50611154565b61129d90843d8611610d3757610d288183611513565b5089611281565b84513d89823e3d90fd5b6108fc9150611120565b825162461bcd60e51b8152808601839052602260248201527f6f6e6c792074686520706f6f6c206f776e65722063616e20656d70747920706f6044820152611bdb60f21b6064820152608490fd5b825162461bcd60e51b8152808601839052600d60248201526c706f6f6c20697320656d70747960981b6044820152606490fd5b828434610349576020366003190112610349576113546113ac565b90546001600160401b039161137e61137984831661137385821061249c565b846116c7565b61234f565b92815b8382821610611397578551806102f58782611498565b806103326103096113a79361154b565b611381565b600435906001600160401b03821682036113c257565b600080fd5b602435906001600160401b03821682036113c257565b6001600160401b03815116825260208101511515602083015260018060a01b0380604083015116604084015260608201511515606084015280608083015116608084015260a082015160a084015260c082015160c084015260e082015160e084015261010060ff8184015116908401526101208083015190840152610140808301511515908401526101608083015190840152610180908183015116908301526101a0808201511515908301526101c0809101511515910152565b6020908160408183019282815285518094520193019160005b8281106114bf575050505090565b90919293826101e0826114d560019489516113dd565b019501939291016114b1565b6101e081019081106001600160401b038211176114fd57604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b038211176114fd57604052565b6001600160401b0381116114fd5760051b60200190565b90600091825481101561158557600a90838052027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019190565b634e487b7160e01b83526032600452602483fd5b6020908160408183019282815285518094520193019160005b8281106115c0575050505090565b83516001600160401b0316855293810193928101926001016115b2565b600435906001600160a01b03821682036113c257565b9190820180921161160057565b634e487b7160e01b600052601160045260246000fd5b9060015482101561165657600160005260188260021c7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019260031b1690565b634e487b7160e01b600052603260045260246000fd5b600154600160401b8110156114fd5780600161168b9201600155611616565b819291549060031b916001600160401b039283811b93849216901b16911916179055565b908160209103126113c2575180151581036113c25790565b9190820391821161160057565b8181029291811591840414171561160057565b81156116f1570490565b634e487b7160e01b600052601260045260246000fd5b1561170e57565b60405162461bcd60e51b815260206004820152601760248201527f6c6f776572207472616e73616374696f6e2076616c75650000000000000000006044820152606490fd5b9290926000908154806001600160401b03871610156121595785101561214557818052600a850294857f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563017f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56c87019560ff9283885460a81c16612110576117d99061166c565b15611c8c577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a870154821615611c07576118497f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56b8801546000805160206126178339815191528901549087612570565b955b6000805160206125f783398151915288019661188e8854857f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5688c0154169061250a565b80821015611bfe575080995b11611ba757600354908160011c9184845460e81c16600014611aac57506118ce6118c6600354896115f3565b341015611707565b8580888015611aa2575b8280929181923090f115611a8e57858080808560018060a01b0380965416828215611a99575bf115611a8e57858080936119218294600254169161191c8c346116c7565b6116c7565b90828215611a85575bf115611a7a5790879392915b6119647f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56689019687546115f3565b865554908160401c166000146119f65750818080948193829082156119ec575b6001600160a01b031690f1156119e05750600080516020612637833981519152916119d46119da925b6119b88784546116c7565b80935554600080516020612617833981519152860154906115f3565b906116d4565b91015590565b604051903d90823e3d90fd5b6108fc9150611984565b60405163a9059cbb60e01b81526001600160a01b039283166004820152602481019490945260209184916044918391869160489190911c165af19081156119e057506119da9260008051602061263783398151915294926119d492611a5c575b506119ad565b611a739060203d8111610d3757610d288183611513565b5038611a56565b6040513d85823e3d90fd5b506108fc61192a565b6040513d87823e3d90fd5b506108fc6118fe565b6108fc91506118d8565b90611ada7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56492341015611707565b908901546040516323b872dd60e01b81526001600160a01b038781166004830152306024830152604482018a90529291602090829060649082908c9088165af18015611b9c57888585829583958495611b7e575b505416828215611b75575bf115611a8e5785808093611b5382946002541691346116c7565b90828215611b6c575bf115611a7a579087939291611936565b506108fc611b5c565b506108fc611b39565b611b959060203d8111610d3757610d288183611513565b5038611b2e565b6040513d8a823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f6d696e52656365697665206973206c657373207468616e2063616c6375616c74604482015268195908185b5bdd5b9d60ba1b6064820152608490fd5b9050809961189a565b611c866000805160206125f7833981519152880154611c806000805160206126378339815191528a0154611c7a89611c758d7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566600080516020612617833981519152820154910154906115f3565b6115f3565b906116e7565b906116c7565b9561184b565b9491907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566870195865480156120b9577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a89015483161561206457611d266000805160206126178339815191528a01547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56b8b01549089612570565b905b8082101561205b575080995b11612004576003548154604095600183901c9282881c861615611f3057509050611d636118c66003548a6115f3565b8680898015611f26575b8280929181923090f115611f1357868080808560018060a01b0380965416828215611f1d575bf115611f135786808093611db18294600254169161191c8d346116c7565b90828215611f0a575bf115611efd57908892915b611de16000805160206125f78339815191528a019788546115f3565b87555460e81c1615611e585783808093819382908215611e4e575b6001600160a01b031690f1156101b0575050600080516020612637833981519152916119d46119da925b611e318784546116c7565b8093555491600080516020612617833981519152860154906115f3565b6108fc9150611dfc565b7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564870154835163a9059cbb60e01b81526001600160a01b0392831660048201526024810193909352919391602091859160449183918691165af19182156101b05750506119da9260008051602061263783398151915294926119d492611edf575b50611e26565b611ef69060203d8111610d3757610d288183611513565b5038611ed9565b50505051903d90823e3d90fd5b506108fc611dba565b85513d88823e3d90fd5b506108fc611d93565b6108fc9150611d6d565b611f3c90341015611707565b86516323b872dd60e01b81526001600160a01b038781166004830152306024830152604482018b905292602090829060649082908d9060481c88165af18015611ffa57898585829583958495611fdc575b505416828215611fd3575bf115611f135786808093611fb282946002541691346116c7565b90828215611fca575bf115611efd5790889291611dc5565b506108fc611fbb565b506108fc611f98565b611ff39060203d8111610d3757610d288183611513565b5038611f8d565b88513d8b823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f6d696e52656365697665206973206d6f7265207468616e2063616c6375616c74604482015268195908185b5bdd5b9d60ba1b6064820152608490fd5b90508099611d34565b6120b3612082826000805160206126178339815191528c01546115f3565b611c808b611c7a8b6000805160206125f78339815191526000805160206126378339815191528401549301546115f3565b90611d28565b60405162461bcd60e51b815260206004820152602960248201527f7a65726f20616d6f756e74206f662061737365743220666f722062757920696e604482015268081d1a19481c1bdbdb60ba1b6064820152608490fd5b60405162461bcd60e51b815260206004820152600d60248201526c506f6f6c20697320656d70747960981b6044820152606490fd5b634e487b7160e01b82526032600452602482fd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1bdbdb125960921b6044820152606490fd5b1561219657565b60405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081c1bdbdb081a59608a1b6044820152606490fd5b156121d457565b60405162461bcd60e51b815260206004820152600e60248201526d1c1bdbdb081a5cc81b1bd8dad95960921b6044820152606490fd5b1561221157565b60405162461bcd60e51b81526020600482015260136024820152721b1bddd95c881d185e081cdc1958da599a5959606a1b6044820152606490fd5b1561225357565b60405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081c1bdbdb125960921b6044820152606490fd5b1561229057565b60405162461bcd60e51b815260206004820152600f60248201526e696e76616c696420696e646578657360881b6044820152606490fd5b6001600160401b03918216908216039190821161160057565b604051906122ed826114e1565b816101c06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a08201520152565b9061235982611534565b6123666040519182611513565b8281528092612377601f1991611534565b019060005b82811061238857505050565b6020906123936122e0565b8282850101520161237c565b6001600160401b038091169081146116005760010190565b80518210156116565760209160051b010190565b906040516123d8816114e1565b6101c0819380546001600160401b0381168452600960ff92838360401c16151560208701528360018060a01b0393848160481c16604089015260e81c1615156060870152826001820154166080870152600281015460a0870152600381015460c0870152600481015460e087015283600582015416610100870152600681015461012087015283600782015416151561014087015260088101546101608701520154908116610180850152818160a01c1615156101a085015260a81c161515910152565b156124a357565b60405162461bcd60e51b815260206004820152600d60248201526c0d2dcecc2d8d2c840d2dcc8caf609b1b6044820152606490fd5b906124e282611534565b6124ef6040519182611513565b8281528092612500601f1991611534565b0190602036910137565b600019828209828202918280831092039180830392146125665781606411156113c2577f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c29936064910990828211900360fe1b910360021c170290565b5050606491500490565b9160001982840992828102928380861095039480860395146125e657848311156113c2578291096001821901821680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b5050906125f392506116e7565b9056fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569a26469706673582212203c442a543119d2823687284290577bbe6779062d85a3d7810693e4883c9a0f4664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH3 0x10A JUMPI PUSH7 0x38D7EA4C68000 PUSH1 0x3 DUP2 SWAP1 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xA0 DUP3 ADD DUP2 DUP2 GT DUP4 DUP3 LT OR PUSH3 0xF4 JUMPI PUSH1 0x40 MSTORE PUSH6 0x9184E72A000 DUP3 MSTORE PUSH1 0x20 SWAP3 PUSH6 0x5AF3107A4000 DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH7 0x2386F26FC10000 PUSH1 0x60 DUP4 ADD MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 SLOAD SWAP2 PUSH1 0x5 SWAP3 DUP4 PUSH1 0x4 SSTORE DUP1 DUP5 LT PUSH3 0xC8 JUMPI JUMPDEST POP SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0xB3 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x268C SWAP1 DUP2 PUSH3 0x110 DUP3 CODECOPY RETURN JUMPDEST DUP4 MLOAD DUP4 AND DUP3 DUP3 ADD SSTORE SWAP3 DUP6 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0x89 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 MSTORE DUP5 DUP7 DUP3 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH3 0xE8 JUMPI POP POP PUSH3 0x7B JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xD8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI STOP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x376E49C EQ PUSH2 0x1339 JUMPI DUP1 PUSH4 0xC95BE25 EQ PUSH2 0x1085 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x106A JUMPI DUP1 PUSH4 0x1E67D542 EQ PUSH2 0x1030 JUMPI DUP1 PUSH4 0x22668DE1 EQ PUSH2 0xF40 JUMPI DUP1 PUSH4 0x3997663C EQ PUSH2 0xE4C JUMPI DUP1 PUSH4 0x455B5ADC EQ PUSH2 0xDD8 JUMPI DUP1 PUSH4 0x578CB8F9 EQ PUSH2 0xDB9 JUMPI DUP1 PUSH4 0x57B0B64D EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0x74D13A23 EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x81D802BA EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0x919ADAB8 EQ PUSH2 0x7E3 JUMPI DUP1 PUSH4 0xACB8001F EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0xB0B15560 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0xD5700CBB EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF5A1F5B4 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xF6FCE7A9 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xF8C81B90 EQ PUSH2 0x283 JUMPI PUSH4 0xFA5A67ED EQ PUSH2 0x111 JUMPI POP PUSH2 0x11 JUMP JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x124 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x13C DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND LT PUSH2 0x224C JUMP JUMPDEST PUSH2 0x145 DUP3 PUSH2 0x154B JUMP JUMPDEST POP PUSH1 0x9 DUP2 ADD SLOAD SWAP4 PUSH2 0x15C PUSH1 0xFF DUP7 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 CALLER SWAP1 DUP7 AND SUB PUSH2 0x220 JUMPI DUP3 ISZERO PUSH2 0x1C4 JUMPI POP DUP6 SWAP4 PUSH2 0x189 DUP6 SWAP5 DUP6 SWAP5 PUSH1 0x6 DUP7 SWAP6 ADD SSTORE PUSH2 0x166C JUMP JUMPDEST PUSH2 0x197 PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x220A JUMP JUMPDEST PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x1BA JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x1B0 JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6E7374616E742070726F6475637420286F6E6C792070 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6F736974697665206E756D6265727329 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206368616E67652074 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1A194818DBDB9CDD185B9D081C1C9BD91D58DD PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x349 JUMPI PUSH2 0x29D PUSH2 0x13AC JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2DC PUSH2 0x2AA PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x2D6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP6 DUP3 PUSH2 0x2D1 DUP9 DUP1 SWAP6 AND SWAP8 DUP6 DUP5 AND DUP10 GT SWAP1 DUP2 PUSH2 0x33D JUMPI JUMPDEST POP PUSH2 0x2289 JUMP JUMPDEST PUSH2 0x22C7 JUMP JUMPDEST AND PUSH2 0x234F JUMP JUMPDEST SWAP3 DUP2 JUMPDEST DUP4 DUP3 DUP3 AND LT PUSH2 0x2F9 JUMPI DUP6 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1498 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x332 PUSH2 0x309 PUSH2 0x338 SWAP4 PUSH2 0x154B JUMP JUMPDEST POP DUP5 PUSH2 0x31E PUSH2 0x318 DUP9 DUP7 PUSH2 0x22C7 JUMP JUMPDEST SWAP3 PUSH2 0x23CB JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x32B DUP3 DUP11 PUSH2 0x23B7 JUMP JUMPDEST MSTORE DUP8 PUSH2 0x23B7 JUMP JUMPDEST POP PUSH2 0x239F JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST SWAP1 POP SLOAD DUP9 GT ISZERO DUP12 PUSH2 0x2CB JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x360 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x4B9 JUMPI PUSH2 0x383 DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND LT PUSH2 0x224C JUMP JUMPDEST PUSH1 0x9 PUSH2 0x38E DUP4 PUSH2 0x154B JUMP JUMPDEST POP ADD SLOAD SWAP3 PUSH2 0x3A2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 CALLER SWAP1 DUP6 AND SUB PUSH2 0x444 JUMPI PUSH1 0x64 DUP3 GT ISZERO DUP1 PUSH2 0x43B JUMPI JUMPDEST ISZERO PUSH2 0x3EC JUMPI POP DUP5 DUP1 SWAP4 PUSH2 0x189 DUP5 DUP4 SWAP6 SWAP5 PUSH1 0x5 PUSH2 0x3DB DUP7 SWAP8 PUSH2 0x154B JUMP JUMPDEST POP ADD SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x166C JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206D61782070657263656E7420706572207472616E73616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x3BF JUMP JUMPDEST PUSH1 0xA4 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206368616E6765206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65774D617842757941737365743150657263656E745065725472616E73616374 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x4D8 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP6 AND CALLER SUB PUSH2 0x50A JUMPI POP POP AND SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207468652063757272656E74206F776E65722063616E206368616E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x32903A34329037BBB732B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x577 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x57F PUSH2 0x13C7 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x349 JUMPI POP SWAP3 PUSH2 0x5A3 SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x1753 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x20 SWAP2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x60A PUSH2 0x13AC JUMP JUMPDEST SWAP2 PUSH2 0x620 DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND LT PUSH2 0x218F JUMP JUMPDEST PUSH1 0x9 PUSH2 0x62B DUP5 PUSH2 0x154B JUMP JUMPDEST POP ADD SWAP3 DUP4 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x6F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 CALLER SWAP1 DUP5 AND SUB PUSH2 0x6AA JUMPI POP DUP5 DUP1 DUP1 SWAP4 PUSH2 0x65D DUP3 SWAP5 PUSH2 0x166C JUMP JUMPDEST PUSH2 0x66B PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x220A JUMP JUMPDEST PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x6A0 JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x695 JUMPI POP DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST MLOAD SWAP2 RETURNDATASIZE SWAP2 POP DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x678 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206C6F636B20612070 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1BDBDB PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1C1BDBDB081A5CC8185B1C9958591E481B1BD8DAD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x349 JUMPI POP PUSH2 0x750 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x758 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0x788 DUP5 PUSH2 0x782 DUP6 DUP3 DUP6 AND SWAP5 DUP4 DUP3 AND DUP7 GT DUP1 PUSH2 0x7D7 JUMPI JUMPDEST PUSH2 0x2D1 SWAP1 PUSH2 0x2289 JUMP JUMPDEST AND PUSH2 0x24D8 JUMP JUMPDEST SWAP3 DUP1 JUMPDEST DUP3 DUP7 DUP3 AND LT PUSH2 0x7A1 JUMPI DUP4 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1599 JUMP JUMPDEST DUP1 DUP7 PUSH2 0x7AF PUSH2 0x7D2 SWAP4 PUSH2 0x1616 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x7CC DUP9 PUSH2 0x7C5 DUP7 DUP6 PUSH2 0x22C7 JUMP JUMPDEST AND DUP9 PUSH2 0x23B7 JUMP JUMPDEST MSTORE PUSH2 0x239F JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP7 GT ISZERO PUSH2 0x779 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x1E0 SWAP1 PUSH2 0x828 PUSH2 0x81F PUSH2 0x819 PUSH2 0x80B PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x813 PUSH2 0x22E0 JUMP JUMPDEST POP PUSH2 0x154B JUMP JUMPDEST POP PUSH2 0x23CB JUMP JUMPDEST SWAP2 MLOAD DUP1 SWAP3 PUSH2 0x13DD JUMP JUMPDEST RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x83E PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x907 JUMPI PUSH2 0x86A DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND LT PUSH2 0x224C JUMP JUMPDEST PUSH1 0x9 PUSH2 0x875 DUP5 PUSH2 0x154B JUMP JUMPDEST POP ADD SWAP2 DUP3 SLOAD SWAP1 PUSH2 0x88B PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST CALLER DUP7 DUP4 AND SUB PUSH2 0x8B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP4 OR DUP5 SSTORE DUP8 DUP8 DUP2 DUP1 DUP1 DUP1 DUP12 PUSH2 0x189 DUP13 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206368616E6765206F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x776E65727368697 PUSH1 0xC4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP1 DUP2 DUP5 SUB PUSH2 0x4B9 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9FA JUMPI DUP3 SLOAD DUP1 SWAP3 LT DUP1 PUSH2 0x9F2 JUMPI JUMPDEST ISZERO PUSH2 0x993 JUMPI POP DUP3 LT ISZERO PUSH2 0x980 JUMPI POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SLOAD PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E6577546178496E64657846726F6D56616C6964436F6E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x726163745472616E73616374696F6E5461786573 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x949 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207468652063757272656E74206F776E65722063616E206368616E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0xCA40E8D0CA40E8C2F PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0xA66 PUSH2 0x15DD JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x4B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xDB5 JUMPI PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0xDB1 JUMPI PUSH1 0x84 CALLDATALOAD DUP8 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xDAD JUMPI PUSH1 0xA4 CALLDATALOAD SWAP7 PUSH1 0xC4 CALLDATALOAD SWAP7 PUSH1 0xE4 CALLDATALOAD SWAP7 PUSH1 0xFF DUP9 AND DUP1 SWAP9 SUB PUSH2 0xDA9 JUMPI PUSH2 0x104 CALLDATALOAD SWAP7 DUP8 ISZERO ISZERO DUP1 SWAP9 SUB PUSH2 0xDA5 JUMPI PUSH1 0x3 SLOAD PUSH2 0xAE3 SWAP1 DUP16 DUP5 ISZERO PUSH2 0xD9F JUMPI POP DUP13 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST CALLVALUE LT PUSH2 0xD4A JUMPI DUP13 DUP16 DUP16 SWAP3 DUP14 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 SLOAD AND SWAP6 PUSH2 0xB04 DUP8 PUSH2 0x166C JUMP JUMPDEST ISZERO PUSH2 0xC95 JUMPI POP POP POP POP DUP1 DUP12 DUP1 ISZERO PUSH2 0xC8B JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 ADDRESS SWAP1 CALL ISZERO PUSH2 0xC78 JUMPI DUP13 DUP1 DUP1 DUP1 DUP14 DUP16 PUSH2 0xB39 SWAP1 PUSH1 0x2 SLOAD AND SWAP2 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0xC82 JUMPI JUMPDEST CALL ISZERO PUSH2 0xC78 JUMPI JUMPDEST DUP13 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC63 JUMPI SWAP2 DUP14 SWAP15 SWAP6 SWAP4 SWAP2 DUP4 DUP16 SWAP15 SWAP16 SWAP14 SWAP15 PUSH1 0x1 DUP14 SWAP11 SWAP9 SWAP7 ADD SWAP1 SSTORE PUSH2 0xB75 SWAP1 PUSH2 0x154B JUMP JUMPDEST POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP3 OR SWAP1 SSTORE PUSH2 0xB90 SWAP1 PUSH2 0x154B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x2 DUP3 ADD DUP14 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x3 DUP2 ADD SWAP13 SWAP1 SWAP13 SSTORE PUSH1 0xFF PUSH1 0xE8 SHL PUSH1 0xE8 SWAP5 SWAP1 SWAP5 SHL SWAP4 SWAP1 SWAP4 AND SWAP3 SHL PUSH9 0xFF0000000000000000 AND PUSH10 0x1000000000000000000 PUSH1 0x1 PUSH1 0xE8 SHL SUB PUSH1 0x48 SWAP5 SWAP1 SWAP5 SHL SWAP4 SWAP1 SWAP4 AND PUSH9 0x10000000000000000 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR OR DUP8 SSTORE DUP7 ADD SSTORE PUSH1 0x5 DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x7 DUP6 ADD DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0xC3D SWAP1 DUP3 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 ADD SWAP2 AND PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP14 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xB16 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP1 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD3E JUMPI DUP15 DUP1 DUP15 DUP2 SWAP5 DUP3 SWAP5 PUSH2 0xD10 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0xD06 JUMPI JUMPDEST CALLVALUE SWAP2 CALL PUSH2 0xB49 JUMPI DUP2 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0xD30 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI JUMPDEST PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x16AF JUMP JUMPDEST POP CODESIZE PUSH2 0xCE7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD1E JUMP JUMPDEST DUP15 DUP5 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x84 DUP16 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F776572207468616E20746865207265717569726564207472616E73616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x696F6E2076616C7565 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x15F3 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x349 JUMPI POP PUSH2 0xDF4 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0xE20 PUSH2 0xE1B DUP6 DUP6 AND PUSH2 0xE15 DUP5 DUP3 LT PUSH2 0x249C JUMP JUMPDEST DUP4 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x24D8 JUMP JUMPDEST SWAP3 DUP1 JUMPDEST DUP3 DUP7 DUP3 AND LT PUSH2 0xE39 JUMPI DUP4 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1599 JUMP JUMPDEST DUP1 DUP7 PUSH2 0x7AF PUSH2 0xE47 SWAP4 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST POP CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI DUP1 CALLDATALOAD SWAP3 DUP1 SLOAD DUP5 LT ISZERO PUSH2 0x349 JUMPI POP PUSH2 0xE77 PUSH2 0x1E0 SWAP4 PUSH2 0x154B JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD SWAP6 DUP4 ADD SLOAD SWAP6 PUSH1 0xFF SWAP7 DUP8 PUSH1 0x5 DUP7 ADD SLOAD AND SWAP2 PUSH1 0x6 DUP7 ADD SLOAD SWAP4 DUP10 PUSH1 0x7 DUP9 ADD SLOAD AND SWAP6 DUP11 PUSH1 0x9 PUSH1 0x8 DUP11 ADD SLOAD SWAP10 ADD SLOAD SWAP11 DUP14 MLOAD DUP1 SWAP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND DUP3 MSTORE DUP4 DUP4 DUP3 SHR AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP13 DUP4 PUSH1 0x48 SHR AND SWAP2 ADD MSTORE PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE DUP2 AND PUSH2 0x180 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x349 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI DUP1 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP6 GT PUSH2 0x102C JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x102C JUMPI DUP5 ADD CALLDATALOAD SWAP4 PUSH2 0xF80 DUP6 PUSH2 0x1534 JUMP JUMPDEST SWAP5 PUSH2 0xF8D DUP8 MLOAD SWAP7 DUP8 PUSH2 0x1513 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x24 DUP4 DUP8 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x907 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1010 JUMPI POP POP POP POP PUSH2 0xFBE DUP4 MLOAD PUSH2 0x234F JUMP JUMPDEST SWAP2 JUMPDEST DUP4 MLOAD DUP3 DUP3 AND SWAP1 DUP2 LT ISZERO PUSH2 0x1003 JUMPI SWAP1 PUSH2 0x332 DUP3 PUSH2 0xFED PUSH2 0x819 DUP7 PUSH2 0xFE6 PUSH2 0xFFE SWAP8 DUP12 PUSH2 0x23B7 JUMP JUMPDEST MLOAD AND PUSH2 0x154B JUMP JUMPDEST PUSH2 0xFF7 DUP3 DUP9 PUSH2 0x23B7 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST DUP6 MLOAD DUP1 PUSH2 0x2F5 DUP7 DUP3 PUSH2 0x1498 JUMP JUMPDEST DUP2 CALLDATALOAD DUP6 DUP2 AND DUP2 SUB PUSH2 0x1028 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xFA9 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x9 PUSH2 0x105A PUSH2 0x1055 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST POP ADD SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x109E PUSH2 0x13AC JUMP JUMPDEST SWAP4 PUSH2 0x10B4 DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND LT PUSH2 0x218F JUMP JUMPDEST PUSH2 0x10BD DUP6 PUSH2 0x154B JUMP JUMPDEST POP SWAP1 PUSH1 0x9 DUP3 ADD SWAP4 DUP5 SLOAD PUSH2 0x10D6 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x1306 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLER SWAP1 DUP3 AND SUB PUSH2 0x12B8 JUMPI PUSH2 0x1100 DUP8 SWAP9 SWAP8 SWAP7 SWAP8 PUSH2 0x166C JUMP JUMPDEST PUSH2 0x110E PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x220A JUMP JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP5 PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x12AE JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x122A JUMPI DUP4 SLOAD DUP3 DUP2 DUP6 SHR PUSH1 0xFF AND ISZERO PUSH2 0x123D JUMPI POP POP DUP6 DUP1 DUP1 DUP1 PUSH1 0x2 DUP9 ADD SLOAD DUP2 DUP2 ISZERO PUSH2 0x1234 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x122A JUMPI DUP6 SWAP1 JUMPDEST DUP2 PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0xFF DUP6 SLOAD PUSH1 0xE8 SHR AND PUSH1 0x0 EQ PUSH2 0x11B5 JUMPI POP DUP1 DUP1 DUP1 SWAP4 POP PUSH1 0x3 DUP7 ADD SLOAD DUP2 DUP2 ISZERO PUSH2 0x11AC JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x11A3 JUMPI POP JUMPDEST PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE ADD SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x117C JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP6 SWAP4 DUP7 SWAP4 DUP7 SWAP4 AND SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1221 JUMPI POP PUSH2 0x1203 JUMPI JUMPDEST POP POP PUSH2 0x1186 JUMP JUMPDEST DUP2 PUSH2 0x1219 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP DUP6 DUP1 PUSH2 0x11FC JUMP JUMPDEST MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x2 DUP7 ADD SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x40 ADD SWAP1 DUP3 SWAP1 DUP12 SWAP1 PUSH1 0x48 SHR DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x12A4 JUMPI SWAP1 DUP8 SWAP3 SWAP2 PUSH2 0x1287 JUMPI JUMPDEST POP PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x129D SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP DUP10 PUSH2 0x1281 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1120 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP4 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E20656D70747920706F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1BDB PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP4 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x706F6F6C20697320656D707479 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x349 JUMPI PUSH2 0x1354 PUSH2 0x13AC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH2 0x137E PUSH2 0x1379 DUP5 DUP4 AND PUSH2 0x1373 DUP6 DUP3 LT PUSH2 0x249C JUMP JUMPDEST DUP5 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x234F JUMP JUMPDEST SWAP3 DUP2 JUMPDEST DUP4 DUP3 DUP3 AND LT PUSH2 0x1397 JUMPI DUP6 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1498 JUMP JUMPDEST DUP1 PUSH2 0x332 PUSH2 0x309 PUSH2 0x13A7 SWAP4 PUSH2 0x154B JUMP JUMPDEST PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13C2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13C2 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 MLOAD AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH1 0xFF DUP2 DUP5 ADD MLOAD AND SWAP1 DUP5 ADD MSTORE PUSH2 0x120 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x140 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP5 ADD MSTORE PUSH2 0x160 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x180 SWAP1 DUP2 DUP4 ADD MLOAD AND SWAP1 DUP4 ADD MSTORE PUSH2 0x1A0 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x1C0 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x14BF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH2 0x1E0 DUP3 PUSH2 0x14D5 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x13DD JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x14FD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x14FD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14FD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x1585 JUMPI PUSH1 0xA SWAP1 DUP4 DUP1 MSTORE MUL PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x15C0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13C2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1600 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0x1656 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x18 DUP3 PUSH1 0x2 SHR PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP3 PUSH1 0x3 SHL AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x14FD JUMPI DUP1 PUSH1 0x1 PUSH2 0x168B SWAP3 ADD PUSH1 0x1 SSTORE PUSH2 0x1616 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP2 SHL SWAP4 DUP5 SWAP3 AND SWAP1 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x13C2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x13C2 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1600 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1600 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x16F1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x170E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F776572207472616E73616374696F6E2076616C7565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP3 PUSH1 0x0 SWAP1 DUP2 SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND LT ISZERO PUSH2 0x2159 JUMPI DUP6 LT ISZERO PUSH2 0x2145 JUMPI DUP2 DUP1 MSTORE PUSH1 0xA DUP6 MUL SWAP5 DUP6 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56C DUP8 ADD SWAP6 PUSH1 0xFF SWAP3 DUP4 DUP9 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x2110 JUMPI PUSH2 0x17D9 SWAP1 PUSH2 0x166C JUMP JUMPDEST ISZERO PUSH2 0x1C8C JUMPI PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A DUP8 ADD SLOAD DUP3 AND ISZERO PUSH2 0x1C07 JUMPI PUSH2 0x1849 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56B DUP9 ADD SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 ADD SLOAD SWAP1 DUP8 PUSH2 0x2570 JUMP JUMPDEST SWAP6 JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 ADD SWAP7 PUSH2 0x188E DUP9 SLOAD DUP6 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP13 ADD SLOAD AND SWAP1 PUSH2 0x250A JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1BFE JUMPI POP DUP1 SWAP10 JUMPDEST GT PUSH2 0x1BA7 JUMPI PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 DUP5 DUP5 SLOAD PUSH1 0xE8 SHR AND PUSH1 0x0 EQ PUSH2 0x1AAC JUMPI POP PUSH2 0x18CE PUSH2 0x18C6 PUSH1 0x3 SLOAD DUP10 PUSH2 0x15F3 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1707 JUMP JUMPDEST DUP6 DUP1 DUP9 DUP1 ISZERO PUSH2 0x1AA2 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 ADDRESS SWAP1 CALL ISZERO PUSH2 0x1A8E JUMPI DUP6 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1A99 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A8E JUMPI DUP6 DUP1 DUP1 SWAP4 PUSH2 0x1921 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 PUSH2 0x191C DUP13 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1A85 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A7A JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH2 0x1964 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP10 ADD SWAP7 DUP8 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP7 SSTORE SLOAD SWAP1 DUP2 PUSH1 0x40 SHR AND PUSH1 0x0 EQ PUSH2 0x19F6 JUMPI POP DUP2 DUP1 DUP1 SWAP5 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0x19EC JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0x19E0 JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x19D4 PUSH2 0x19DA SWAP3 JUMPDEST PUSH2 0x19B8 DUP8 DUP5 SLOAD PUSH2 0x16C7 JUMP JUMPDEST DUP1 SWAP4 SSTORE SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 ADD SLOAD SWAP1 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 PUSH2 0x16D4 JUMP JUMPDEST SWAP2 ADD SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH1 0x48 SWAP2 SWAP1 SWAP2 SHR AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x19E0 JUMPI POP PUSH2 0x19DA SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 SWAP3 PUSH2 0x19D4 SWAP3 PUSH2 0x1A5C JUMPI JUMPDEST POP PUSH2 0x19AD JUMP JUMPDEST PUSH2 0x1A73 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x192A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x18D8 JUMP JUMPDEST SWAP1 PUSH2 0x1ADA PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 SWAP3 CALLVALUE LT ISZERO PUSH2 0x1707 JUMP JUMPDEST SWAP1 DUP10 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP11 SWAP1 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1B9C JUMPI DUP9 DUP6 DUP6 DUP3 SWAP6 DUP4 SWAP6 DUP5 SWAP6 PUSH2 0x1B7E JUMPI JUMPDEST POP SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1B75 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A8E JUMPI DUP6 DUP1 DUP1 SWAP4 PUSH2 0x1B53 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1B6C JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A7A JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 PUSH2 0x1936 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1B5C JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x1B95 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E52656365697665206973206C657373207468616E2063616C6375616C74 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195908185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP1 SWAP10 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1C86 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 ADD SLOAD PUSH2 0x1C80 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 ADD SLOAD PUSH2 0x1C7A DUP10 PUSH2 0x1C75 DUP14 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x15F3 JUMP JUMPDEST SWAP1 PUSH2 0x16E7 JUMP JUMPDEST SWAP1 PUSH2 0x16C7 JUMP JUMPDEST SWAP6 PUSH2 0x184B JUMP JUMPDEST SWAP5 SWAP2 SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP8 ADD SWAP6 DUP7 SLOAD DUP1 ISZERO PUSH2 0x20B9 JUMPI PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A DUP10 ADD SLOAD DUP4 AND ISZERO PUSH2 0x2064 JUMPI PUSH2 0x1D26 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56B DUP12 ADD SLOAD SWAP1 DUP10 PUSH2 0x2570 JUMP JUMPDEST SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x205B JUMPI POP DUP1 SWAP10 JUMPDEST GT PUSH2 0x2004 JUMPI PUSH1 0x3 SLOAD DUP2 SLOAD PUSH1 0x40 SWAP6 PUSH1 0x1 DUP4 SWAP1 SHR SWAP3 DUP3 DUP9 SHR DUP7 AND ISZERO PUSH2 0x1F30 JUMPI POP SWAP1 POP PUSH2 0x1D63 PUSH2 0x18C6 PUSH1 0x3 SLOAD DUP11 PUSH2 0x15F3 JUMP JUMPDEST DUP7 DUP1 DUP10 DUP1 ISZERO PUSH2 0x1F26 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 ADDRESS SWAP1 CALL ISZERO PUSH2 0x1F13 JUMPI DUP7 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1F1D JUMPI JUMPDEST CALL ISZERO PUSH2 0x1F13 JUMPI DUP7 DUP1 DUP1 SWAP4 PUSH2 0x1DB1 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 PUSH2 0x191C DUP14 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1F0A JUMPI JUMPDEST CALL ISZERO PUSH2 0x1EFD JUMPI SWAP1 DUP9 SWAP3 SWAP2 JUMPDEST PUSH2 0x1DE1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 ADD SWAP8 DUP9 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP8 SSTORE SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x1E58 JUMPI DUP4 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0x1E4E JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0x1B0 JUMPI POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x19D4 PUSH2 0x19DA SWAP3 JUMPDEST PUSH2 0x1E31 DUP8 DUP5 SLOAD PUSH2 0x16C7 JUMP JUMPDEST DUP1 SWAP4 SSTORE SLOAD SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 ADD SLOAD SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1DFC JUMP JUMPDEST PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP8 ADD SLOAD DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 SWAP2 PUSH1 0x20 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP7 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1B0 JUMPI POP POP PUSH2 0x19DA SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 SWAP3 PUSH2 0x19D4 SWAP3 PUSH2 0x1EDF JUMPI JUMPDEST POP PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x1EF6 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1ED9 JUMP JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1DBA JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x1F3C SWAP1 CALLVALUE LT ISZERO PUSH2 0x1707 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP14 SWAP1 PUSH1 0x48 SHR DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1FFA JUMPI DUP10 DUP6 DUP6 DUP3 SWAP6 DUP4 SWAP6 DUP5 SWAP6 PUSH2 0x1FDC JUMPI JUMPDEST POP SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1FD3 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1F13 JUMPI DUP7 DUP1 DUP1 SWAP4 PUSH2 0x1FB2 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1FCA JUMPI JUMPDEST CALL ISZERO PUSH2 0x1EFD JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH2 0x1DC5 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1FBB JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1F98 JUMP JUMPDEST PUSH2 0x1FF3 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1F8D JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E52656365697665206973206D6F7265207468616E2063616C6375616C74 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195908185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP1 SWAP10 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x20B3 PUSH2 0x2082 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 ADD SLOAD PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x1C80 DUP12 PUSH2 0x1C7A DUP12 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH2 0x15F3 JUMP JUMPDEST SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7A65726F20616D6F756E74206F662061737365743220666F722062757920696E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x81D1A19481C1BDBDB PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x506F6F6C20697320656D707479 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081C1BDBDB1259 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2196 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21D4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1C1BDBDB081A5CC81B1BD8DAD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2211 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B1BDDD95C881D185E081CDC1958DA599A5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2253 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A59081C1BDBDB1259 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2290 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x696E76616C696420696E6465786573 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x1600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x22ED DUP3 PUSH2 0x14E1 JUMP JUMPDEST DUP2 PUSH2 0x1C0 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2359 DUP3 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x2366 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1513 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2377 PUSH1 0x1F NOT SWAP2 PUSH2 0x1534 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2388 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x2393 PUSH2 0x22E0 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x237C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH2 0x1600 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1656 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x23D8 DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1C0 DUP2 SWAP4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x9 PUSH1 0xFF SWAP3 DUP4 DUP4 PUSH1 0x40 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE DUP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP2 PUSH1 0x48 SHR AND PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xE0 DUP8 ADD MSTORE DUP4 PUSH1 0x5 DUP3 ADD SLOAD AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE DUP4 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE ADD SLOAD SWAP1 DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x24A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xD2DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x24E2 DUP3 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x24EF PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1513 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2500 PUSH1 0x1F NOT SWAP2 PUSH2 0x1534 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP3 DUP3 MULMOD DUP3 DUP3 MUL SWAP2 DUP3 DUP1 DUP4 LT SWAP3 SUB SWAP2 DUP1 DUP4 SUB SWAP3 EQ PUSH2 0x2566 JUMPI DUP2 PUSH1 0x64 GT ISZERO PUSH2 0x13C2 JUMPI PUSH32 0x5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C29 SWAP4 PUSH1 0x64 SWAP2 MULMOD SWAP1 DUP3 DUP3 GT SWAP1 SUB PUSH1 0xFE SHL SWAP2 SUB PUSH1 0x2 SHR OR MUL SWAP1 JUMP JUMPDEST POP POP PUSH1 0x64 SWAP2 POP DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT DUP3 DUP5 MULMOD SWAP3 DUP3 DUP2 MUL SWAP3 DUP4 DUP1 DUP7 LT SWAP6 SUB SWAP5 DUP1 DUP7 SUB SWAP6 EQ PUSH2 0x25E6 JUMPI DUP5 DUP4 GT ISZERO PUSH2 0x13C2 JUMPI DUP3 SWAP2 MULMOD PUSH1 0x1 DUP3 NOT ADD DUP3 AND DUP1 SWAP3 DIV PUSH1 0x2 DUP1 DUP3 PUSH1 0x3 MUL XOR DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 SWAP3 MUL SWAP1 SUB MUL SWAP4 PUSH1 0x1 DUP4 DUP1 PUSH1 0x0 SUB DIV ADD SWAP1 DUP5 DUP4 GT SWAP1 SUB MUL SWAP3 SUB DIV OR MUL SWAP1 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x25F3 SWAP3 POP PUSH2 0x16E7 JUMP JUMPDEST SWAP1 JUMP INVALID 0x29 0xD 0xEC 0xD9 SLOAD DUP12 PUSH3 0xA8D603 GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH6 0x290DECD9548B PUSH3 0xA8D603 GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH8 0x290DECD9548B62A8 0xD6 SUB GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH10 0xA2646970667358221220 EXTCODECOPY DIFFICULTY 0x2A SLOAD BALANCE NOT 0xD2 DUP3 CALLDATASIZE DUP8 0x28 TIMESTAMP SWAP1 JUMPI PUSH28 0xBE6779062D85A3D7810693E4883C9A0F4664736F6C63430008110033 ",
							"sourceMap": "886:25765:0:-:0;;;;25686:8;;886:25765;;;25686:8;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;25855:6;886:25765;;25854:40;;25863:6;25854:40;;;886:25765;;25854:40;;886:25765;25879:6;25854:40;;;886:25765;25887:6;25854:40;;;886:25765;25854:40;886:25765;25854:40;;886:25765;;25854:40;886:25765;;;;;;-1:-1:-1;886:25765:0;;25854:40;-1:-1:-1;886:25765:0;;-1:-1:-1;886:25765:0;-1:-1:-1;886:25765:0;;;;;;24771:35;886:25765;;-1:-1:-1;;;;;;886:25765:0;24795:10;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25854:40:0;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:25765:0;;;;;-1:-1:-1;886:25765:0;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_struct_Pool_dyn": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint64_dyn": {
									"entryPoint": 5529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_Pool": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_and_zero_memory_array_array_struct_Pool_dyn": {
									"entryPoint": 9039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_array_array_uint64_dyn": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_struct_struct_Pool": {
									"entryPoint": 8928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint64_dyn": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_push_from_uint64_to_array_uint64_dyn_storage_ptr": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"checked_add_uint256": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_uint256": {
									"entryPoint": 5863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint64": {
									"entryPoint": 8903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_18975": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_exchangeAsset": {
									"entryPoint": 5971,
									"id": 704,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"fun_mulDiv": {
									"entryPoint": 9584,
									"id": 1743,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_mulDiv_18962": {
									"entryPoint": 9482,
									"id": 1743,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_uint64": {
									"entryPoint": 9119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_struct_Pool_dyn": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"read_from_storage_reference_type_struct_Pool": {
									"entryPoint": 9163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral": {
									"entryPoint": 8714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_27c5": {
									"entryPoint": 8591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_5b92": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_93d5": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_9a9f": {
									"entryPoint": 8653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_ce92": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_ec10": {
									"entryPoint": 9372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_struct_Pool_dyn": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"storage_array_index_access_uint64_dyn_ptr": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6040608081526004908136101561001d575b5050361561001b57005b005b600091823560e01c80630376e49c146113395780630c95be251461108557806312065fe01461106a5780631e67d5421461103057806322668de114610f405780633997663c14610e4c578063455b5adc14610dd8578063578cb8f914610db957806357b0b64d14610a4e57806374d13a231461090b57806381d802ba1461082a578063919adab8146107e3578063acb8001f14610735578063b0b15560146105f4578063b4ac6860146105d7578063ce606ee0146105ae578063d5700cbb14610561578063f5a1f5b4146104bd578063f6fce7a91461034c578063f8c81b90146102835763fa5a67ed146101115750610011565b8160031936011261027f576101246113ac565b60243561013c85546001600160401b0384161061224c565b6101458261154b565b5060098101549361015c60ff8660a01c16156121cd565b6001600160a01b039433908616036102205782156101c4575085936101898594859460068695015561166c565b61019760035434101561220a565b60025416819034156101ba575b3491f1156101b0575080f35b51903d90823e3d90fd5b6108fc91506101a4565b608490602087519162461bcd60e51b8352820152603060248201527f696e76616c696420636f6e7374616e742070726f6475637420286f6e6c79207060448201526f6f736974697665206e756d626572732960801b6064820152fd5b608490602087519162461bcd60e51b8352820152603360248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206368616e676520746044820152721a194818dbdb9cdd185b9d081c1c9bd91d58dd606a1b6064820152fd5b8280fd5b82843461034957816003193601126103495761029d6113ac565b90816102dc6102aa6113c7565b6102d66001600160401b0395826102d188809516978584168911908161033d575b50612289565b6122c7565b1661234f565b92815b83828216106102f9578551806102f58782611498565b0390f35b806103326103096103389361154b565b508461031e61031888866122c7565b926123cb565b91169061032b828a6123b7565b52876123b7565b5061239f565b6102df565b9050548811158b6102cb565b80fd5b508160031936011261027f576103606113ac565b60243560ff81168091036104b95761038385546001600160401b0384161061224c565b600961038e8361154b565b500154926103a260ff8560a01c16156121cd565b6001600160a01b039333908516036104445760648211158061043b575b156103ec57508480936101898483959460056103db869761154b565b50019060ff1982541617905561166c565b608490602086519162461bcd60e51b8352820152602360248201527f696e76616c6964206d61782070657263656e7420706572207472616e7361637460448201526234b7b760e91b6064820152fd5b508115156103bf565b60a490602086519162461bcd60e51b8352820152604360248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206e60448201527f65774d617842757941737365743150657263656e745065725472616e7361637460648201526234b7b760e91b6084820152fd5b8480fd5b50903461027f57602036600319011261027f576104d86115dd565b600254926001600160a01b0392838516330361050a57505016906bffffffffffffffffffffffff60a01b161760025580f35b906020608492519162461bcd60e51b8352820152602b60248201527f6f6e6c79207468652063757272656e74206f776e65722063616e206368616e6760448201526a32903a34329037bbb732b960a91b6064820152fd5b505060a03660031901126105aa576105776115dd565b61057f6113c7565b926044359081151582036103495750926105a3916020946084359260643592611753565b9051908152f35b5080fd5b5050346105aa57816003193601126105aa5760025490516001600160a01b039091168152602090f35b5050346105aa57816003193601126105aa57602091549051908152f35b5090602036600319011261027f5761060a6113ac565b9161062084546001600160401b0385161061218f565b600961062b8461154b565b50019283549160ff8360a01c166106f9576001600160a01b039233908416036106aa57508480809361065d829461166c565b61066b60035434101561220a565b60025416819034156106a0575b3491f1156106955750805460ff60a01b1916600160a01b17905580f35b51913d9150823e3d90fd5b6108fc9150610678565b608490602085519162461bcd60e51b8352820152602360248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206c6f636b206120706044820152621bdbdb60ea1b6064820152fd5b606490602085519162461bcd60e51b835282015260166024820152751c1bdbdb081a5cc8185b1c9958591e481b1bd8dad95960521b6044820152fd5b828434610349578160031936011261034957506107506113ac565b6107586113c7565b916001600160401b03926107888461078285828516948382168611806107d7575b6102d190612289565b166124d8565b92805b82868216106107a1578351806102f58782611599565b80866107af6107d293611616565b90549060031b1c166107cc886107c586856122c7565b16886123b7565b5261239f565b61078b565b50600154861115610779565b5050346105aa5760203660031901126105aa576101e09061082861081f61081961080b6113ac565b6108136122e0565b5061154b565b506123cb565b915180926113dd565bf35b508160031936011261027f5761083e6113ac565b6001600160a01b0391602435838116908190036109075761086a86546001600160401b0385161061224c565b60096108758461154b565b50019182549061088b60ff8360a01c16156121cd565b33868316036108b3576001600160a01b03198216831784558787818080808b6101898c61166c565b608490602088519162461bcd60e51b8352820152602860248201527f6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206f6044820152670776e6572736869760c41b6064820152fd5b8580fd5b503461027f57602036600319011261027f5780359160ff8316908184036104b9576002546001600160a01b031633036109fa578254809210806109f2575b15610993575082101561098057507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015460035580f35b634e487b7160e01b835260329052602482fd5b5162461bcd60e51b8152602081840152603460248201527f696e76616c6964206e6577546178496e64657846726f6d56616c6964436f6e74604482015273726163745472616e73616374696f6e546178657360601b6064820152608490fd5b506001610949565b5162461bcd60e51b8152602081840152602960248201527f6f6e6c79207468652063757272656e74206f776e65722063616e206368616e676044820152680ca40e8d0ca40e8c2f60bb1b6064820152608490fd5b5091906101203660031901126105aa57610a666115dd565b9060243590811515908183036104b9576001600160a01b039260443584811690818103610db557606435801515809103610db157608435878116809103610dad5760a4359660c4359660e4359660ff8816809803610da9576101043596871515809803610da557600354610ae3908f8415610d9f57508c906115f3565b3410610d4a578c8f8f928d916001600160401b0385541695610b048761166c565b15610c955750505050808b8015610c8b575b8280929181923090f115610c78578c8080808d8f610b39906002541691346116c7565b90828215610c82575bf115610c78575b8c54600160401b811015610c6357918d9e959391838f9e9f9d9e60018d9a9896019055610b759061154b565b50805467ffffffffffffffff191682179055610b909061154b565b508054600282018d90556001820180546001600160a01b03191695909517909455600381019c909c5560ff60e81b60e89490941b93909316921b68ff0000000000000000166901000000000000000000600160e81b0360489490941b9390931668010000000000000000600160f01b0319909116179190911717875586015560058501805460ff1990811693909317905560078501805490921660ff91909116179055610c3d90826116d4565b60068301556008820155600901911669ffffffffffffffffffff60b01b82541617905580f35b5050634e487b7160e01b8c5260418d5260248cfd5b81513d8e823e3d90fd5b506108fc610b42565b6108fc9150610b16565b86516323b872dd60e01b81526001600160a01b039094169084019081523060208281019190915260408201939093529293919284928391829060600103925af18015610d3e578e808e81948294610d10575b506002541681903415610d06575b3491f1610b495781513d8e823e3d90fd5b6108fc9150610cf5565b610d309060203d8111610d37575b610d288183611513565b8101906116af565b5038610ce7565b503d610d1e565b8e8451903d90823e3d90fd5b60848f602085519162461bcd60e51b8352820152602960248201527f4c6f776572207468616e20746865207265717569726564207472616e73616374604482015268696f6e2076616c756560b81b6064820152fd5b906115f3565b8d80fd5b8c80fd5b8980fd5b8880fd5b8780fd5b5050346105aa57816003193601126105aa576020906001549051908152f35b8284346103495760203660031901126103495750610df46113ac565b600154916001600160401b0392610e20610e1b858516610e1584821061249c565b836116c7565b6124d8565b92805b8286821610610e39578351806102f58782611599565b80866107af610e4793611616565b610e23565b503461027f57602036600319011261027f5780359280548410156103495750610e776101e09361154b565b5080549060018060a01b03908160018201541660028201546003830154958301549560ff96876005860154169160068601549389600788015416958a600960088a01549901549a8d51809e6001600160401b03831682528383821c16151560208301528c8360481c1691015260e81c16151560608d015260808c015260a08b015260c08a015260e089015261010088015261012087015215156101408601526101608501528116610180840152818160a01c1615156101a084015260a81c1615156101c0820152f35b50823461034957602091826003193601126105aa578035926001600160401b039182851161102c573660238601121561102c5784013593610f8085611534565b94610f8d87519687611513565b80865260248387019160051b8301019136831161090757602401905b8282106110105750505050610fbe835161234f565b915b835182821690811015611003579061033282610fed61081986610fe6610ffe978b6123b7565b511661154b565b610ff782886123b7565b52856123b7565b610fc0565b8551806102f58682611498565b81358581168103611028578152908301908301610fa9565b8680fd5b8380fd5b5050346105aa5760203660031901126105aa5760209060ff600961105a6110556113ac565b61154b565b50015460a01c1690519015158152f35b5050346105aa57816003193601126105aa5751478152602090f35b5082906020908160031936011261027f5761109e6113ac565b936110b484546001600160401b0387161061218f565b6110bd8561154b565b5090600982019384546110d660ff8260a01c16156121cd565b60ff8160a81c16611306576001600160a01b039033908216036112b857611100879897969761166c565b61110e60035434101561220a565b858080808460025416819034156112ae575b3491f11561122a5783548281851c60ff161561123d575050858080806002880154818115611234575b3390f11561122a5785905b81600286015560ff855460e81c166000146111b55750808080935060038601548181156111ac575b3390f1156111a357505b600381018390550155805460ff60a81b1916600160a81b17905580f35b513d84823e3d90fd5b506108fc61117c565b60018501546003860154855163a9059cbb60e01b8152338982019081526020810192909252949593869386931691839190829060400103925af19081156112215750611203575b5050611186565b8161121992903d10610d3757610d288183611513565b5085806111fc565b513d87823e3d90fd5b82513d87823e3d90fd5b506108fc611149565b6002860154855163a9059cbb60e01b81523389820190815260208101929092529283918290036040019082908b9060481c87165af180156112a45790879291611287575b50611154565b61129d90843d8611610d3757610d288183611513565b5089611281565b84513d89823e3d90fd5b6108fc9150611120565b825162461bcd60e51b8152808601839052602260248201527f6f6e6c792074686520706f6f6c206f776e65722063616e20656d70747920706f6044820152611bdb60f21b6064820152608490fd5b825162461bcd60e51b8152808601839052600d60248201526c706f6f6c20697320656d70747960981b6044820152606490fd5b828434610349576020366003190112610349576113546113ac565b90546001600160401b039161137e61137984831661137385821061249c565b846116c7565b61234f565b92815b8382821610611397578551806102f58782611498565b806103326103096113a79361154b565b611381565b600435906001600160401b03821682036113c257565b600080fd5b602435906001600160401b03821682036113c257565b6001600160401b03815116825260208101511515602083015260018060a01b0380604083015116604084015260608201511515606084015280608083015116608084015260a082015160a084015260c082015160c084015260e082015160e084015261010060ff8184015116908401526101208083015190840152610140808301511515908401526101608083015190840152610180908183015116908301526101a0808201511515908301526101c0809101511515910152565b6020908160408183019282815285518094520193019160005b8281106114bf575050505090565b90919293826101e0826114d560019489516113dd565b019501939291016114b1565b6101e081019081106001600160401b038211176114fd57604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b038211176114fd57604052565b6001600160401b0381116114fd5760051b60200190565b90600091825481101561158557600a90838052027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019190565b634e487b7160e01b83526032600452602483fd5b6020908160408183019282815285518094520193019160005b8281106115c0575050505090565b83516001600160401b0316855293810193928101926001016115b2565b600435906001600160a01b03821682036113c257565b9190820180921161160057565b634e487b7160e01b600052601160045260246000fd5b9060015482101561165657600160005260188260021c7fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019260031b1690565b634e487b7160e01b600052603260045260246000fd5b600154600160401b8110156114fd5780600161168b9201600155611616565b819291549060031b916001600160401b039283811b93849216901b16911916179055565b908160209103126113c2575180151581036113c25790565b9190820391821161160057565b8181029291811591840414171561160057565b81156116f1570490565b634e487b7160e01b600052601260045260246000fd5b1561170e57565b60405162461bcd60e51b815260206004820152601760248201527f6c6f776572207472616e73616374696f6e2076616c75650000000000000000006044820152606490fd5b9290926000908154806001600160401b03871610156121595785101561214557818052600a850294857f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563017f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56c87019560ff9283885460a81c16612110576117d99061166c565b15611c8c577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a870154821615611c07576118497f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56b8801546000805160206126178339815191528901549087612570565b955b6000805160206125f783398151915288019661188e8854857f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5688c0154169061250a565b80821015611bfe575080995b11611ba757600354908160011c9184845460e81c16600014611aac57506118ce6118c6600354896115f3565b341015611707565b8580888015611aa2575b8280929181923090f115611a8e57858080808560018060a01b0380965416828215611a99575bf115611a8e57858080936119218294600254169161191c8c346116c7565b6116c7565b90828215611a85575bf115611a7a5790879392915b6119647f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56689019687546115f3565b865554908160401c166000146119f65750818080948193829082156119ec575b6001600160a01b031690f1156119e05750600080516020612637833981519152916119d46119da925b6119b88784546116c7565b80935554600080516020612617833981519152860154906115f3565b906116d4565b91015590565b604051903d90823e3d90fd5b6108fc9150611984565b60405163a9059cbb60e01b81526001600160a01b039283166004820152602481019490945260209184916044918391869160489190911c165af19081156119e057506119da9260008051602061263783398151915294926119d492611a5c575b506119ad565b611a739060203d8111610d3757610d288183611513565b5038611a56565b6040513d85823e3d90fd5b506108fc61192a565b6040513d87823e3d90fd5b506108fc6118fe565b6108fc91506118d8565b90611ada7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56492341015611707565b908901546040516323b872dd60e01b81526001600160a01b038781166004830152306024830152604482018a90529291602090829060649082908c9088165af18015611b9c57888585829583958495611b7e575b505416828215611b75575bf115611a8e5785808093611b5382946002541691346116c7565b90828215611b6c575bf115611a7a579087939291611936565b506108fc611b5c565b506108fc611b39565b611b959060203d8111610d3757610d288183611513565b5038611b2e565b6040513d8a823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f6d696e52656365697665206973206c657373207468616e2063616c6375616c74604482015268195908185b5bdd5b9d60ba1b6064820152608490fd5b9050809961189a565b611c866000805160206125f7833981519152880154611c806000805160206126378339815191528a0154611c7a89611c758d7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566600080516020612617833981519152820154910154906115f3565b6115f3565b906116e7565b906116c7565b9561184b565b9491907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566870195865480156120b9577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a89015483161561206457611d266000805160206126178339815191528a01547f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56b8b01549089612570565b905b8082101561205b575080995b11612004576003548154604095600183901c9282881c861615611f3057509050611d636118c66003548a6115f3565b8680898015611f26575b8280929181923090f115611f1357868080808560018060a01b0380965416828215611f1d575bf115611f135786808093611db18294600254169161191c8d346116c7565b90828215611f0a575bf115611efd57908892915b611de16000805160206125f78339815191528a019788546115f3565b87555460e81c1615611e585783808093819382908215611e4e575b6001600160a01b031690f1156101b0575050600080516020612637833981519152916119d46119da925b611e318784546116c7565b8093555491600080516020612617833981519152860154906115f3565b6108fc9150611dfc565b7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564870154835163a9059cbb60e01b81526001600160a01b0392831660048201526024810193909352919391602091859160449183918691165af19182156101b05750506119da9260008051602061263783398151915294926119d492611edf575b50611e26565b611ef69060203d8111610d3757610d288183611513565b5038611ed9565b50505051903d90823e3d90fd5b506108fc611dba565b85513d88823e3d90fd5b506108fc611d93565b6108fc9150611d6d565b611f3c90341015611707565b86516323b872dd60e01b81526001600160a01b038781166004830152306024830152604482018b905292602090829060649082908d9060481c88165af18015611ffa57898585829583958495611fdc575b505416828215611fd3575bf115611f135786808093611fb282946002541691346116c7565b90828215611fca575bf115611efd5790889291611dc5565b506108fc611fbb565b506108fc611f98565b611ff39060203d8111610d3757610d288183611513565b5038611f8d565b88513d8b823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f6d696e52656365697665206973206d6f7265207468616e2063616c6375616c74604482015268195908185b5bdd5b9d60ba1b6064820152608490fd5b90508099611d34565b6120b3612082826000805160206126178339815191528c01546115f3565b611c808b611c7a8b6000805160206125f78339815191526000805160206126378339815191528401549301546115f3565b90611d28565b60405162461bcd60e51b815260206004820152602960248201527f7a65726f20616d6f756e74206f662061737365743220666f722062757920696e604482015268081d1a19481c1bdbdb60ba1b6064820152608490fd5b60405162461bcd60e51b815260206004820152600d60248201526c506f6f6c20697320656d70747960981b6044820152606490fd5b634e487b7160e01b82526032600452602482fd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1bdbdb125960921b6044820152606490fd5b1561219657565b60405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081c1bdbdb081a59608a1b6044820152606490fd5b156121d457565b60405162461bcd60e51b815260206004820152600e60248201526d1c1bdbdb081a5cc81b1bd8dad95960921b6044820152606490fd5b1561221157565b60405162461bcd60e51b81526020600482015260136024820152721b1bddd95c881d185e081cdc1958da599a5959606a1b6044820152606490fd5b1561225357565b60405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081c1bdbdb125960921b6044820152606490fd5b1561229057565b60405162461bcd60e51b815260206004820152600f60248201526e696e76616c696420696e646578657360881b6044820152606490fd5b6001600160401b03918216908216039190821161160057565b604051906122ed826114e1565b816101c06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a08201520152565b9061235982611534565b6123666040519182611513565b8281528092612377601f1991611534565b019060005b82811061238857505050565b6020906123936122e0565b8282850101520161237c565b6001600160401b038091169081146116005760010190565b80518210156116565760209160051b010190565b906040516123d8816114e1565b6101c0819380546001600160401b0381168452600960ff92838360401c16151560208701528360018060a01b0393848160481c16604089015260e81c1615156060870152826001820154166080870152600281015460a0870152600381015460c0870152600481015460e087015283600582015416610100870152600681015461012087015283600782015416151561014087015260088101546101608701520154908116610180850152818160a01c1615156101a085015260a81c161515910152565b156124a357565b60405162461bcd60e51b815260206004820152600d60248201526c0d2dcecc2d8d2c840d2dcc8caf609b1b6044820152606490fd5b906124e282611534565b6124ef6040519182611513565b8281528092612500601f1991611534565b0190602036910137565b600019828209828202918280831092039180830392146125665781606411156113c2577f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c29936064910990828211900360fe1b910360021c170290565b5050606491500490565b9160001982840992828102928380861095039480860395146125e657848311156113c2578291096001821901821680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b5050906125f392506116e7565b9056fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569a26469706673582212203c442a543119d2823687284290577bbe6779062d85a3d7810693e4883c9a0f4664736f6c63430008110033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI STOP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x376E49C EQ PUSH2 0x1339 JUMPI DUP1 PUSH4 0xC95BE25 EQ PUSH2 0x1085 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x106A JUMPI DUP1 PUSH4 0x1E67D542 EQ PUSH2 0x1030 JUMPI DUP1 PUSH4 0x22668DE1 EQ PUSH2 0xF40 JUMPI DUP1 PUSH4 0x3997663C EQ PUSH2 0xE4C JUMPI DUP1 PUSH4 0x455B5ADC EQ PUSH2 0xDD8 JUMPI DUP1 PUSH4 0x578CB8F9 EQ PUSH2 0xDB9 JUMPI DUP1 PUSH4 0x57B0B64D EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0x74D13A23 EQ PUSH2 0x90B JUMPI DUP1 PUSH4 0x81D802BA EQ PUSH2 0x82A JUMPI DUP1 PUSH4 0x919ADAB8 EQ PUSH2 0x7E3 JUMPI DUP1 PUSH4 0xACB8001F EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0xB0B15560 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0xB4AC6860 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0xD5700CBB EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF5A1F5B4 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xF6FCE7A9 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xF8C81B90 EQ PUSH2 0x283 JUMPI PUSH4 0xFA5A67ED EQ PUSH2 0x111 JUMPI POP PUSH2 0x11 JUMP JUMPDEST DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x124 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x13C DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND LT PUSH2 0x224C JUMP JUMPDEST PUSH2 0x145 DUP3 PUSH2 0x154B JUMP JUMPDEST POP PUSH1 0x9 DUP2 ADD SLOAD SWAP4 PUSH2 0x15C PUSH1 0xFF DUP7 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 CALLER SWAP1 DUP7 AND SUB PUSH2 0x220 JUMPI DUP3 ISZERO PUSH2 0x1C4 JUMPI POP DUP6 SWAP4 PUSH2 0x189 DUP6 SWAP5 DUP6 SWAP5 PUSH1 0x6 DUP7 SWAP6 ADD SSTORE PUSH2 0x166C JUMP JUMPDEST PUSH2 0x197 PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x220A JUMP JUMPDEST PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x1BA JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x1B0 JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6E7374616E742070726F6475637420286F6E6C792070 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x6F736974697665206E756D6265727329 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206368616E67652074 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1A194818DBDB9CDD185B9D081C1C9BD91D58DD PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x349 JUMPI PUSH2 0x29D PUSH2 0x13AC JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x2DC PUSH2 0x2AA PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x2D6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP6 DUP3 PUSH2 0x2D1 DUP9 DUP1 SWAP6 AND SWAP8 DUP6 DUP5 AND DUP10 GT SWAP1 DUP2 PUSH2 0x33D JUMPI JUMPDEST POP PUSH2 0x2289 JUMP JUMPDEST PUSH2 0x22C7 JUMP JUMPDEST AND PUSH2 0x234F JUMP JUMPDEST SWAP3 DUP2 JUMPDEST DUP4 DUP3 DUP3 AND LT PUSH2 0x2F9 JUMPI DUP6 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1498 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x332 PUSH2 0x309 PUSH2 0x338 SWAP4 PUSH2 0x154B JUMP JUMPDEST POP DUP5 PUSH2 0x31E PUSH2 0x318 DUP9 DUP7 PUSH2 0x22C7 JUMP JUMPDEST SWAP3 PUSH2 0x23CB JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x32B DUP3 DUP11 PUSH2 0x23B7 JUMP JUMPDEST MSTORE DUP8 PUSH2 0x23B7 JUMP JUMPDEST POP PUSH2 0x239F JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST SWAP1 POP SLOAD DUP9 GT ISZERO DUP12 PUSH2 0x2CB JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x360 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x4B9 JUMPI PUSH2 0x383 DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 AND LT PUSH2 0x224C JUMP JUMPDEST PUSH1 0x9 PUSH2 0x38E DUP4 PUSH2 0x154B JUMP JUMPDEST POP ADD SLOAD SWAP3 PUSH2 0x3A2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 CALLER SWAP1 DUP6 AND SUB PUSH2 0x444 JUMPI PUSH1 0x64 DUP3 GT ISZERO DUP1 PUSH2 0x43B JUMPI JUMPDEST ISZERO PUSH2 0x3EC JUMPI POP DUP5 DUP1 SWAP4 PUSH2 0x189 DUP5 DUP4 SWAP6 SWAP5 PUSH1 0x5 PUSH2 0x3DB DUP7 SWAP8 PUSH2 0x154B JUMP JUMPDEST POP ADD SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x166C JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206D61782070657263656E7420706572207472616E73616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x3BF JUMP JUMPDEST PUSH1 0xA4 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206368616E6765206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65774D617842757941737365743150657263656E745065725472616E73616374 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x34B7B7 PUSH1 0xE9 SHL PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x4D8 PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP6 AND CALLER SUB PUSH2 0x50A JUMPI POP POP AND SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207468652063757272656E74206F776E65722063616E206368616E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x32903A34329037BBB732B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x577 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x57F PUSH2 0x13C7 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x349 JUMPI POP SWAP3 PUSH2 0x5A3 SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x84 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH2 0x1753 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x20 SWAP2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x60A PUSH2 0x13AC JUMP JUMPDEST SWAP2 PUSH2 0x620 DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND LT PUSH2 0x218F JUMP JUMPDEST PUSH1 0x9 PUSH2 0x62B DUP5 PUSH2 0x154B JUMP JUMPDEST POP ADD SWAP3 DUP4 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND PUSH2 0x6F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 CALLER SWAP1 DUP5 AND SUB PUSH2 0x6AA JUMPI POP DUP5 DUP1 DUP1 SWAP4 PUSH2 0x65D DUP3 SWAP5 PUSH2 0x166C JUMP JUMPDEST PUSH2 0x66B PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x220A JUMP JUMPDEST PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x6A0 JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x695 JUMPI POP DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST MLOAD SWAP2 RETURNDATASIZE SWAP2 POP DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x678 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206C6F636B20612070 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1BDBDB PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1C1BDBDB081A5CC8185B1C9958591E481B1BD8DAD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x349 JUMPI POP PUSH2 0x750 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x758 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0x788 DUP5 PUSH2 0x782 DUP6 DUP3 DUP6 AND SWAP5 DUP4 DUP3 AND DUP7 GT DUP1 PUSH2 0x7D7 JUMPI JUMPDEST PUSH2 0x2D1 SWAP1 PUSH2 0x2289 JUMP JUMPDEST AND PUSH2 0x24D8 JUMP JUMPDEST SWAP3 DUP1 JUMPDEST DUP3 DUP7 DUP3 AND LT PUSH2 0x7A1 JUMPI DUP4 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1599 JUMP JUMPDEST DUP1 DUP7 PUSH2 0x7AF PUSH2 0x7D2 SWAP4 PUSH2 0x1616 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x7CC DUP9 PUSH2 0x7C5 DUP7 DUP6 PUSH2 0x22C7 JUMP JUMPDEST AND DUP9 PUSH2 0x23B7 JUMP JUMPDEST MSTORE PUSH2 0x239F JUMP JUMPDEST PUSH2 0x78B JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP7 GT ISZERO PUSH2 0x779 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x1E0 SWAP1 PUSH2 0x828 PUSH2 0x81F PUSH2 0x819 PUSH2 0x80B PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x813 PUSH2 0x22E0 JUMP JUMPDEST POP PUSH2 0x154B JUMP JUMPDEST POP PUSH2 0x23CB JUMP JUMPDEST SWAP2 MLOAD DUP1 SWAP3 PUSH2 0x13DD JUMP JUMPDEST RETURN JUMPDEST POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x83E PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x907 JUMPI PUSH2 0x86A DUP7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND LT PUSH2 0x224C JUMP JUMPDEST PUSH1 0x9 PUSH2 0x875 DUP5 PUSH2 0x154B JUMP JUMPDEST POP ADD SWAP2 DUP3 SLOAD SWAP1 PUSH2 0x88B PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST CALLER DUP7 DUP4 AND SUB PUSH2 0x8B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP4 OR DUP5 SSTORE DUP8 DUP8 DUP2 DUP1 DUP1 DUP1 DUP12 PUSH2 0x189 DUP13 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E206368616E6765206F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x776E65727368697 PUSH1 0xC4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP1 DUP2 DUP5 SUB PUSH2 0x4B9 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9FA JUMPI DUP3 SLOAD DUP1 SWAP3 LT DUP1 PUSH2 0x9F2 JUMPI JUMPDEST ISZERO PUSH2 0x993 JUMPI POP DUP3 LT ISZERO PUSH2 0x980 JUMPI POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SLOAD PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E6577546178496E64657846726F6D56616C6964436F6E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x726163745472616E73616374696F6E5461786573 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x949 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207468652063757272656E74206F776E65722063616E206368616E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0xCA40E8D0CA40E8C2F PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0xA66 PUSH2 0x15DD JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x4B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0xDB5 JUMPI PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0xDB1 JUMPI PUSH1 0x84 CALLDATALOAD DUP8 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xDAD JUMPI PUSH1 0xA4 CALLDATALOAD SWAP7 PUSH1 0xC4 CALLDATALOAD SWAP7 PUSH1 0xE4 CALLDATALOAD SWAP7 PUSH1 0xFF DUP9 AND DUP1 SWAP9 SUB PUSH2 0xDA9 JUMPI PUSH2 0x104 CALLDATALOAD SWAP7 DUP8 ISZERO ISZERO DUP1 SWAP9 SUB PUSH2 0xDA5 JUMPI PUSH1 0x3 SLOAD PUSH2 0xAE3 SWAP1 DUP16 DUP5 ISZERO PUSH2 0xD9F JUMPI POP DUP13 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST CALLVALUE LT PUSH2 0xD4A JUMPI DUP13 DUP16 DUP16 SWAP3 DUP14 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 SLOAD AND SWAP6 PUSH2 0xB04 DUP8 PUSH2 0x166C JUMP JUMPDEST ISZERO PUSH2 0xC95 JUMPI POP POP POP POP DUP1 DUP12 DUP1 ISZERO PUSH2 0xC8B JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 ADDRESS SWAP1 CALL ISZERO PUSH2 0xC78 JUMPI DUP13 DUP1 DUP1 DUP1 DUP14 DUP16 PUSH2 0xB39 SWAP1 PUSH1 0x2 SLOAD AND SWAP2 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0xC82 JUMPI JUMPDEST CALL ISZERO PUSH2 0xC78 JUMPI JUMPDEST DUP13 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC63 JUMPI SWAP2 DUP14 SWAP15 SWAP6 SWAP4 SWAP2 DUP4 DUP16 SWAP15 SWAP16 SWAP14 SWAP15 PUSH1 0x1 DUP14 SWAP11 SWAP9 SWAP7 ADD SWAP1 SSTORE PUSH2 0xB75 SWAP1 PUSH2 0x154B JUMP JUMPDEST POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND DUP3 OR SWAP1 SSTORE PUSH2 0xB90 SWAP1 PUSH2 0x154B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x2 DUP3 ADD DUP14 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x3 DUP2 ADD SWAP13 SWAP1 SWAP13 SSTORE PUSH1 0xFF PUSH1 0xE8 SHL PUSH1 0xE8 SWAP5 SWAP1 SWAP5 SHL SWAP4 SWAP1 SWAP4 AND SWAP3 SHL PUSH9 0xFF0000000000000000 AND PUSH10 0x1000000000000000000 PUSH1 0x1 PUSH1 0xE8 SHL SUB PUSH1 0x48 SWAP5 SWAP1 SWAP5 SHL SWAP4 SWAP1 SWAP4 AND PUSH9 0x10000000000000000 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR OR DUP8 SSTORE DUP7 ADD SSTORE PUSH1 0x5 DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x7 DUP6 ADD DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0xC3D SWAP1 DUP3 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 ADD SWAP2 AND PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP14 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xB16 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP1 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD3E JUMPI DUP15 DUP1 DUP15 DUP2 SWAP5 DUP3 SWAP5 PUSH2 0xD10 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0xD06 JUMPI JUMPDEST CALLVALUE SWAP2 CALL PUSH2 0xB49 JUMPI DUP2 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0xD30 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI JUMPDEST PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x16AF JUMP JUMPDEST POP CODESIZE PUSH2 0xCE7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD1E JUMP JUMPDEST DUP15 DUP5 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x84 DUP16 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F776572207468616E20746865207265717569726564207472616E73616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x696F6E2076616C7565 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x15F3 JUMP JUMPDEST DUP14 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x349 JUMPI POP PUSH2 0xDF4 PUSH2 0x13AC JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0xE20 PUSH2 0xE1B DUP6 DUP6 AND PUSH2 0xE15 DUP5 DUP3 LT PUSH2 0x249C JUMP JUMPDEST DUP4 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x24D8 JUMP JUMPDEST SWAP3 DUP1 JUMPDEST DUP3 DUP7 DUP3 AND LT PUSH2 0xE39 JUMPI DUP4 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1599 JUMP JUMPDEST DUP1 DUP7 PUSH2 0x7AF PUSH2 0xE47 SWAP4 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST POP CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI DUP1 CALLDATALOAD SWAP3 DUP1 SLOAD DUP5 LT ISZERO PUSH2 0x349 JUMPI POP PUSH2 0xE77 PUSH2 0x1E0 SWAP4 PUSH2 0x154B JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD SWAP6 DUP4 ADD SLOAD SWAP6 PUSH1 0xFF SWAP7 DUP8 PUSH1 0x5 DUP7 ADD SLOAD AND SWAP2 PUSH1 0x6 DUP7 ADD SLOAD SWAP4 DUP10 PUSH1 0x7 DUP9 ADD SLOAD AND SWAP6 DUP11 PUSH1 0x9 PUSH1 0x8 DUP11 ADD SLOAD SWAP10 ADD SLOAD SWAP11 DUP14 MLOAD DUP1 SWAP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND DUP3 MSTORE DUP4 DUP4 DUP3 SHR AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP13 DUP4 PUSH1 0x48 SHR AND SWAP2 ADD MSTORE PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD MSTORE PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE DUP2 AND PUSH2 0x180 DUP5 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x349 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI DUP1 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP6 GT PUSH2 0x102C JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x102C JUMPI DUP5 ADD CALLDATALOAD SWAP4 PUSH2 0xF80 DUP6 PUSH2 0x1534 JUMP JUMPDEST SWAP5 PUSH2 0xF8D DUP8 MLOAD SWAP7 DUP8 PUSH2 0x1513 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x24 DUP4 DUP8 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x907 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1010 JUMPI POP POP POP POP PUSH2 0xFBE DUP4 MLOAD PUSH2 0x234F JUMP JUMPDEST SWAP2 JUMPDEST DUP4 MLOAD DUP3 DUP3 AND SWAP1 DUP2 LT ISZERO PUSH2 0x1003 JUMPI SWAP1 PUSH2 0x332 DUP3 PUSH2 0xFED PUSH2 0x819 DUP7 PUSH2 0xFE6 PUSH2 0xFFE SWAP8 DUP12 PUSH2 0x23B7 JUMP JUMPDEST MLOAD AND PUSH2 0x154B JUMP JUMPDEST PUSH2 0xFF7 DUP3 DUP9 PUSH2 0x23B7 JUMP JUMPDEST MSTORE DUP6 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST DUP6 MLOAD DUP1 PUSH2 0x2F5 DUP7 DUP3 PUSH2 0x1498 JUMP JUMPDEST DUP2 CALLDATALOAD DUP6 DUP2 AND DUP2 SUB PUSH2 0x1028 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xFA9 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x9 PUSH2 0x105A PUSH2 0x1055 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST POP ADD SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x5AA JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AA JUMPI MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x109E PUSH2 0x13AC JUMP JUMPDEST SWAP4 PUSH2 0x10B4 DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND LT PUSH2 0x218F JUMP JUMPDEST PUSH2 0x10BD DUP6 PUSH2 0x154B JUMP JUMPDEST POP SWAP1 PUSH1 0x9 DUP3 ADD SWAP4 DUP5 SLOAD PUSH2 0x10D6 PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND ISZERO PUSH2 0x21CD JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x1306 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLER SWAP1 DUP3 AND SUB PUSH2 0x12B8 JUMPI PUSH2 0x1100 DUP8 SWAP9 SWAP8 SWAP7 SWAP8 PUSH2 0x166C JUMP JUMPDEST PUSH2 0x110E PUSH1 0x3 SLOAD CALLVALUE LT ISZERO PUSH2 0x220A JUMP JUMPDEST DUP6 DUP1 DUP1 DUP1 DUP5 PUSH1 0x2 SLOAD AND DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x12AE JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x122A JUMPI DUP4 SLOAD DUP3 DUP2 DUP6 SHR PUSH1 0xFF AND ISZERO PUSH2 0x123D JUMPI POP POP DUP6 DUP1 DUP1 DUP1 PUSH1 0x2 DUP9 ADD SLOAD DUP2 DUP2 ISZERO PUSH2 0x1234 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x122A JUMPI DUP6 SWAP1 JUMPDEST DUP2 PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0xFF DUP6 SLOAD PUSH1 0xE8 SHR AND PUSH1 0x0 EQ PUSH2 0x11B5 JUMPI POP DUP1 DUP1 DUP1 SWAP4 POP PUSH1 0x3 DUP7 ADD SLOAD DUP2 DUP2 ISZERO PUSH2 0x11AC JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x11A3 JUMPI POP JUMPDEST PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE ADD SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x117C JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP6 SWAP4 DUP7 SWAP4 DUP7 SWAP4 AND SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1221 JUMPI POP PUSH2 0x1203 JUMPI JUMPDEST POP POP PUSH2 0x1186 JUMP JUMPDEST DUP2 PUSH2 0x1219 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP DUP6 DUP1 PUSH2 0x11FC JUMP JUMPDEST MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x2 DUP7 ADD SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x40 ADD SWAP1 DUP3 SWAP1 DUP12 SWAP1 PUSH1 0x48 SHR DUP8 AND GAS CALL DUP1 ISZERO PUSH2 0x12A4 JUMPI SWAP1 DUP8 SWAP3 SWAP2 PUSH2 0x1287 JUMPI JUMPDEST POP PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x129D SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP DUP10 PUSH2 0x1281 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1120 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP4 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792074686520706F6F6C206F776E65722063616E20656D70747920706F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1BDB PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP4 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x706F6F6C20697320656D707479 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x349 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x349 JUMPI PUSH2 0x1354 PUSH2 0x13AC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH2 0x137E PUSH2 0x1379 DUP5 DUP4 AND PUSH2 0x1373 DUP6 DUP3 LT PUSH2 0x249C JUMP JUMPDEST DUP5 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x234F JUMP JUMPDEST SWAP3 DUP2 JUMPDEST DUP4 DUP3 DUP3 AND LT PUSH2 0x1397 JUMPI DUP6 MLOAD DUP1 PUSH2 0x2F5 DUP8 DUP3 PUSH2 0x1498 JUMP JUMPDEST DUP1 PUSH2 0x332 PUSH2 0x309 PUSH2 0x13A7 SWAP4 PUSH2 0x154B JUMP JUMPDEST PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13C2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13C2 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 MLOAD AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH1 0xFF DUP2 DUP5 ADD MLOAD AND SWAP1 DUP5 ADD MSTORE PUSH2 0x120 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x140 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP5 ADD MSTORE PUSH2 0x160 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD MSTORE PUSH2 0x180 SWAP1 DUP2 DUP4 ADD MLOAD AND SWAP1 DUP4 ADD MSTORE PUSH2 0x1A0 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x1C0 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x14BF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH2 0x1E0 DUP3 PUSH2 0x14D5 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x13DD JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x14FD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x14FD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14FD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x1585 JUMPI PUSH1 0xA SWAP1 DUP4 DUP1 MSTORE MUL PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x15C0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13C2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1600 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0x1656 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x18 DUP3 PUSH1 0x2 SHR PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP3 PUSH1 0x3 SHL AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x14FD JUMPI DUP1 PUSH1 0x1 PUSH2 0x168B SWAP3 ADD PUSH1 0x1 SSTORE PUSH2 0x1616 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP2 SHL SWAP4 DUP5 SWAP3 AND SWAP1 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x13C2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x13C2 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1600 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1600 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x16F1 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x170E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F776572207472616E73616374696F6E2076616C7565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP3 PUSH1 0x0 SWAP1 DUP2 SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND LT ISZERO PUSH2 0x2159 JUMPI DUP6 LT ISZERO PUSH2 0x2145 JUMPI DUP2 DUP1 MSTORE PUSH1 0xA DUP6 MUL SWAP5 DUP6 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56C DUP8 ADD SWAP6 PUSH1 0xFF SWAP3 DUP4 DUP9 SLOAD PUSH1 0xA8 SHR AND PUSH2 0x2110 JUMPI PUSH2 0x17D9 SWAP1 PUSH2 0x166C JUMP JUMPDEST ISZERO PUSH2 0x1C8C JUMPI PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A DUP8 ADD SLOAD DUP3 AND ISZERO PUSH2 0x1C07 JUMPI PUSH2 0x1849 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56B DUP9 ADD SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 ADD SLOAD SWAP1 DUP8 PUSH2 0x2570 JUMP JUMPDEST SWAP6 JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 ADD SWAP7 PUSH2 0x188E DUP9 SLOAD DUP6 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568 DUP13 ADD SLOAD AND SWAP1 PUSH2 0x250A JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1BFE JUMPI POP DUP1 SWAP10 JUMPDEST GT PUSH2 0x1BA7 JUMPI PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 DUP5 DUP5 SLOAD PUSH1 0xE8 SHR AND PUSH1 0x0 EQ PUSH2 0x1AAC JUMPI POP PUSH2 0x18CE PUSH2 0x18C6 PUSH1 0x3 SLOAD DUP10 PUSH2 0x15F3 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1707 JUMP JUMPDEST DUP6 DUP1 DUP9 DUP1 ISZERO PUSH2 0x1AA2 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 ADDRESS SWAP1 CALL ISZERO PUSH2 0x1A8E JUMPI DUP6 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1A99 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A8E JUMPI DUP6 DUP1 DUP1 SWAP4 PUSH2 0x1921 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 PUSH2 0x191C DUP13 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1A85 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A7A JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH2 0x1964 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP10 ADD SWAP7 DUP8 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP7 SSTORE SLOAD SWAP1 DUP2 PUSH1 0x40 SHR AND PUSH1 0x0 EQ PUSH2 0x19F6 JUMPI POP DUP2 DUP1 DUP1 SWAP5 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0x19EC JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0x19E0 JUMPI POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x19D4 PUSH2 0x19DA SWAP3 JUMPDEST PUSH2 0x19B8 DUP8 DUP5 SLOAD PUSH2 0x16C7 JUMP JUMPDEST DUP1 SWAP4 SSTORE SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 ADD SLOAD SWAP1 PUSH2 0x15F3 JUMP JUMPDEST SWAP1 PUSH2 0x16D4 JUMP JUMPDEST SWAP2 ADD SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x20 SWAP2 DUP5 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH1 0x48 SWAP2 SWAP1 SWAP2 SHR AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x19E0 JUMPI POP PUSH2 0x19DA SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 SWAP3 PUSH2 0x19D4 SWAP3 PUSH2 0x1A5C JUMPI JUMPDEST POP PUSH2 0x19AD JUMP JUMPDEST PUSH2 0x1A73 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x192A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x18FE JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x18D8 JUMP JUMPDEST SWAP1 PUSH2 0x1ADA PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 SWAP3 CALLVALUE LT ISZERO PUSH2 0x1707 JUMP JUMPDEST SWAP1 DUP10 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP11 SWAP1 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1B9C JUMPI DUP9 DUP6 DUP6 DUP3 SWAP6 DUP4 SWAP6 DUP5 SWAP6 PUSH2 0x1B7E JUMPI JUMPDEST POP SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1B75 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A8E JUMPI DUP6 DUP1 DUP1 SWAP4 PUSH2 0x1B53 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1B6C JUMPI JUMPDEST CALL ISZERO PUSH2 0x1A7A JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 PUSH2 0x1936 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1B5C JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x1B95 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E52656365697665206973206C657373207468616E2063616C6375616C74 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195908185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP1 SWAP10 PUSH2 0x189A JUMP JUMPDEST PUSH2 0x1C86 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 ADD SLOAD PUSH2 0x1C80 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 ADD SLOAD PUSH2 0x1C7A DUP10 PUSH2 0x1C75 DUP14 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x15F3 JUMP JUMPDEST SWAP1 PUSH2 0x16E7 JUMP JUMPDEST SWAP1 PUSH2 0x16C7 JUMP JUMPDEST SWAP6 PUSH2 0x184B JUMP JUMPDEST SWAP5 SWAP2 SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 DUP8 ADD SWAP6 DUP7 SLOAD DUP1 ISZERO PUSH2 0x20B9 JUMPI PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A DUP10 ADD SLOAD DUP4 AND ISZERO PUSH2 0x2064 JUMPI PUSH2 0x1D26 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 ADD SLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56B DUP12 ADD SLOAD SWAP1 DUP10 PUSH2 0x2570 JUMP JUMPDEST SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x205B JUMPI POP DUP1 SWAP10 JUMPDEST GT PUSH2 0x2004 JUMPI PUSH1 0x3 SLOAD DUP2 SLOAD PUSH1 0x40 SWAP6 PUSH1 0x1 DUP4 SWAP1 SHR SWAP3 DUP3 DUP9 SHR DUP7 AND ISZERO PUSH2 0x1F30 JUMPI POP SWAP1 POP PUSH2 0x1D63 PUSH2 0x18C6 PUSH1 0x3 SLOAD DUP11 PUSH2 0x15F3 JUMP JUMPDEST DUP7 DUP1 DUP10 DUP1 ISZERO PUSH2 0x1F26 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 ADDRESS SWAP1 CALL ISZERO PUSH2 0x1F13 JUMPI DUP7 DUP1 DUP1 DUP1 DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1F1D JUMPI JUMPDEST CALL ISZERO PUSH2 0x1F13 JUMPI DUP7 DUP1 DUP1 SWAP4 PUSH2 0x1DB1 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 PUSH2 0x191C DUP14 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1F0A JUMPI JUMPDEST CALL ISZERO PUSH2 0x1EFD JUMPI SWAP1 DUP9 SWAP3 SWAP2 JUMPDEST PUSH2 0x1DE1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP11 ADD SWAP8 DUP9 SLOAD PUSH2 0x15F3 JUMP JUMPDEST DUP8 SSTORE SLOAD PUSH1 0xE8 SHR AND ISZERO PUSH2 0x1E58 JUMPI DUP4 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0x1E4E JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0x1B0 JUMPI POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x19D4 PUSH2 0x19DA SWAP3 JUMPDEST PUSH2 0x1E31 DUP8 DUP5 SLOAD PUSH2 0x16C7 JUMP JUMPDEST DUP1 SWAP4 SSTORE SLOAD SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 ADD SLOAD SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1DFC JUMP JUMPDEST PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP8 ADD SLOAD DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP4 SWAP2 PUSH1 0x20 SWAP2 DUP6 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 DUP7 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1B0 JUMPI POP POP PUSH2 0x19DA SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 SWAP3 PUSH2 0x19D4 SWAP3 PUSH2 0x1EDF JUMPI JUMPDEST POP PUSH2 0x1E26 JUMP JUMPDEST PUSH2 0x1EF6 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1ED9 JUMP JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1DBA JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x1D6D JUMP JUMPDEST PUSH2 0x1F3C SWAP1 CALLVALUE LT ISZERO PUSH2 0x1707 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP14 SWAP1 PUSH1 0x48 SHR DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1FFA JUMPI DUP10 DUP6 DUP6 DUP3 SWAP6 DUP4 SWAP6 DUP5 SWAP6 PUSH2 0x1FDC JUMPI JUMPDEST POP SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x1FD3 JUMPI JUMPDEST CALL ISZERO PUSH2 0x1F13 JUMPI DUP7 DUP1 DUP1 SWAP4 PUSH2 0x1FB2 DUP3 SWAP5 PUSH1 0x2 SLOAD AND SWAP2 CALLVALUE PUSH2 0x16C7 JUMP JUMPDEST SWAP1 DUP3 DUP3 ISZERO PUSH2 0x1FCA JUMPI JUMPDEST CALL ISZERO PUSH2 0x1EFD JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH2 0x1DC5 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1FBB JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x1F98 JUMP JUMPDEST PUSH2 0x1FF3 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xD37 JUMPI PUSH2 0xD28 DUP2 DUP4 PUSH2 0x1513 JUMP JUMPDEST POP CODESIZE PUSH2 0x1F8D JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E52656365697665206973206D6F7265207468616E2063616C6375616C74 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x195908185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP1 SWAP10 PUSH2 0x1D34 JUMP JUMPDEST PUSH2 0x20B3 PUSH2 0x2082 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2617 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 ADD SLOAD PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x1C80 DUP12 PUSH2 0x1C7A DUP12 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25F7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2637 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH2 0x15F3 JUMP JUMPDEST SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7A65726F20616D6F756E74206F662061737365743220666F722062757920696E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x81D1A19481C1BDBDB PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x506F6F6C20697320656D707479 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081C1BDBDB1259 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2196 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081C1BDBDB081A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21D4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1C1BDBDB081A5CC81B1BD8DAD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2211 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B1BDDD95C881D185E081CDC1958DA599A5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2253 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A59081C1BDBDB1259 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2290 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x696E76616C696420696E6465786573 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP1 DUP3 AND SUB SWAP2 SWAP1 DUP3 GT PUSH2 0x1600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x22ED DUP3 PUSH2 0x14E1 JUMP JUMPDEST DUP2 PUSH2 0x1C0 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x2359 DUP3 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x2366 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1513 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2377 PUSH1 0x1F NOT SWAP2 PUSH2 0x1534 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2388 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x2393 PUSH2 0x22E0 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x237C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP2 AND SWAP1 DUP2 EQ PUSH2 0x1600 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1656 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x23D8 DUP2 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1C0 DUP2 SWAP4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x9 PUSH1 0xFF SWAP3 DUP4 DUP4 PUSH1 0x40 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE DUP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP2 PUSH1 0x48 SHR AND PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE DUP3 PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xE0 DUP8 ADD MSTORE DUP4 PUSH1 0x5 DUP3 ADD SLOAD AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH2 0x120 DUP8 ADD MSTORE DUP4 PUSH1 0x7 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x160 DUP8 ADD MSTORE ADD SLOAD SWAP1 DUP2 AND PUSH2 0x180 DUP6 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP6 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x24A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xD2DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x24E2 DUP3 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x24EF PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1513 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x2500 PUSH1 0x1F NOT SWAP2 PUSH2 0x1534 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP3 DUP3 MULMOD DUP3 DUP3 MUL SWAP2 DUP3 DUP1 DUP4 LT SWAP3 SUB SWAP2 DUP1 DUP4 SUB SWAP3 EQ PUSH2 0x2566 JUMPI DUP2 PUSH1 0x64 GT ISZERO PUSH2 0x13C2 JUMPI PUSH32 0x5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C29 SWAP4 PUSH1 0x64 SWAP2 MULMOD SWAP1 DUP3 DUP3 GT SWAP1 SUB PUSH1 0xFE SHL SWAP2 SUB PUSH1 0x2 SHR OR MUL SWAP1 JUMP JUMPDEST POP POP PUSH1 0x64 SWAP2 POP DIV SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT DUP3 DUP5 MULMOD SWAP3 DUP3 DUP2 MUL SWAP3 DUP4 DUP1 DUP7 LT SWAP6 SUB SWAP5 DUP1 DUP7 SUB SWAP6 EQ PUSH2 0x25E6 JUMPI DUP5 DUP4 GT ISZERO PUSH2 0x13C2 JUMPI DUP3 SWAP2 MULMOD PUSH1 0x1 DUP3 NOT ADD DUP3 AND DUP1 SWAP3 DIV PUSH1 0x2 DUP1 DUP3 PUSH1 0x3 MUL XOR DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 DUP4 MUL DUP3 SUB MUL DUP1 SWAP3 MUL SWAP1 SUB MUL SWAP4 PUSH1 0x1 DUP4 DUP1 PUSH1 0x0 SUB DIV ADD SWAP1 DUP5 DUP4 GT SWAP1 SUB MUL SWAP3 SUB DIV OR MUL SWAP1 JUMP JUMPDEST POP POP SWAP1 PUSH2 0x25F3 SWAP3 POP PUSH2 0x16E7 JUMP JUMPDEST SWAP1 JUMP INVALID 0x29 0xD 0xEC 0xD9 SLOAD DUP12 PUSH3 0xA8D603 GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH6 0x290DECD9548B PUSH3 0xA8D603 GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH8 0x290DECD9548B62A8 0xD6 SUB GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH10 0xA2646970667358221220 EXTCODECOPY DIFFICULTY 0x2A SLOAD BALANCE NOT 0xD2 DUP3 CALLDATASIZE DUP8 0x28 TIMESTAMP SWAP1 JUMPI PUSH28 0xBE6779062D85A3D7810693E4883C9A0F4664736F6C63430008110033 ",
							"sourceMap": "886:25765:0:-:0;;;;;;;;;;;;-1:-1:-1;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;19056:49;886:25765;;-1:-1:-1;;;;;886:25765:0;;19064:22;19056:49;:::i;:::-;19136:14;;;:::i;:::-;19170:13;;;;886:25765;;19161:41;886:25765;;;;;19169:14;19161:41;:::i;:::-;-1:-1:-1;;;;;886:25765:0;19239:10;886:25765;;;19221:28;886:25765;;19324:22;;886:25765;;19410:20;;;19462:36;19410:20;;;;;;;;886:25765;19462:36;:::i;:::-;19509:67;886:25765;;19517:9;:35;;19509:67;:::i;:::-;19587:13;886:25765;;19587:33;19517:9;;19587:33;;;886:25765;19517:9;19587:33;;;;;886:25765;;;19587:33;886:25765;;;;;;;;;19587:33;;;-1:-1:-1;19587:33:0;;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;20710:41;886:25765;;:::i;:::-;20721:29;-1:-1:-1;;;;;886:25765:0;;20588:90;886:25765;;;;;;;;20596:29;;:62;;;;886:25765;20588:90;;:::i;:::-;20721:29;:::i;:::-;886:25765;20710:41;:::i;:::-;20766:25;;20793:16;886:25765;;;;20793:16;;;886:25765;;;;;;;:::i;:::-;;;;20811:3;20859:9;20831:37;20859:9;20811:3;20859:9;;:::i;:::-;20837:18;;886:25765;20837:18;;;;:::i;:::-;886:25765;;:::i;:::-;;;20831:37;;;;;:::i;:::-;;;;:::i;:::-;;20811:3;:::i;:::-;20766:25;;20596:62;886:25765;;;20629:29;;;20596:62;;;886:25765;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;17946:49;886:25765;;-1:-1:-1;;;;;886:25765:0;;17954:22;17946:49;:::i;:::-;18060:13;18026:14;;;:::i;:::-;18060:13;;886:25765;;18051:41;886:25765;;;;;18059:14;18051:41;:::i;:::-;-1:-1:-1;;;;;886:25765:0;18129:10;886:25765;;;18111:28;886:25765;;18288:3;18248:43;;;:108;;;886:25765;;;;18429:14;;;;18527:36;18429:14;;;;:48;:14;;;;:::i;:::-;:48;;886:25765;;;;;;;;;18527:36;:::i;886:25765::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18288:3:0;886:25765;;;;18248:108;18316:40;;;;18248:108;;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;-1:-1:-1;;886:25765:0;;;;;;:::i;:::-;25423:13;886:25765;;-1:-1:-1;;;;;886:25765:0;;;;25409:10;:27;886:25765;;;;;;;;;;;25423:13;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;-1:-1:-1;;886:25765:0;;-1:-1:-1;;886:25765:0;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;24625:36;886:25765;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:25765:0;;;-1:-1:-1;;886:25765:0;;;;;;:::i;:::-;;16115:50;886:25765;;-1:-1:-1;;;;;886:25765:0;;-1:-1:-1;16115:50:0;:::i;:::-;16230:13;16196:14;;;:::i;:::-;16230:13;;886:25765;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;16307:10;886:25765;;;16289:28;886:25765;;16368:36;;;;;;;;;:::i;:::-;16415:67;886:25765;;16423:9;:35;;16415:67;:::i;:::-;16493:13;886:25765;;16493:33;16423:9;;16493:33;;;886:25765;16423:9;16493:33;;;;;-1:-1:-1;886:25765:0;;-1:-1:-1;;;;886:25765:0;-1:-1:-1;;;886:25765:0;;;;;16493:33;886:25765;;;;-1:-1:-1;886:25765:0;;;;;16493:33;;;-1:-1:-1;16493:33:0;;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;886:25765:0;23362:57;886:25765;23375:43;886:25765;;;;;;;;23183:43;;:118;;;886:25765;23175:146;;;:::i;23375:43::-;886:25765;23362:57;:::i;:::-;23435:32;;23469:23;886:25765;;;;23469:23;;;886:25765;;;;;;;:::i;23494:3::-;23555:26;;;23494:3;23555:26;;:::i;:::-;886:25765;;;;;;;23514:67;23526:25;;;;;:::i;:::-;886:25765;23514:67;;:::i;:::-;886:25765;23494:3;:::i;:::-;23435:32;;23183:118;-1:-1:-1;23271:23:0;886:25765;23248:53;;;23183:118;;886:25765;;;;;;;;-1:-1:-1;;886:25765:0;;;;;;;;22322:14;886:25765;;:::i;:::-;;;:::i;:::-;;22322:14;:::i;:::-;886:25765;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;17027:49;886:25765;;-1:-1:-1;;;;;886:25765:0;;17035:22;17027:49;:::i;:::-;17141:13;17107:14;;;:::i;:::-;17141:13;;886:25765;;;;17132:41;886:25765;;;;;17140:14;17132:41;:::i;:::-;17210:10;886:25765;;;17192:28;886:25765;;-1:-1:-1;;;;;;886:25765:0;;;;;;;;;;;;;17325:36;886:25765;17325:36;:::i;886:25765::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;-1:-1:-1;;886:25765:0;;;;;;;;;;;;;;;;26223:13;886:25765;-1:-1:-1;;;;;886:25765:0;26209:10;:27;886:25765;;;;26301:83;;;:153;;;886:25765;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;26301:153;;886:25765;26301:153;;886:25765;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;-1:-1:-1;886:25765:0;;;;-1:-1:-1;;886:25765:0;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6989:60;;886:25765;7015:33;;;;;;;6989:60;:::i;:::-;7068:9;:33;886:25765;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;7208:36;;;;:::i;:::-;7255:295;;;7290:36;;;;;;;;;;7255:295;7298:4;;;;;;;7290:36;;;;;886:25765;;;;;;7364:24;886:25765;7341:13;886:25765;;7068:9;;7364:24;:::i;:::-;7341:48;;;;;;7255:295;7341:48;;;;7255:295;886:25765;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;886:25765:0;;-1:-1:-1;;886:25765:0;;;;;7620:14;;;:::i;:::-;-1:-1:-1;886:25765:0;;7685:17;;;886:25765;;;;7728:11;;886:25765;;-1:-1:-1;;;;;;886:25765:0;;;;;;;;;7768:17;;886:25765;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;-1:-1:-1;;;;;;886:25765:0;;;;;;;;;;;7930:31;;886:25765;8001:38;;;886:25765;;-1:-1:-1;;886:25765:0;;;;;;;;;8086:20;;;886:25765;;;;;;;;;;;;;8158:41;;886:25765;8158:41;:::i;:::-;8135:20;;;886:25765;8210:24;;;886:25765;8260:14;;886:25765;;;;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;7341:48;886:25765;;;;;;;;;7341:48;;;;;7290:36;;;-1:-1:-1;7290:36:0;;7255:295;886:25765;;-1:-1:-1;;;7422:68:0;;-1:-1:-1;;;;;886:25765:0;;;7422:68;;;886:25765;;;7470:4;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;7422:68;;;;;;;;;;;;;;;;;7255:295;886:25765;7505:13;886:25765;;7505:33;7068:9;;7505:33;;;7255:295;7068:9;7505:33;;7255:295;7505:33;886:25765;;;;;;;;;7505:33;;;-1:-1:-1;7505:33:0;;7422:68;;;886:25765;7422:68;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;7015:33;;6989:60;:::i;886:25765::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22532:23;886:25765;;;;;;;;;;;;;;;-1:-1:-1;;886:25765:0;;;;;;;:::i;:::-;24158:23;886:25765;;-1:-1:-1;;;;;886:25765:0;24247:68;24260:54;886:25765;;;24126:80;24134:54;;;24126:80;:::i;:::-;24260:54;;:::i;:::-;24247:68;:::i;:::-;24331:32;;24365:34;886:25765;;;;24365:34;;;886:25765;;;;;;;:::i;24401:3::-;24462:26;;;24401:3;24462:26;;:::i;24401:3::-;24331:32;;886:25765;;;;;;;-1:-1:-1;;886:25765:0;;;;;;;;;4948:20;;;;;;;886:25765;4948:20;;:::i;:::-;886:25765;;;;;;;;;4948:20;;886:25765;4948:20;;886:25765;;4948:20;;;886:25765;;4948:20;;886:25765;4948:20;;;886:25765;;;4948:20;;;;;886:25765;;4948:20;;;;886:25765;4948:20;;;;;886:25765;;4948:20;;;;;;886:25765;4948:20;;886:25765;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21855:26;886:25765;;21855:26;:::i;:::-;21897:12;21931:3;886:25765;;;;;21911:18;;;;;;21978:10;22004:15;21978:10;886:25765;21971:18;21978:10;;21931:3;21978:10;;;:::i;:::-;886:25765;;21971:18;:::i;886:25765::-;22004:15;;;;:::i;:::-;;;;:::i;21931:3::-;21897:12;;21911:18;886:25765;;;;21911:18;886:25765;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;886:25765:0;;;;;;;19914:23;:14;886:25765;;:::i;:::-;19914:14;:::i;:::-;:23;;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;25207:21;886:25765;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14745:50;886:25765;;-1:-1:-1;;;;;886:25765:0;;-1:-1:-1;14745:50:0;:::i;:::-;14826:14;;;:::i;:::-;14860:13;;;;;886:25765;;;14851:41;886:25765;;;;;14859:14;14851:41;:::i;:::-;886:25765;;;;;;;-1:-1:-1;;;;;886:25765:0;14979:10;886:25765;;;14961:28;886:25765;;15039:36;;;;;;;:::i;:::-;15086:67;886:25765;;15094:9;:35;;15086:67;:::i;:::-;886:25765;;;;;15164:13;886:25765;;15164:33;15094:9;;15164:33;;;886:25765;15094:9;15164:33;;;;;886:25765;;;;;;;;;;;15328:17;;;;;;15164:13;15328:17;;886:25765;15299:47;;;;;15241:209;14979:10;15299:47;;;;;15241:209;;;15460:17;15164:13;15460:17;;886:25765;;;;;;;15494:209;886:25765;;;15581:17;;;;;;886:25765;15581:17;;886:25765;15552:47;;;;;15494:209;14979:10;15552:47;;;;;15494:209;;886:25765;15713:17;;886:25765;;;15745:31;886:25765;;;-1:-1:-1;;;;886:25765:0;-1:-1:-1;;;886:25765:0;;;;;15552:47;886:25765;;;;;;;;15552:47;;;;;15494:209;886:25765;15639:11;;886:25765;;15673:17;;886:25765;;;-1:-1:-1;;;15632:59:0;;14979:10;15632:59;;;886:25765;;;;;;;;;;15639:11;;;;;886:25765;;;;;;15639:11;886:25765;;;;15632:59;;;;;;;;;;;;15494:209;;;;;15632:59;;;;;;-1:-1:-1;15632:59:0;;;;;;:::i;:::-;;;;;;;886:25765;;;;;;;;15299:47;886:25765;;;;;;;;;15299:47;;;;;15241:209;15164:13;15420:17;;886:25765;;;-1:-1:-1;;;15379:59:0;;14979:10;15379:59;;;886:25765;;;;;;;;;;;;;15379:59;;;886:25765;15379:59;;886:25765;;;;;;;;15379:59;;;;;;;;;;;;15241:209;;;;15379:59;;;;;;;;;;;;;:::i;:::-;;;;;;886:25765;;;;;;;;;15164:33;;;-1:-1:-1;15164:33:0;;886:25765;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;-1:-1:-1;;886:25765:0;;;;;;:::i;:::-;;;-1:-1:-1;;;;;886:25765:0;21315:42;21326:30;886:25765;;;21227:56;21235:30;;;21227:56;:::i;:::-;21326:30;;:::i;:::-;21315:42;:::i;:::-;21372:25;;21399:17;886:25765;;;;21399:17;;;886:25765;;;;;;;:::i;21418:3::-;21466:9;21438:37;21466:9;21418:3;21466:9;;:::i;21418:3::-;21372:25;;886:25765;;;;-1:-1:-1;;;;;886:25765:0;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;:::o;:::-;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;:::o;:::-;-1:-1:-1;;;;;886:25765:0;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;24158:23;886:25765;;;;;;24158:23;-1:-1:-1;886:25765:0;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;15039:23;886:25765;-1:-1:-1;;;886:25765:0;;;;;;15039:23;886:25765;;;15039:23;886:25765;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;;;;9387:5071;;;;9654:6;886:25765;;;;-1:-1:-1;;;;;886:25765:0;;9645:22;886:25765;;;;;;;;;;;;;;;;;;9751:12;;;886:25765;;;;;;;;;;;9792:36;;;:::i;:::-;9841:4610;;;9912:20;;;886:25765;;;;;;10057:82;10081:24;;;886:25765;-1:-1:-1;;;;;;;;;;;10107:31:0;;886:25765;10057:82;;;:::i;:::-;9908:540;;-1:-1:-1;;;;;;;;;;;10602:17:0;;886:25765;10590:75;886:25765;;10621:38;;;;886:25765;;10590:75;;:::i;:::-;27039:5;;;;;;:13;;;;10689:39;886:25765;;10900:22;886:25765;;;9792:23;886:25765;;;;;;;;10941:710;886:25765;;;;11003:84;11024:35;10900:22;886:25765;11024:35;;:::i;:::-;11011:9;:48;;11003:84;:::i;:::-;11106:34;;;;;;;10941:710;11114:4;;;;;;;11106:34;;;;;886:25765;;;;;;;;;;;;;;11185:35;;;;;10941:710;11185:35;;;;886:25765;;;;11262:35;886:25765;;10602:17;886:25765;;11011:9;11262:22;11011:9;;11262:22;:::i;:::-;:35;:::i;:::-;11239:59;;;;;;10941:710;11239:59;;;;10941:710;;;;;;11665:31;:17;;;886:25765;;;11665:31;:::i;:::-;886:25765;;;;;;;;11757:241;886:25765;;;11819:55;;;;;;;;;;;;;11757:241;-1:-1:-1;;;;;886:25765:0;;11819:55;;;;11757:241;-1:-1:-1;;;;;;;;;;;11757:241:0;12105:51;12082:75;11757:241;;12012:30;886:25765;;;12012:30;:::i;:::-;886:25765;;;;-1:-1:-1;;;;;;;;;;;12125:31:0;;886:25765;12105:51;;:::i;:::-;12082:75;;:::i;:::-;12059:20;;886:25765;12172:16;:::o;11819:55::-;886:25765;;;;;;;;;;11819:55;;;-1:-1:-1;11819:55:0;;11757:241;886:25765;;-1:-1:-1;;;11915:67:0;;-1:-1:-1;;;;;886:25765:0;;;11915:67;;;886:25765;;;;;;;;11915:67;;886:25765;;;;;;;;;;;;;;11915:67;;;;;;;;12082:75;11915:67;-1:-1:-1;;;;;;;;;;;11915:67:0;;12105:51;11915:67;;;11757:241;;;;11915:67;;;;;;;;;;;;;:::i;:::-;;;;;11239:59;886:25765;;;;;;;;;11239:59;;;;;11185:35;886:25765;;;;;;;;;11185:35;;;;;11106:34;;;-1:-1:-1;11106:34:0;;10941:710;11347:9;11339:71;11436:11;11347:9;;:35;;11339:71;:::i;:::-;11436:11;;;886:25765;;;-1:-1:-1;;;11429:87:0;;-1:-1:-1;;;;;886:25765:0;;;11429:87;;;886:25765;11498:4;886:25765;;;;;;;;;;;11436:11;11429:87;;886:25765;;;;;;;;;;11429:87;;;;;;;;;;;;;;;;;10941:710;886:25765;;;11535:35;;;;;10941:710;11535:35;;;;886:25765;;;;11612:22;886:25765;;10602:17;886:25765;;11347:9;;11612:22;:::i;:::-;11589:46;;;;;;10941:710;11589:46;;;;10941:710;;;;;;;11589:46;;;;;11535:35;;;;;11429:87;;;;;;;;;;;;;:::i;:::-;;;;;;886:25765;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;10661:3:0;886:25765;;;;;;27039:13;;;;;;;9908:540;10302:130;-1:-1:-1;;;;;;;;;;;10302:17:0;;886:25765;10343:89;-1:-1:-1;;;;;;;;;;;10343:20:0;;886:25765;10367:64;:31;:51;:31;10401:17;-1:-1:-1;;;;;;;;;;;10367:31:0;;886:25765;10401:17;;886:25765;10367:51;;:::i;:::-;:64;:::i;:::-;10343:89;;:::i;:::-;10302:130;;:::i;:::-;9908:540;;;9841:4610;12267:17;;;;;;886:25765;;;12267:21;;886:25765;;12385:20;;;886:25765;;;;;;12534:82;-1:-1:-1;;;;;;;;;;;12558:31:0;;886:25765;12591:24;;;886:25765;12534:82;;;:::i;:::-;12381:438;;27039:5;;;;;;:13;;;;12970:39;886:25765;;12267:17;886:25765;;;;;9792:23;886:25765;;;;;;;;;;;;;;;13282:84;13303:35;12267:17;886:25765;13303:35;;:::i;13282:84::-;13385:34;;;;;;;13220:684;13393:4;;;;;;;13385:34;;;;;886:25765;;;;;;;;;;;;;;13438:35;;;;;13220:684;13438:35;;;;886:25765;;;;13515:35;886:25765;;13160:1;886:25765;;13290:9;13515:22;13290:9;;13515:22;:::i;:35::-;13492:59;;;;;;13220:684;13492:59;;;;13220:684;;;;;13918:31;-1:-1:-1;;;;;;;;;;;13918:17:0;;886:25765;;;13918:31;:::i;:::-;886:25765;;;;;;;;;14072:55;;;;;;;;;;;;14010:241;-1:-1:-1;;;;;886:25765:0;;14072:55;;;;14010:241;;-1:-1:-1;;;;;;;;;;;14010:241:0;14356:51;14333:75;14010:241;;14265:30;886:25765;;;14265:30;:::i;:::-;886:25765;;;;14376:31;-1:-1:-1;;;;;;;;;;;14376:31:0;;886:25765;14356:51;;:::i;14072:55::-;;;-1:-1:-1;14072:55:0;;14010:241;14175:11;;;886:25765;;;-1:-1:-1;;;14168:67:0;;-1:-1:-1;;;;;886:25765:0;;;14168:67;;;886:25765;;;;;;;;;;;14168:67;;886:25765;;;;;;;;;14168:67;;;;;;;;;14333:75;14168:67;-1:-1:-1;;;;;;;;;;;14168:67:0;;14356:51;14168:67;;;14010:241;;;;14168:67;;;;;;;;;;;;;:::i;:::-;;;;;13492:59;886:25765;;;;;;;;;;;;13492:59;;;;;13438:35;886:25765;;;;;;;;;13438:35;;;;;13385:34;;;-1:-1:-1;13385:34:0;;13220:684;13592:71;13600:9;;:35;;13592:71;:::i;:::-;886:25765;;-1:-1:-1;;;13682:87:0;;-1:-1:-1;;;;;886:25765:0;;;13682:87;;;886:25765;13751:4;886:25765;;;;;;;;;;;13682:87;;886:25765;;;;;;;;;;;;13682:87;;;;;;;;;;;;;;;;;13220:684;886:25765;;;13788:35;;;;;13220:684;13788:35;;;;886:25765;;;;13865:22;886:25765;;13160:1;886:25765;;13600:9;;13865:22;:::i;:::-;13842:46;;;;;;13220:684;13842:46;;;;13220:684;;;;;;13842:46;;;;;13788:35;;;;;13682:87;;;;;;;;;;;;;:::i;:::-;;;;;;886:25765;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;27039:13;;;;;;;12381:438;12669:134;:51;:31;-1:-1:-1;;;;;;;;;;;12669:31:0;;886:25765;12669:51;:::i;:::-;12748:55;:20;12772:30;12748:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;12748:20:0;;886:25765;12772:17;;886:25765;12772:30;:::i;12669:134::-;12381:438;;;886:25765;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;886:25765:0;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;886:25765:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;-1:-1:-1;;;886:25765:0;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;27383:4005::-;-1:-1:-1;;27996:170:0;;;;;;;;;;;;;;;;;28250:10;;28246:77;;28436:19;10661:3;28436:19;886:25765;;;;28751:307;10661:3;28751:307;;;;;;;;886:25765;;28751:307;;29433:380;;29882:21;886:25765;27383:4005;:::o;28246:77::-;886:25765;;10661:3;886:25765;;;28281:26;:::o;27383:4005::-;;-1:-1:-1;;27996:170:0;27383:4005;27996:170;;;;;;;;;;;;;;;;28250:10;;28246:77;;28436:19;;;886:25765;;;28751:307;;;29416:1;29401:12;;886:25765;29386:32;;29433:380;;;30264:1;886:25765;;30245:1;886:25765;30244:21;886:25765;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29433:380;29416:1;29433:380;;27996:170;29433:380;;;28751:307;;;;;;886:25765;28751:307;;29433:380;29882:21;886:25765;27383:4005;:::o;28246:77::-;28288:19;;;;;;;:::i;:::-;28281:26;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1973600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "566",
								"_pools(uint256)": "26082",
								"changeContantProduct(uint64,uint256)": "infinite",
								"changeOwner(uint64,address)": "infinite",
								"changePoolMaxBuyAsset1PercentPerTransaction(uint64,uint8)": "infinite",
								"contractOwner()": "2623",
								"createPool(address,bool,address,bool,address,uint256,uint256,uint8,bool)": "infinite",
								"exchangeAsset(address,uint64,bool,uint256,uint256)": "infinite",
								"getAllAssetsFromPool(uint64)": "infinite",
								"getBalance()": "212",
								"getPool(uint64)": "infinite",
								"getPools(uint64,uint64)": "infinite",
								"getPools(uint64[])": "infinite",
								"getPoolsCount()": "2577",
								"getPoolsForTransactionsWithIndexesBetween(uint64,uint64)": "infinite",
								"getPoolsForTransactionsWithIndexesFrom(uint64)": "infinite",
								"getPoolsFrom(uint64)": "infinite",
								"getTransactionsCount()": "2426",
								"isPoolLocked(uint64)": "4624",
								"lockPool(uint64)": "infinite",
								"setNewGlobalTax(uint8)": "28920",
								"setNewOwner(address)": "24872"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25686,
									"end": 25694,
									"name": "PUSH",
									"source": 0,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 25686,
									"end": 25694,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25686,
									"end": 25694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25855,
									"end": 25861,
									"name": "PUSH",
									"source": 0,
									"value": "9184E72A000"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 25863,
									"end": 25869,
									"name": "PUSH",
									"source": 0,
									"value": "5AF3107A4000"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25879,
									"end": 25885,
									"name": "PUSH",
									"source": 0,
									"value": "2386F26FC10000"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25887,
									"end": 25893,
									"name": "PUSH",
									"source": 0,
									"value": "16345785D8A0000"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24771,
									"end": 24806,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24795,
									"end": 24805,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "RETURN",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 25854,
									"end": 25894,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B71"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 886,
									"end": 26651,
									"name": "REVERT",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c442a543119d2823687284290577bbe6779062d85a3d7810693e4883c9a0f4664736f6c63430008110033",
									".code": [
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "376E49C"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "C95BE25"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1E67D542"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "22668DE1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3997663C"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "455B5ADC"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "578CB8F9"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "57B0B64D"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "74D13A23"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "81D802BA"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "919ADAB8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "ACB8001F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "B0B15560"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "B4AC6860"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "CE606EE0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "D5700CBB"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "F5A1F5B4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "F6FCE7A9"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "F8C81B90"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FA5A67ED"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19086,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 19056,
											"end": 19105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19105,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19056,
											"end": 19105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19136,
											"end": 19150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19136,
											"end": 19150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19150,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19136,
											"end": 19150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19170,
											"end": 19183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19170,
											"end": 19183,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19170,
											"end": 19183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19170,
											"end": 19183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 19161,
											"end": 19202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19161,
											"end": 19202,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 19161,
											"end": 19202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19239,
											"end": 19249,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19324,
											"end": 19346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19324,
											"end": 19346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19462,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19410,
											"end": 19430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19462,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19462,
											"end": 19498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19462,
											"end": 19498,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19462,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19509,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19517,
											"end": 19526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19517,
											"end": 19552,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19517,
											"end": 19552,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19509,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19509,
											"end": 19576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19509,
											"end": 19576,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 19509,
											"end": 19576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19600,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19517,
											"end": 19526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19517,
											"end": 19526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19517,
											"end": 19526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19587,
											"end": 19620,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "696E76616C696420636F6E7374616E742070726F6475637420286F6E6C792070"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F736974697665206E756D6265727329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6F6E6C792074686520706F6F6C206F776E65722063616E206368616E67652074"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A194818DBDB9CDD185B9D081C1C9BD91D58DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20625,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20625,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20588,
											"end": 20678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20678,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20588,
											"end": 20678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20721,
											"end": 20750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20721,
											"end": 20750,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 20721,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20710,
											"end": 20751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20751,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20710,
											"end": 20751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20766,
											"end": 20791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20766,
											"end": 20791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20809,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20793,
											"end": 20809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20793,
											"end": 20809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 20793,
											"end": 20809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20814,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 20811,
											"end": 20814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20859,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20811,
											"end": 20814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20859,
											"end": 20868,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20859,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20859,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20837,
											"end": 20855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20837,
											"end": 20855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20831,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20831,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20831,
											"end": 20868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20811,
											"end": 20814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20814,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20811,
											"end": 20814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20766,
											"end": 20791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20766,
											"end": 20791,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20629,
											"end": 20658,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20629,
											"end": 20658,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20629,
											"end": 20658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 20596,
											"end": 20658,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17946,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17954,
											"end": 17976,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17946,
											"end": 17995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17946,
											"end": 17995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17946,
											"end": 17995,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17946,
											"end": 17995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18073,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 18026,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 18026,
											"end": 18040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18026,
											"end": 18040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18040,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 18026,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18051,
											"end": 18092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18059,
											"end": 18073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18051,
											"end": 18092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18051,
											"end": 18092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18051,
											"end": 18092,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 18051,
											"end": 18092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18129,
											"end": 18139,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18288,
											"end": 18291,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18248,
											"end": 18291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18291,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18248,
											"end": 18356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18527,
											"end": 18563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18477,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18429,
											"end": 18443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18429,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18527,
											"end": 18563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18527,
											"end": 18563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "696E76616C6964206D61782070657263656E7420706572207472616E73616374"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18288,
											"end": 18291,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18356,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 18248,
											"end": 18356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18316,
											"end": 18356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18316,
											"end": 18356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18316,
											"end": 18356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18316,
											"end": 18356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18248,
											"end": 18356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18248,
											"end": 18356,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6F6E6C792074686520706F6F6C206F776E65722063616E206368616E6765206E"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "65774D617842757941737365743150657263656E745065725472616E73616374"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25423,
											"end": 25436,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25409,
											"end": 25419,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25409,
											"end": 25436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25423,
											"end": 25436,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6F6E6C79207468652063757272656E74206F776E65722063616E206368616E67"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32903A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24625,
											"end": 24661,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 16115,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16115,
											"end": 16165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16165,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 16115,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16230,
											"end": 16243,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16196,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 16196,
											"end": 16210,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16196,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16196,
											"end": 16210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16196,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 16196,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16230,
											"end": 16243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16230,
											"end": 16243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16307,
											"end": 16317,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16289,
											"end": 16317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16368,
											"end": 16404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16368,
											"end": 16404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16423,
											"end": 16432,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16423,
											"end": 16458,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16423,
											"end": 16458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16415,
											"end": 16482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16415,
											"end": 16482,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16415,
											"end": 16482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16506,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16423,
											"end": 16432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16423,
											"end": 16432,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16423,
											"end": 16432,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16493,
											"end": 16526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6F6E6C792074686520706F6F6C206F776E65722063616E206C6F636B20612070"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C1BDBDB081A5CC8185B1C9958591E481B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23375,
											"end": 23418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23226,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23226,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 23183,
											"end": 23301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23175,
											"end": 23321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 23175,
											"end": 23321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23175,
											"end": 23321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23175,
											"end": 23321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23375,
											"end": 23418,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 23375,
											"end": 23418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23362,
											"end": 23419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23419,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 23362,
											"end": 23419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23492,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 23469,
											"end": 23492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23492,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 23469,
											"end": 23492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23497,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 23494,
											"end": 23497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23581,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 23494,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 23555,
											"end": 23581,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23555,
											"end": 23581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23581,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 23555,
											"end": 23581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23526,
											"end": 23551,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23526,
											"end": 23551,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23526,
											"end": 23551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23551,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23526,
											"end": 23551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23514,
											"end": 23581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23494,
											"end": 23497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23497,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 23494,
											"end": 23497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 23435,
											"end": 23467,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23301,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 23183,
											"end": 23301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23271,
											"end": 23294,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23301,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23301,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23248,
											"end": 23301,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23183,
											"end": 23301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 23183,
											"end": 23301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 22322,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22322,
											"end": 22336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22322,
											"end": 22336,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 22322,
											"end": 22336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17035,
											"end": 17057,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17027,
											"end": 17076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17076,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 17027,
											"end": 17076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17154,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17107,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17107,
											"end": 17121,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17107,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17121,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 17107,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17141,
											"end": 17154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17140,
											"end": 17154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 17132,
											"end": 17173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 17173,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 17132,
											"end": 17173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17210,
											"end": 17220,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17192,
											"end": 17220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 17325,
											"end": 17361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 17325,
											"end": 17361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17325,
											"end": 17361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6F6E6C792074686520706F6F6C206F776E65722063616E206368616E6765206F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26223,
											"end": 26236,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26209,
											"end": 26219,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26209,
											"end": 26236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26384,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "696E76616C6964206E6577546178496E64657846726F6D56616C6964436F6E74"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726163745472616E73616374696F6E5461786573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26301,
											"end": 26454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6F6E6C79207468652063757272656E74206F776E65722063616E206368616E67"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA40E8D0CA40E8C2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6989,
											"end": 7049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7244,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7208,
											"end": 7244,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7208,
											"end": 7244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7208,
											"end": 7244,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7208,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7302,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7364,
											"end": 7388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7364,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7620,
											"end": 7634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7702,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7685,
											"end": 7702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7728,
											"end": 7739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7768,
											"end": 7785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF0000000000000000"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7961,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8001,
											"end": 8039,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8086,
											"end": 8106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 8158,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8158,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8199,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 8158,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8155,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8135,
											"end": 8155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8210,
											"end": 8234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "B0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 7341,
											"end": 7389,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7474,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7518,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 7505,
											"end": 7538,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7422,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7422,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 7422,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "461BCD"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4C6F776572207468616E20746865207265717569726564207472616E73616374"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696F6E2076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7015,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6989,
											"end": 7049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22532,
											"end": 22555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24158,
											"end": 24181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 24260,
											"end": 24314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24126,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 24134,
											"end": 24188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24134,
											"end": 24188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24134,
											"end": 24188,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24126,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24126,
											"end": 24206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24126,
											"end": 24206,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 24126,
											"end": 24206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24260,
											"end": 24314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24260,
											"end": 24314,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 24260,
											"end": 24314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24247,
											"end": 24315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24247,
											"end": 24315,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 24247,
											"end": 24315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24331,
											"end": 24363,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24331,
											"end": 24363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24365,
											"end": 24399,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 24365,
											"end": 24399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24365,
											"end": 24399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24365,
											"end": 24399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 24365,
											"end": 24399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24404,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 24401,
											"end": 24404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24462,
											"end": 24488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24462,
											"end": 24488,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24462,
											"end": 24488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24401,
											"end": 24404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24462,
											"end": 24488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24462,
											"end": 24488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24462,
											"end": 24488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24401,
											"end": 24404,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24401,
											"end": 24404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24331,
											"end": 24363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 24331,
											"end": 24363,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1E0"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4948,
											"end": 4968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21855,
											"end": 21881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21855,
											"end": 21881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 21855,
											"end": 21881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21855,
											"end": 21881,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 21855,
											"end": 21881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21897,
											"end": 21909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21931,
											"end": 21934,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 21931,
											"end": 21934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 21931,
											"end": 21934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 21978,
											"end": 21988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 21978,
											"end": 21988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21971,
											"end": 21989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22004,
											"end": 22019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22004,
											"end": 22019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22004,
											"end": 22019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21931,
											"end": 21934,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 21931,
											"end": 21934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21897,
											"end": 21909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 21897,
											"end": 21909,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19914,
											"end": 19937,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19914,
											"end": 19928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19914,
											"end": 19928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 19914,
											"end": 19928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19914,
											"end": 19928,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 19914,
											"end": 19928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19914,
											"end": 19937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19914,
											"end": 19937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25207,
											"end": 25228,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 14745,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14745,
											"end": 14795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14745,
											"end": 14795,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 14745,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14826,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 14826,
											"end": 14840,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14826,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14826,
											"end": 14840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14826,
											"end": 14840,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 14826,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14860,
											"end": 14873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14860,
											"end": 14873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14860,
											"end": 14873,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14860,
											"end": 14873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14860,
											"end": 14873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14859,
											"end": 14873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14851,
											"end": 14892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14851,
											"end": 14892,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 14851,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14961,
											"end": 14989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15039,
											"end": 15075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 15039,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15103,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15129,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15086,
											"end": 15153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15153,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 15086,
											"end": 15153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15177,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15103,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15094,
											"end": 15103,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15177,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15328,
											"end": 15345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15177,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15460,
											"end": 15477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15581,
											"end": 15598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15713,
											"end": 15730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15713,
											"end": 15730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15745,
											"end": 15776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 15552,
											"end": 15599,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15673,
											"end": 15690,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15673,
											"end": 15690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 15494,
											"end": 15703,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15632,
											"end": 15691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 15632,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 15299,
											"end": 15346,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15177,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15420,
											"end": 15437,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15420,
											"end": 15437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 15241,
											"end": 15450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15379,
											"end": 15438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 15379,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 15164,
											"end": 15197,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6F6E6C792074686520706F6F6C206F776E65722063616E20656D70747920706F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "706F6F6C20697320656D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 21326,
											"end": 21356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21227,
											"end": 21283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 21235,
											"end": 21265,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21235,
											"end": 21265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21235,
											"end": 21265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21227,
											"end": 21283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21227,
											"end": 21283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21227,
											"end": 21283,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 21227,
											"end": 21283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21326,
											"end": 21356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21326,
											"end": 21356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 21326,
											"end": 21356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21326,
											"end": 21356,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 21326,
											"end": 21356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 21315,
											"end": 21357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21357,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 21315,
											"end": 21357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21372,
											"end": 21397,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21372,
											"end": 21397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21399,
											"end": 21416,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 21399,
											"end": 21416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21399,
											"end": 21416,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21399,
											"end": 21416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 21399,
											"end": 21416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21421,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 21418,
											"end": 21421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21466,
											"end": 21475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21466,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 21418,
											"end": 21421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 21466,
											"end": 21475,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21466,
											"end": 21475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21466,
											"end": 21475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21418,
											"end": 21421,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 21418,
											"end": 21421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21372,
											"end": 21397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 21372,
											"end": 21397,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24158,
											"end": 24181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24158,
											"end": 24181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15062,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15062,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15039,
											"end": 15062,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B71"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6C6F776572207472616E73616374696F6E2076616C7565000000000000000000"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9387,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 14458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 14458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 14458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9645,
											"end": 9667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9763,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56C"
										},
										{
											"begin": 9751,
											"end": 9763,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9751,
											"end": 9763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9792,
											"end": 9828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 9792,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9841,
											"end": 14451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9841,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 9841,
											"end": 14451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9932,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 9912,
											"end": 9932,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9912,
											"end": 9932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 10081,
											"end": 10105,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56B"
										},
										{
											"begin": 10081,
											"end": 10105,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10081,
											"end": 10105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9C418048A637D1641C6D732DD38174732BBF7B47A1CF6D5F65895384518B07D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10107,
											"end": 10138,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10139,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 10057,
											"end": 10139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10057,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 10057,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "63D75DB57AE45C3799740C3CD8DCEE96A498324843D79AE390ADC81D74B52F13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10602,
											"end": 10619,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10602,
											"end": 10619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10659,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E568"
										},
										{
											"begin": 10621,
											"end": 10659,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10590,
											"end": 10665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10590,
											"end": 10665,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 10590,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10728,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10922,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9815,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11003,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 11024,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 10900,
											"end": 10922,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11059,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11024,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11024,
											"end": 11059,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 11024,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11011,
											"end": 11020,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11011,
											"end": 11059,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11011,
											"end": 11059,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11003,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11003,
											"end": 11087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11003,
											"end": 11087,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 11003,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11114,
											"end": 11118,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10602,
											"end": 10619,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11011,
											"end": 11020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 11011,
											"end": 11020,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 11011,
											"end": 11020,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11262,
											"end": 11284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11284,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 11262,
											"end": 11284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11262,
											"end": 11297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11262,
											"end": 11297,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 11262,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 11665,
											"end": 11682,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 11665,
											"end": 11682,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11665,
											"end": 11682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11665,
											"end": 11696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "AAAB8540682E3A537D17674663EA013E92C83FDD69958F314B4521EDB3B76F1A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 12082,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12012,
											"end": 12042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12042,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 12012,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9C418048A637D1641C6D732DD38174732BBF7B47A1CF6D5F65895384518B07D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12125,
											"end": 12156,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12125,
											"end": 12156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12105,
											"end": 12156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12082,
											"end": 12157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12157,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 12082,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12172,
											"end": 12188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12172,
											"end": 12188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 11819,
											"end": 11874,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12082,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "AAAB8540682E3A537D17674663EA013E92C83FDD69958F314B4521EDB3B76F1A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 11757,
											"end": 11998,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11915,
											"end": 11982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 11915,
											"end": 11982,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 11239,
											"end": 11298,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 11185,
											"end": 11220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 11106,
											"end": 11140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11339,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 11436,
											"end": 11447,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11382,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11339,
											"end": 11410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11339,
											"end": 11410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11339,
											"end": 11410,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 11339,
											"end": 11410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11436,
											"end": 11447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11436,
											"end": 11447,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11436,
											"end": 11447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11498,
											"end": 11502,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11436,
											"end": 11447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11612,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10602,
											"end": 10619,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11612,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11612,
											"end": 11634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11612,
											"end": 11634,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 11612,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 10941,
											"end": 11651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 11589,
											"end": 11635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11429,
											"end": 11516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 11429,
											"end": 11516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6D696E52656365697665206973206C657373207468616E2063616C6375616C74"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10661,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "63D75DB57AE45C3799740C3CD8DCEE96A498324843D79AE390ADC81D74B52F13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10302,
											"end": 10319,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "AAAB8540682E3A537D17674663EA013E92C83FDD69958F314B4521EDB3B76F1A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10343,
											"end": 10363,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 10367,
											"end": 10398,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 10367,
											"end": 10398,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10418,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9C418048A637D1641C6D732DD38174732BBF7B47A1CF6D5F65895384518B07D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10367,
											"end": 10398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10367,
											"end": 10418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10418,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 10367,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10367,
											"end": 10431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10431,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 10367,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10343,
											"end": 10432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10432,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 10343,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10302,
											"end": 10432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10432,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 10302,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 9908,
											"end": 10448,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9841,
											"end": 14451,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 9841,
											"end": 14451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56A"
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12385,
											"end": 12405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12534,
											"end": 12616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9C418048A637D1641C6D732DD38174732BBF7B47A1CF6D5F65895384518B07D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12558,
											"end": 12589,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 12558,
											"end": 12589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12615,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E56B"
										},
										{
											"begin": 12591,
											"end": 12615,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12534,
											"end": 12616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12534,
											"end": 12616,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12534,
											"end": 12616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12534,
											"end": 12616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12534,
											"end": 12616,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 12534,
											"end": 12616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 27039,
											"end": 27044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12970,
											"end": 13009,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9792,
											"end": 9815,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13282,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 13303,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 12267,
											"end": 12284,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13338,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13303,
											"end": 13338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13282,
											"end": 13366,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 13282,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13393,
											"end": 13397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13393,
											"end": 13397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13393,
											"end": 13397,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13393,
											"end": 13397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13393,
											"end": 13397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13393,
											"end": 13397,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13393,
											"end": 13397,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13290,
											"end": 13299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 13290,
											"end": 13299,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 13290,
											"end": 13299,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13515,
											"end": 13537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13550,
											"name": "tag",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 13515,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13918,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "63D75DB57AE45C3799740C3CD8DCEE96A498324843D79AE390ADC81D74B52F13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 13918,
											"end": 13935,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13918,
											"end": 13935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13918,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13918,
											"end": 13949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13918,
											"end": 13949,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 13918,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "AAAB8540682E3A537D17674663EA013E92C83FDD69958F314B4521EDB3B76F1A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 14333,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14265,
											"end": 14295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14295,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 14265,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14376,
											"end": 14407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9C418048A637D1641C6D732DD38174732BBF7B47A1CF6D5F65895384518B07D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14376,
											"end": 14407,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14376,
											"end": 14407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14356,
											"end": 14407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 14072,
											"end": 14127,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14175,
											"end": 14186,
											"name": "PUSH",
											"source": 0,
											"value": "290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
										},
										{
											"begin": 14175,
											"end": 14186,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14175,
											"end": 14186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14333,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "AAAB8540682E3A537D17674663EA013E92C83FDD69958F314B4521EDB3B76F1A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 14010,
											"end": 14251,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14168,
											"end": 14235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 14168,
											"end": 14235,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 13492,
											"end": 13551,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 13438,
											"end": 13473,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 13600,
											"end": 13609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13600,
											"end": 13609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13600,
											"end": 13635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13600,
											"end": 13635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 13592,
											"end": 13663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13663,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 13592,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13755,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13160,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13600,
											"end": 13609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13600,
											"end": 13609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13865,
											"end": 13887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 13865,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "569"
										},
										{
											"begin": 13220,
											"end": 13904,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "tag",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 13842,
											"end": 13888,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "597"
										},
										{
											"begin": 13788,
											"end": 13823,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13682,
											"end": 13769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "tag",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 13682,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6D696E52656365697665206973206D6F7265207468616E2063616C6375616C74"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 27039,
											"end": 27052,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 12669,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 12669,
											"end": 12700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9C418048A637D1641C6D732DD38174732BBF7B47A1CF6D5F65895384518B07D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12669,
											"end": 12700,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12669,
											"end": 12720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12720,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 12669,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12748,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 12748,
											"end": 12768,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 12748,
											"end": 12768,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "63D75DB57AE45C3799740C3CD8DCEE96A498324843D79AE390ADC81D74B52F13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "AAAB8540682E3A537D17674663EA013E92C83FDD69958F314B4521EDB3B76F1A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12748,
											"end": 12768,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12748,
											"end": 12768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12789,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12772,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12772,
											"end": 12802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12803,
											"name": "tag",
											"source": 0,
											"value": "609"
										},
										{
											"begin": 12669,
											"end": 12803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 12381,
											"end": 12819,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "7A65726F20616D6F756E74206F662061737365743220666F722062757920696E"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81D1A19481C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506F6F6C20697320656D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1BDBDB1259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081C1BDBDB081A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C1BDBDB081A5CC81B1BD8DAD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1BDDD95C881D185E081CDC1958DA599A5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081C1BDBDB1259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "621"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E76616C696420696E6465786573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "A8"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "638"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "638"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2DCECC2D8D2C840D2DCC8CAF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28250,
											"end": 28260,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28250,
											"end": 28260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10661,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28436,
											"end": 28455,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C28F5C29"
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10661,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "FE"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 29882,
											"end": 29903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "tag",
											"source": 0,
											"value": "643"
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10661,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28250,
											"end": 28260,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 28250,
											"end": 28260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28455,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "MULMOD",
											"source": 0
										},
										{
											"begin": 29416,
											"end": 29417,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29401,
											"end": 29413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29401,
											"end": 29413,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29386,
											"end": 29418,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29386,
											"end": 29418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30264,
											"end": 30265,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30245,
											"end": 30246,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30244,
											"end": 30265,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29416,
											"end": 29417,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27996,
											"end": 28166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28751,
											"end": 29058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29433,
											"end": 29813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29882,
											"end": 29903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 886,
											"end": 26651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27383,
											"end": 31388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 28246,
											"end": 28323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28288,
											"end": 28307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "tag",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 28288,
											"end": 28307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									],
									".data": {
										"63D75DB57AE45C3799740C3CD8DCEE96A498324843D79AE390ADC81D74B52F13": "290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565",
										"9C418048A637D1641C6D732DD38174732BBF7B47A1CF6D5F65895384518B07D9": "290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e567",
										"AAAB8540682E3A537D17674663EA013E92C83FDD69958F314B4521EDB3B76F1A": "290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569"
									}
								}
							},
							"sourceList": [
								"SimplePools.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_pools(uint256)": "3997663c",
							"changeContantProduct(uint64,uint256)": "fa5a67ed",
							"changeOwner(uint64,address)": "81d802ba",
							"changePoolMaxBuyAsset1PercentPerTransaction(uint64,uint8)": "f6fce7a9",
							"contractOwner()": "ce606ee0",
							"createPool(address,bool,address,bool,address,uint256,uint256,uint8,bool)": "57b0b64d",
							"exchangeAsset(address,uint64,bool,uint256,uint256)": "d5700cbb",
							"getAllAssetsFromPool(uint64)": "0c95be25",
							"getBalance()": "12065fe0",
							"getPool(uint64)": "919adab8",
							"getPools(uint64,uint64)": "f8c81b90",
							"getPools(uint64[])": "22668de1",
							"getPoolsCount()": "b4ac6860",
							"getPoolsForTransactionsWithIndexesBetween(uint64,uint64)": "acb8001f",
							"getPoolsForTransactionsWithIndexesFrom(uint64)": "455b5adc",
							"getPoolsFrom(uint64)": "0376e49c",
							"getTransactionsCount()": "578cb8f9",
							"isPoolLocked(uint64)": "1e67d542",
							"lockPool(uint64)": "b0b15560",
							"setNewGlobalTax(uint8)": "74d13a23",
							"setNewOwner(address)": "f5a1f5b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_pools\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isAsset1NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAsset2NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"asset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2InitiallyAskedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxBuyAsset1PercentPerTransaction\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"constantProduct\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isConstantPrice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"initialAsset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"newConstantProduct\",\"type\":\"uint256\"}],\"name\":\"changeContantProduct\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newPoolOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"newMaxBuyAsset1PercentPerTransaction\",\"type\":\"uint8\"}],\"name\":\"changePoolMaxBuyAsset1PercentPerTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolCreatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAsset1Native\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAsset2Native\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"asset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2InitiallyAskedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxBuyAsset1PercentPerTransaction\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isConstantPrice\",\"type\":\"bool\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"personExecutingTheExchange\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isBuyingAsset1\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReceiveAssetToBuyAmount\",\"type\":\"uint256\"}],\"name\":\"exchangeAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"}],\"name\":\"getAllAssetsFromPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isAsset1NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAsset2NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"asset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2InitiallyAskedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxBuyAsset1PercentPerTransaction\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"constantProduct\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isConstantPrice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"initialAsset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"}],\"internalType\":\"struct SimplePools.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"indexes\",\"type\":\"uint64[]\"}],\"name\":\"getPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isAsset1NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAsset2NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"asset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2InitiallyAskedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxBuyAsset1PercentPerTransaction\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"constantProduct\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isConstantPrice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"initialAsset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"}],\"internalType\":\"struct SimplePools.Pool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"startPoolIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endPoolIndex\",\"type\":\"uint64\"}],\"name\":\"getPools\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isAsset1NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAsset2NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"asset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2InitiallyAskedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxBuyAsset1PercentPerTransaction\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"constantProduct\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isConstantPrice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"initialAsset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"}],\"internalType\":\"struct SimplePools.Pool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"startTransactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTransactionIndex\",\"type\":\"uint64\"}],\"name\":\"getPoolsForTransactionsWithIndexesBetween\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"startTransactionIndex\",\"type\":\"uint64\"}],\"name\":\"getPoolsForTransactionsWithIndexesFrom\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"startPoolIndex\",\"type\":\"uint64\"}],\"name\":\"getPoolsFrom\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isAsset1NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAsset2NativeBlockchainCurrency\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"asset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset2InitiallyAskedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"maxBuyAsset1PercentPerTransaction\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"constantProduct\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isConstantPrice\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"initialAsset1Amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"}],\"internalType\":\"struct SimplePools.Pool[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"}],\"name\":\"isPoolLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"poolId\",\"type\":\"uint64\"}],\"name\":\"lockPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newTaxIndexFromValidContractTransactionTaxes\",\"type\":\"uint8\"}],\"name\":\"setNewGlobalTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeContantProduct(uint64,uint256)\":{\"params\":{\"newConstantProduct\":\"the new constant product\",\"poolId\":\"the poolId\"}},\"changeOwner(uint64,address)\":{\"params\":{\"newPoolOwner\":\"the address of the new pool owner\",\"poolId\":\"the id of the pool\"}},\"changePoolMaxBuyAsset1PercentPerTransaction(uint64,uint8)\":{\"params\":{\"newMaxBuyAsset1PercentPerTransaction\":\"the new maxBuyAsset1PercentPerTransaction\",\"poolId\":\"the id of the pool\"}},\"createPool(address,bool,address,bool,address,uint256,uint256,uint8,bool)\":{\"params\":{\"asset1\":\"*\",\"asset1Amount\":\"*\",\"asset2\":\"*\",\"asset2InitiallyAskedAmount\":\"*\",\"isAsset1Native\":\"*\",\"isAsset2Native\":\"*\",\"isConstantPrice\":\"*\",\"maxBuyAsset1PercentPerTransaction\":\"*\",\"poolCreatorAddress\":\"the address of the pool creator\"}},\"exchangeAsset(address,uint64,bool,uint256,uint256)\":{\"params\":{\"isBuyingAsset1\":\"boolean flag indicating whether asset1 is requested            for buying in the transaction. If the value of the flag is true            then asset2 from the pool is sold for asset1. Otherwise if the            value of the flag is false then asset1 from the pool is sold for asset2.\",\"minReceiveAssetToBuyAmount\":\"the minimum amount received from assetToBuy.        This param ensures that front-runner bots cannot take advantage of the        transaction. This should be set automatically by simplepools.org or        calculated manually\",\"personExecutingTheExchange\":\"address of the person executing the exchange\",\"poolId\":\"the poolId for the pool where the exchange happens\",\"sellAmount\":\"the amount of asset to sell for the exchange\"},\"returns\":{\"_0\":\"the actual amount bought from the transaction\"}},\"getAllAssetsFromPool(uint64)\":{\"params\":{\"poolId\":\"the poolId of the pool\"}},\"getPool(uint64)\":{\"params\":{\"poolId\":\"the id of the requested pool \"},\"returns\":{\"_0\":\"the requested pool \"}},\"getPools(uint64,uint64)\":{\"params\":{\"endPoolIndex\":\"the end index\",\"startPoolIndex\":\"the start index\"},\"returns\":{\"_0\":\"list of requested pools\"}},\"getPools(uint64[])\":{\"params\":{\"indexes\":\"the list of requested pool indexes \"},\"returns\":{\"_0\":\"list of requested pools\"}},\"getPoolsCount()\":{\"returns\":{\"_0\":\"number of pools in the smart contract.\"}},\"getPoolsForTransactionsWithIndexesBetween(uint64,uint64)\":{\"params\":{\"endTransactionIndex\":\"the index of the last transaction\",\"startTransactionIndex\":\"the index of the starting transaction\"},\"returns\":{\"_0\":\"the requested list of pool indexes\"}},\"getPoolsForTransactionsWithIndexesFrom(uint64)\":{\"params\":{\"startTransactionIndex\":\"the index of the starting transaction\"},\"returns\":{\"_0\":\"the requested list of pool indexes\"}},\"getPoolsFrom(uint64)\":{\"params\":{\"startPoolIndex\":\"the start index\"},\"returns\":{\"_0\":\"list of requested pools\"}},\"isPoolLocked(uint64)\":{\"params\":{\"poolId\":\"the id of the pool\"},\"returns\":{\"_0\":\"true if the pool is locked\"}},\"lockPool(uint64)\":{\"params\":{\"poolId\":\"the id of the pool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_pools(uint256)\":{\"notice\":\"List with all the pools in the smart contract.\"},\"changeContantProduct(uint64,uint256)\":{\"notice\":\"Changes a pool constant product. Only callable by the pool owner. \"},\"changeOwner(uint64,address)\":{\"notice\":\"Changes the ownership of a pool. Only callable by the pool owner. If the owner gets compromised and is fast enough, they can transfer the ownership of the pool. \"},\"changePoolMaxBuyAsset1PercentPerTransaction(uint64,uint8)\":{\"notice\":\"Changes maxBuyAsset1PercentPerTransaction. Only callable by the pool owner. \"},\"constructor\":{\"notice\":\"Set the initial contract owner to the msg.sender.\"},\"contractOwner()\":{\"notice\":\"The owner of the contract (the receiver of the taxes).\"},\"createPool(address,bool,address,bool,address,uint256,uint256,uint8,bool)\":{\"notice\":\"Creates a simple pool. For the documentation of each parameter check the Pool structure definition. \"},\"exchangeAsset(address,uint64,bool,uint256,uint256)\":{\"notice\":\"Exchanges asset for asset from a simple pool. \"},\"getAllAssetsFromPool(uint64)\":{\"notice\":\"Transfers all assets (asset1 and asset2) from a pool to the pool owner. Only callable by the pool owner.\"},\"getBalance()\":{\"notice\":\"Gets the current native asset balance of contract.\"},\"getPool(uint64)\":{\"notice\":\"Returns the state of a single pool. \"},\"getPools(uint64,uint64)\":{\"notice\":\"Gets the states of the pools in a given range [startPoolIndex, ..., endPoolIndex). Start index is included and end index is not included. \"},\"getPools(uint64[])\":{\"notice\":\"Returns the states of the pools with the requested indexes. \"},\"getPoolsForTransactionsWithIndexesBetween(uint64,uint64)\":{\"notice\":\"Returns the list of pool indexes of the pools participating in the list of requested transactions in range [startTransactionIndex, ..., endTransactionIndex). \"},\"getPoolsForTransactionsWithIndexesFrom(uint64)\":{\"notice\":\"Returns the list of pool indexes of the pools participating in the list of requested transactions in range [startTransactionIndex, ..., _allTransactionsPoolIds.length). \"},\"getPoolsFrom(uint64)\":{\"notice\":\"Gets the states of the pools from a given starting index till the end. \"},\"getTransactionsCount()\":{\"notice\":\"Returns the count of all transactions executed with the smart contract.\"},\"isPoolLocked(uint64)\":{\"notice\":\"Returns whether a pool is locked. \"},\"lockPool(uint64)\":{\"notice\":\"Locks a pool. Only callable by the pool owner. Locked pools cannot be unlocked and the assets cannot be taken from the pool owner.\"},\"setNewGlobalTax(uint8)\":{\"notice\":\"Sets a new contractTransactionNax. Only callable by the current contract owner. The list of valid transaction taxes which can be set is validContractTransactionTaxes.\"},\"setNewOwner(address)\":{\"notice\":\"Sets a new contract owner. Only callable by the current contract owner.\"}},\"notice\":\"Simple Pools https://simplepools.org/ DeFi made simple.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimplePools.sol\":\"SimplePools\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"SimplePools.sol\":{\"keccak256\":\"0xe8c70c7483f57de63f1a32ba4a0d5a860ff8bf726c05e1b949f8246565a5ad03\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c15189a651b1e25ffc3c687f28bb0f0a758c2571561eab4e2cc1bbcd20dbdaf8\",\"dweb:/ipfs/QmYfrGjyCW9wbGdL5f22JYJmWF6HV5JYf7q8pNe6iyLRQL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 53,
								"contract": "SimplePools.sol:SimplePools",
								"label": "_pools",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Pool)48_storage)dyn_storage"
							},
							{
								"astId": 57,
								"contract": "SimplePools.sol:SimplePools",
								"label": "_allTransactionsPoolIds",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint64)dyn_storage"
							},
							{
								"astId": 1480,
								"contract": "SimplePools.sol:SimplePools",
								"label": "contractOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1544,
								"contract": "SimplePools.sol:SimplePools",
								"label": "contractTransactionTax",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1564,
								"contract": "SimplePools.sol:SimplePools",
								"label": "validContractTransactionTaxes",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Pool)48_storage)dyn_storage": {
								"base": "t_struct(Pool)48_storage",
								"encoding": "dynamic_array",
								"label": "struct SimplePools.Pool[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint64)dyn_storage": {
								"base": "t_uint64",
								"encoding": "dynamic_array",
								"label": "uint64[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(Pool)48_storage": {
								"encoding": "inplace",
								"label": "struct SimplePools.Pool",
								"members": [
									{
										"astId": 5,
										"contract": "SimplePools.sol:SimplePools",
										"label": "poolId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 8,
										"contract": "SimplePools.sol:SimplePools",
										"label": "isAsset1NativeBlockchainCurrency",
										"offset": 8,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 11,
										"contract": "SimplePools.sol:SimplePools",
										"label": "asset1",
										"offset": 9,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 14,
										"contract": "SimplePools.sol:SimplePools",
										"label": "isAsset2NativeBlockchainCurrency",
										"offset": 29,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 17,
										"contract": "SimplePools.sol:SimplePools",
										"label": "asset2",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 20,
										"contract": "SimplePools.sol:SimplePools",
										"label": "asset1Amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 23,
										"contract": "SimplePools.sol:SimplePools",
										"label": "asset2Amount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 26,
										"contract": "SimplePools.sol:SimplePools",
										"label": "asset2InitiallyAskedAmount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 29,
										"contract": "SimplePools.sol:SimplePools",
										"label": "maxBuyAsset1PercentPerTransaction",
										"offset": 0,
										"slot": "5",
										"type": "t_uint8"
									},
									{
										"astId": 32,
										"contract": "SimplePools.sol:SimplePools",
										"label": "constantProduct",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 35,
										"contract": "SimplePools.sol:SimplePools",
										"label": "isConstantPrice",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 38,
										"contract": "SimplePools.sol:SimplePools",
										"label": "initialAsset1Amount",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 41,
										"contract": "SimplePools.sol:SimplePools",
										"label": "poolOwner",
										"offset": 0,
										"slot": "9",
										"type": "t_address_payable"
									},
									{
										"astId": 44,
										"contract": "SimplePools.sol:SimplePools",
										"label": "isLocked",
										"offset": 20,
										"slot": "9",
										"type": "t_bool"
									},
									{
										"astId": 47,
										"contract": "SimplePools.sol:SimplePools",
										"label": "isEmpty",
										"offset": 21,
										"slot": "9",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "320"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"_pools(uint256)": {
								"notice": "List with all the pools in the smart contract."
							},
							"changeContantProduct(uint64,uint256)": {
								"notice": "Changes a pool constant product. Only callable by the pool owner. "
							},
							"changeOwner(uint64,address)": {
								"notice": "Changes the ownership of a pool. Only callable by the pool owner. If the owner gets compromised and is fast enough, they can transfer the ownership of the pool. "
							},
							"changePoolMaxBuyAsset1PercentPerTransaction(uint64,uint8)": {
								"notice": "Changes maxBuyAsset1PercentPerTransaction. Only callable by the pool owner. "
							},
							"constructor": {
								"notice": "Set the initial contract owner to the msg.sender."
							},
							"contractOwner()": {
								"notice": "The owner of the contract (the receiver of the taxes)."
							},
							"createPool(address,bool,address,bool,address,uint256,uint256,uint8,bool)": {
								"notice": "Creates a simple pool. For the documentation of each parameter check the Pool structure definition. "
							},
							"exchangeAsset(address,uint64,bool,uint256,uint256)": {
								"notice": "Exchanges asset for asset from a simple pool. "
							},
							"getAllAssetsFromPool(uint64)": {
								"notice": "Transfers all assets (asset1 and asset2) from a pool to the pool owner. Only callable by the pool owner."
							},
							"getBalance()": {
								"notice": "Gets the current native asset balance of contract."
							},
							"getPool(uint64)": {
								"notice": "Returns the state of a single pool. "
							},
							"getPools(uint64,uint64)": {
								"notice": "Gets the states of the pools in a given range [startPoolIndex, ..., endPoolIndex). Start index is included and end index is not included. "
							},
							"getPools(uint64[])": {
								"notice": "Returns the states of the pools with the requested indexes. "
							},
							"getPoolsForTransactionsWithIndexesBetween(uint64,uint64)": {
								"notice": "Returns the list of pool indexes of the pools participating in the list of requested transactions in range [startTransactionIndex, ..., endTransactionIndex). "
							},
							"getPoolsForTransactionsWithIndexesFrom(uint64)": {
								"notice": "Returns the list of pool indexes of the pools participating in the list of requested transactions in range [startTransactionIndex, ..., _allTransactionsPoolIds.length). "
							},
							"getPoolsFrom(uint64)": {
								"notice": "Gets the states of the pools from a given starting index till the end. "
							},
							"getTransactionsCount()": {
								"notice": "Returns the count of all transactions executed with the smart contract."
							},
							"isPoolLocked(uint64)": {
								"notice": "Returns whether a pool is locked. "
							},
							"lockPool(uint64)": {
								"notice": "Locks a pool. Only callable by the pool owner. Locked pools cannot be unlocked and the assets cannot be taken from the pool owner."
							},
							"setNewGlobalTax(uint8)": {
								"notice": "Sets a new contractTransactionNax. Only callable by the current contract owner. The list of valid transaction taxes which can be set is validContractTransactionTaxes."
							},
							"setNewOwner(address)": {
								"notice": "Sets a new contract owner. Only callable by the current contract owner."
							}
						},
						"notice": "Simple Pools https://simplepools.org/ DeFi made simple.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SimplePools.sol": {
				"ast": {
					"absolutePath": "SimplePools.sol",
					"exportedSymbols": {
						"IERC20": [
							1882
						],
						"Math": [
							1788
						],
						"SimplePools": [
							1598
						]
					},
					"id": 1883,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimplePools",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "808:76:0",
								"text": " Simple Pools\n https://simplepools.org/\n DeFi made simple."
							},
							"fullyImplemented": true,
							"id": 1598,
							"linearizedBaseContracts": [
								1598
							],
							"name": "SimplePools",
							"nameLocation": "895:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SimplePools.Pool",
									"id": 48,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "poolId",
											"nameLocation": "1074:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "1067:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 4,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1067:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "isAsset1NativeBlockchainCurrency",
											"nameLocation": "1202:32:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "1197:37:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 7,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1197:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "asset1",
											"nameLocation": "1474:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "1466:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1466:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "isAsset2NativeBlockchainCurrency",
											"nameLocation": "1602:32:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "1597:37:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 13,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1597:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "asset2",
											"nameLocation": "1872:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "1864:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 16,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1864:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "asset1Amount",
											"nameLocation": "1979:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "1971:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 19,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1971:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "asset2Amount",
											"nameLocation": "2092:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "2084:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2084:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "asset2InitiallyAskedAmount",
											"nameLocation": "2225:26:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "2217:34:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 25,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2217:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "maxBuyAsset1PercentPerTransaction",
											"nameLocation": "2815:33:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "2809:39:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 28,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2809:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "constantProduct",
											"nameLocation": "3384:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "3376:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3376:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 35,
											"mutability": "mutable",
											"name": "isConstantPrice",
											"nameLocation": "3808:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "3803:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 34,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3803:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 38,
											"mutability": "mutable",
											"name": "initialAsset1Amount",
											"nameLocation": "4065:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "4057:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 37,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4057:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"mutability": "mutable",
											"name": "poolOwner",
											"nameLocation": "4451:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "4435:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 40,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4435:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 44,
											"mutability": "mutable",
											"name": "isLocked",
											"nameLocation": "4593:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "4588:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 43,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4588:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "isEmpty",
											"nameLocation": "4852:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 48,
											"src": "4847:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 46,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4847:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "991:4:0",
									"nodeType": "StructDefinition",
									"scope": 1598,
									"src": "984:3883:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "4875:67:0",
										"text": " List with all the pools in the smart contract."
									},
									"functionSelector": "3997663c",
									"id": 53,
									"mutability": "mutable",
									"name": "_pools",
									"nameLocation": "4962:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1598,
									"src": "4948:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
										"typeString": "struct SimplePools.Pool[]"
									},
									"typeName": {
										"baseType": {
											"id": 51,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 50,
												"name": "Pool",
												"nameLocations": [
													"4948:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 48,
												"src": "4948:4:0"
											},
											"referencedDeclaration": 48,
											"src": "4948:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
												"typeString": "struct SimplePools.Pool"
											}
										},
										"id": 52,
										"nodeType": "ArrayTypeName",
										"src": "4948:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
											"typeString": "struct SimplePools.Pool[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "4977:729:0",
										"text": " Each transaction with the smart contract is associated with a signle pool.\n This array keeps for each transaction with what pool it was associated.\n This is useful to sync the state of all pools in an indexed Database.\n \n The procedure for syncing pool states is the following:\n The Database stores the index of the last transaction with which it has synced\n all pools. Then it gets the current state of transactions in the smart contract\n by querying _allTransactionsPoolIds.length, and then get the only the indexes of the\n pools that were modified by the lates transactions (not synced with the DB), and\n sync the states only for these pools."
									},
									"id": 57,
									"mutability": "mutable",
									"name": "_allTransactionsPoolIds",
									"nameLocation": "5721:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1598,
									"src": "5712:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
										"typeString": "uint64[]"
									},
									"typeName": {
										"baseType": {
											"id": 55,
											"name": "uint64",
											"nodeType": "ElementaryTypeName",
											"src": "5712:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											}
										},
										"id": 56,
										"nodeType": "ArrayTypeName",
										"src": "5712:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
											"typeString": "uint64[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "6947:1428:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"mutability": "mutable",
														"name": "nativeAmountRequired",
														"nameLocation": "6966:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "6958:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 90,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "contractTransactionTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "6989:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"id": 84,
																	"name": "isAsset1Native",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "7015:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "30",
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7047:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "7015:33:0",
																"trueExpression": {
																	"id": 85,
																	"name": "asset1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "7032:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 88,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7014:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6989:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 92,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7068:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7072:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7068:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 94,
																"name": "nativeAmountRequired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "7081:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7068:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f776572207468616e20746865207265717569726564207472616e73616374696f6e2076616c7565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f0d099d4ada820129b6531031158ac833117d2213bf64ce2379c1852ccbd1e4",
																"typeString": "literal_string \"Lower than the required transaction value\""
															},
															"value": "Lower than the required transaction value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f0d099d4ada820129b6531031158ac833117d2213bf64ce2379c1852ccbd1e4",
																"typeString": "literal_string \"Lower than the required transaction value\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "7060:87:0"
											},
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "poolId",
														"nameLocation": "7167:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "7160:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 99,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 103,
																"name": "_pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "7183:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																	"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7190:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7183:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7176:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 101,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7176:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7176:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7160:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 110,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "7237:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 107,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "7208:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7232:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7208:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint64_$dyn_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_array$_t_uint64_$dyn_storage_ptr_$",
															"typeString": "function (uint64[] storage pointer,uint64)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "7208:36:0"
											},
											{
												"condition": {
													"id": 113,
													"name": "isAsset1Native",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 62,
													"src": "7259:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 150,
													"nodeType": "Block",
													"src": "7407:143:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 135,
																		"name": "poolCreatorAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "7442:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 138,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7470:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimplePools_$1598",
																					"typeString": "contract SimplePools"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimplePools_$1598",
																					"typeString": "contract SimplePools"
																				}
																			],
																			"id": 137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7462:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 136,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7462:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7462:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 140,
																		"name": "asset1Amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "7477:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 132,
																		"name": "asset1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 65,
																		"src": "7422:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1882",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7429:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1863,
																	"src": "7422:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7422:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "7422:68:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 146,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7528:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7532:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "7528:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 143,
																		"name": "contractOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "7505:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7519:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7505:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7505:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 149,
															"nodeType": "ExpressionStatement",
															"src": "7505:33:0"
														}
													]
												},
												"id": 151,
												"nodeType": "IfStatement",
												"src": "7255:295:0",
												"trueBody": {
													"id": 131,
													"nodeType": "Block",
													"src": "7275:126:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 119,
																		"name": "asset1Amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "7313:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 116,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimplePools_$1598",
																					"typeString": "contract SimplePools"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimplePools_$1598",
																					"typeString": "contract SimplePools"
																				}
																			],
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7290:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 114,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7290:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7290:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7304:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7290:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7290:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "7290:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 125,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7364:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7368:5:0",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "7364:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 127,
																			"name": "asset1Amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 72,
																			"src": "7376:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7364:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 122,
																		"name": "contractOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "7341:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7355:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "7341:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7341:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 130,
															"nodeType": "ExpressionStatement",
															"src": "7341:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 152,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "7560:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7567:4:0",
																"memberName": "push",
																"nodeType": "MemberAccess",
																"src": "7560:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr_$returns$_t_struct$_Pool_$48_storage_$bound_to$_t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr_$",
																	"typeString": "function (struct SimplePools.Pool storage ref[] storage pointer) returns (struct SimplePools.Pool storage ref)"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7560:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage",
																"typeString": "struct SimplePools.Pool storage ref"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7574:6:0",
														"memberName": "poolId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "7560:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 157,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "7583:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7560:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "7560:29:0"
											},
											{
												"assignments": [
													162
												],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7613:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "7600:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														},
														"typeName": {
															"id": 161,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 160,
																"name": "Pool",
																"nameLocations": [
																	"7600:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 48,
																"src": "7600:4:0"
															},
															"referencedDeclaration": 48,
															"src": "7600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"baseExpression": {
														"id": 163,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "7620:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 165,
													"indexExpression": {
														"id": 164,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "7627:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7620:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7600:34:0"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 167,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7645:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7650:6:0",
														"memberName": "asset1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "7645:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 172,
																"name": "asset1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "7667:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1882",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1882",
																	"typeString": "contract IERC20"
																}
															],
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7659:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 170,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7659:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7659:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7645:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "7645:29:0"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 176,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7685:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7690:12:0",
														"memberName": "asset1Amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "7685:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 179,
														"name": "asset1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "7705:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7685:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "7685:32:0"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 182,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7733:6:0",
														"memberName": "asset2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "7728:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 187,
																"name": "asset2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "7750:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1882",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1882",
																	"typeString": "contract IERC20"
																}
															],
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 185,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7742:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7742:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7728:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "7728:29:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 191,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7773:12:0",
														"memberName": "asset2Amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "7768:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7768:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "7768:21:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 197,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7800:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7805:32:0",
														"memberName": "isAsset1NativeBlockchainCurrency",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "7800:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 200,
														"name": "isAsset1Native",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "7840:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7800:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "7800:54:0"
											},
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 203,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7865:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7870:32:0",
														"memberName": "isAsset2NativeBlockchainCurrency",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "7865:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 206,
														"name": "isAsset2Native",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "7905:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7865:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "7865:54:0"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 209,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7930:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7935:26:0",
														"memberName": "asset2InitiallyAskedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "7930:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 212,
														"name": "asset2InitiallyAskedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "7964:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7930:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "7930:60:0"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 215,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "8001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 217,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8006:33:0",
														"memberName": "maxBuyAsset1PercentPerTransaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "8001:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "maxBuyAsset1PercentPerTransaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "8042:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "8001:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "8001:74:0"
											},
											{
												"expression": {
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 221,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "8086:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8091:15:0",
														"memberName": "isConstantPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 35,
														"src": "8086:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 224,
														"name": "isConstantPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "8109:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8086:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "8086:38:0"
											},
											{
												"expression": {
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 227,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "8135:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8140:15:0",
														"memberName": "constantProduct",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "8135:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 230,
															"name": "asset1Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "8158:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 231,
															"name": "asset2InitiallyAskedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "8173:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8158:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8135:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "8135:64:0"
											},
											{
												"expression": {
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 235,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "8210:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8215:19:0",
														"memberName": "initialAsset1Amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "8210:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 238,
														"name": "asset1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "8237:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8210:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "8210:39:0"
											},
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 241,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "8260:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8265:9:0",
														"memberName": "poolOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "8260:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 246,
																"name": "poolCreatorAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "8285:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8277:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 244,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8277:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8277:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "8260:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "8260:44:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 250,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "8315:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8320:8:0",
														"memberName": "isLocked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "8315:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8331:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8315:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "8315:21:0"
											},
											{
												"expression": {
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 256,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "8347:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8352:7:0",
														"memberName": "isEmpty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "8347:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8362:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8347:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "8347:20:0"
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "5943:651:0",
										"text": " Creates a simple pool.\n For the documentation of each parameter check the Pool structure definition.\n \n @param poolCreatorAddress the address of the pool creator\n @param isAsset1Native                         *\n @param asset1                                 *\n @param isAsset2Native                         *\n @param asset2                                 *\n @param asset1Amount                           *\n @param asset2InitiallyAskedAmount             *\n @param maxBuyAsset1PercentPerTransaction      *\n @param isConstantPrice                        *"
									},
									"functionSelector": "57b0b64d",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "6609:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "poolCreatorAddress",
												"nameLocation": "6638:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6630:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "isAsset1Native",
												"nameLocation": "6672:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6667:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "asset1",
												"nameLocation": "6704:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1882",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 64,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 63,
														"name": "IERC20",
														"nameLocations": [
															"6697:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "6697:6:0"
													},
													"referencedDeclaration": 1882,
													"src": "6697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1882",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "isAsset2Native",
												"nameLocation": "6726:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6721:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "asset2",
												"nameLocation": "6758:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6751:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1882",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 69,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 68,
														"name": "IERC20",
														"nameLocations": [
															"6751:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1882,
														"src": "6751:6:0"
													},
													"referencedDeclaration": 1882,
													"src": "6751:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1882",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "asset1Amount",
												"nameLocation": "6783:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6775:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "asset2InitiallyAskedAmount",
												"nameLocation": "6814:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6806:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "maxBuyAsset1PercentPerTransaction",
												"nameLocation": "6857:33:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6851:39:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 75,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6851:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "isConstantPrice",
												"nameLocation": "6907:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6902:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6902:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6619:310:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6947:0:0"
									},
									"scope": 1598,
									"src": "6600:1775:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "9626:4832:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "9645:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 281,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "9654:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9661:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9654:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9645:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706f6f6c4964",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9669:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32354d273982b8a12980350d0d0696a8a526bbd1ae19cd25e621802e4f3dac49",
																"typeString": "literal_string \"Invalid poolId\""
															},
															"value": "Invalid poolId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32354d273982b8a12980350d0d0696a8a526bbd1ae19cd25e621802e4f3dac49",
																"typeString": "literal_string \"Invalid poolId\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9637:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "9637:49:0"
											},
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9710:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "9697:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														},
														"typeName": {
															"id": 288,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 287,
																"name": "Pool",
																"nameLocations": [
																	"9697:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 48,
																"src": "9697:4:0"
															},
															"referencedDeclaration": 48,
															"src": "9697:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"baseExpression": {
														"id": 290,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "9717:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 292,
													"indexExpression": {
														"id": 291,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "9724:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9717:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9697:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9750:13:0",
															"subExpression": {
																"expression": {
																	"id": 295,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "9751:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9756:7:0",
																"memberName": "isEmpty",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 47,
																"src": "9751:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20697320656d707479",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9765:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36d8f20d543b3c7293e5a471020c2cc8efd70b5f3044302dd3812c51d2f827b1",
																"typeString": "literal_string \"Pool is empty\""
															},
															"value": "Pool is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36d8f20d543b3c7293e5a471020c2cc8efd70b5f3044302dd3812c51d2f827b1",
																"typeString": "literal_string \"Pool is empty\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9742:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9742:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "9742:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "9821:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 301,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "9792:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9816:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9792:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint64_$dyn_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_array$_t_uint64_$dyn_storage_ptr_$",
															"typeString": "function (uint64[] storage pointer,uint64)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9792:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "9792:36:0"
											},
											{
												"condition": {
													"id": 307,
													"name": "isBuyingAsset1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 270,
													"src": "9845:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 701,
													"nodeType": "Block",
													"src": "12206:2245:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 505,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 289,
																				"src": "12267:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																					"typeString": "struct SimplePools.Pool storage pointer"
																				}
																			},
																			"id": 506,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12272:12:0",
																			"memberName": "asset2Amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 23,
																			"src": "12267:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12287:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "12267:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7a65726f20616d6f756e74206f662061737365743220666f722062757920696e2074686520706f6f6c",
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12290:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1e2e52217a881faffb3442ce277a6070a6014f33635964d8f2da270532151bcb",
																			"typeString": "literal_string \"zero amount of asset2 for buy in the pool\""
																		},
																		"value": "zero amount of asset2 for buy in the pool"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1e2e52217a881faffb3442ce277a6070a6014f33635964d8f2da270532151bcb",
																			"typeString": "literal_string \"zero amount of asset2 for buy in the pool\""
																		}
																	],
																	"id": 504,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12259:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12259:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "ExpressionStatement",
															"src": "12259:75:0"
														},
														{
															"assignments": [
																513
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 513,
																	"mutability": "mutable",
																	"name": "amountOut",
																	"nameLocation": "12357:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 701,
																	"src": "12349:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 512,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12349:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 514,
															"nodeType": "VariableDeclarationStatement",
															"src": "12349:17:0"
														},
														{
															"condition": {
																"expression": {
																	"id": 515,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "12385:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12390:15:0",
																"memberName": "isConstantPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 35,
																"src": "12385:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 546,
																"nodeType": "Block",
																"src": "12638:181:0",
																"statements": [
																	{
																		"expression": {
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 529,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 513,
																				"src": "12657:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 530,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "12669:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 531,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12674:26:0",
																						"memberName": "asset2InitiallyAskedAmount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 26,
																						"src": "12669:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"expression": {
																							"id": 532,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "12703:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 533,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12708:12:0",
																						"memberName": "asset2Amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 23,
																						"src": "12703:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12669:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 542,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 535,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "12748:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 536,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12753:15:0",
																						"memberName": "constantProduct",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 32,
																						"src": "12748:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 540,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 537,
																										"name": "pool",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 289,
																										"src": "12772:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																											"typeString": "struct SimplePools.Pool storage pointer"
																										}
																									},
																									"id": 538,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "12777:12:0",
																									"memberName": "asset1Amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 20,
																									"src": "12772:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 539,
																									"name": "sellAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 272,
																									"src": "12792:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12772:30:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 541,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12771:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12748:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12669:134:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12657:146:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 545,
																		"nodeType": "ExpressionStatement",
																		"src": "12657:146:0"
																	}
																]
															},
															"id": 547,
															"nodeType": "IfStatement",
															"src": "12381:438:0",
															"trueBody": {
																"id": 528,
																"nodeType": "Block",
																"src": "12407:225:0",
																"statements": [
																	{
																		"expression": {
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 517,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 513,
																				"src": "12522:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 520,
																						"name": "sellAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 272,
																						"src": "12546:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 521,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "12558:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 522,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12563:26:0",
																						"memberName": "asset2InitiallyAskedAmount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 26,
																						"src": "12558:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 523,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "12591:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 524,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12596:19:0",
																						"memberName": "initialAsset1Amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 38,
																						"src": "12591:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 518,
																						"name": "Math",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "12534:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Math_$1788_$",
																							"typeString": "type(library Math)"
																						}
																					},
																					"id": 519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12539:6:0",
																					"memberName": "mulDiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1743,
																					"src": "12534:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12534:82:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12522:94:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 527,
																		"nodeType": "ExpressionStatement",
																		"src": "12522:94:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 548,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "12897:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 551,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "12918:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 552,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 289,
																				"src": "12929:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																					"typeString": "struct SimplePools.Pool storage pointer"
																				}
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12934:12:0",
																			"memberName": "asset2Amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 23,
																			"src": "12929:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 549,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "12909:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1788_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12914:3:0",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1621,
																		"src": "12909:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12909:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12897:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "12897:50:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 558,
																			"name": "minReceiveAssetToBuyAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 274,
																			"src": "12970:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 559,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 513,
																			"src": "13000:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12970:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6d696e52656365697665206973206d6f7265207468616e2063616c6375616c74656420616d6f756e74",
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13010:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_14b23ec9de4805998ded9096416bd7d6727f8ff30ff73dcf66ed974ee6cd657e",
																			"typeString": "literal_string \"minReceive is more than calcualted amount\""
																		},
																		"value": "minReceive is more than calcualted amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_14b23ec9de4805998ded9096416bd7d6727f8ff30ff73dcf66ed974ee6cd657e",
																			"typeString": "literal_string \"minReceive is more than calcualted amount\""
																		}
																	],
																	"id": 557,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12962:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12962:92:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 563,
															"nodeType": "ExpressionStatement",
															"src": "12962:92:0"
														},
														{
															"assignments": [
																565
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 565,
																	"mutability": "mutable",
																	"name": "taxDivided",
																	"nameLocation": "13122:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 701,
																	"src": "13114:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 564,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13114:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 569,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 566,
																	"name": "contractTransactionTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "13135:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13160:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13135:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13114:47:0"
														},
														{
															"condition": {
																"expression": {
																	"id": 570,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "13224:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13229:32:0",
																"memberName": "isAsset1NativeBlockchainCurrency",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "13224:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 648,
																"nodeType": "Block",
																"src": "13573:331:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 614,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 611,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "13600:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 612,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13604:5:0",
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"src": "13600:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 613,
																						"name": "contractTransactionTax",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1544,
																						"src": "13613:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13600:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "6c6f776572207472616e73616374696f6e2076616c7565",
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13637:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					},
																					"value": "lower transaction value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					}
																				],
																				"id": 610,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13592:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13592:71:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 617,
																		"nodeType": "ExpressionStatement",
																		"src": "13592:71:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 623,
																					"name": "personExecutingTheExchange",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 266,
																					"src": "13715:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 626,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "13751:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						],
																						"id": 625,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13743:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 624,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "13743:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13743:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 628,
																					"name": "sellAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "13758:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 619,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 289,
																								"src": "13689:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																									"typeString": "struct SimplePools.Pool storage pointer"
																								}
																							},
																							"id": 620,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13694:6:0",
																							"memberName": "asset1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 11,
																							"src": "13689:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 618,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1882,
																						"src": "13682:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1882_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 621,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13682:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1882",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13702:12:0",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1863,
																				"src": "13682:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13682:87:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 630,
																		"nodeType": "ExpressionStatement",
																		"src": "13682:87:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 636,
																					"name": "taxDivided",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 565,
																					"src": "13812:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 631,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "13788:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 634,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13793:9:0",
																					"memberName": "poolOwner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 41,
																					"src": "13788:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13803:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "13788:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13788:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 638,
																		"nodeType": "ExpressionStatement",
																		"src": "13788:35:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 645,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 642,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "13865:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 643,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13869:5:0",
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"src": "13865:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 644,
																						"name": "taxDivided",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 565,
																						"src": "13877:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13865:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 639,
																					"name": "contractOwner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "13842:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13856:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "13842:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13842:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 647,
																		"nodeType": "ExpressionStatement",
																		"src": "13842:46:0"
																	}
																]
															},
															"id": 649,
															"nodeType": "IfStatement",
															"src": "13220:684:0",
															"trueBody": {
																"id": 609,
																"nodeType": "Block",
																"src": "13263:304:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 573,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "13290:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 574,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "13294:5:0",
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"src": "13290:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 575,
																							"name": "sellAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 272,
																							"src": "13303:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 576,
																							"name": "contractTransactionTax",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1544,
																							"src": "13316:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13303:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13290:48:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "6c6f776572207472616e73616374696f6e2076616c7565",
																					"id": 579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13340:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					},
																					"value": "lower transaction value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					}
																				],
																				"id": 572,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13282:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13282:84:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 581,
																		"nodeType": "ExpressionStatement",
																		"src": "13282:84:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "sellAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "13408:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 584,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "13393:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						],
																						"id": 583,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13385:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 582,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "13385:8:0",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13385:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13399:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "13385:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13385:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 589,
																		"nodeType": "ExpressionStatement",
																		"src": "13385:34:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 595,
																					"name": "taxDivided",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 565,
																					"src": "13462:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 590,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "13438:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 593,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13443:9:0",
																					"memberName": "poolOwner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 41,
																					"src": "13438:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13453:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "13438:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13438:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 597,
																		"nodeType": "ExpressionStatement",
																		"src": "13438:35:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 604,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 601,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "13515:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 602,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13519:5:0",
																							"memberName": "value",
																							"nodeType": "MemberAccess",
																							"src": "13515:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 603,
																							"name": "sellAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 272,
																							"src": "13527:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13515:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 605,
																						"name": "taxDivided",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 565,
																						"src": "13540:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13515:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 598,
																					"name": "contractOwner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "13492:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13506:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "13492:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13492:59:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 608,
																		"nodeType": "ExpressionStatement",
																		"src": "13492:59:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 650,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "13918:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																			"typeString": "struct SimplePools.Pool storage pointer"
																		}
																	},
																	"id": 652,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "13923:12:0",
																	"memberName": "asset1Amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "13918:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 653,
																	"name": "sellAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "13939:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13918:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 655,
															"nodeType": "ExpressionStatement",
															"src": "13918:31:0"
														},
														{
															"condition": {
																"expression": {
																	"id": 656,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "14014:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14019:32:0",
																"memberName": "isAsset2NativeBlockchainCurrency",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 14,
																"src": "14014:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 676,
																"nodeType": "Block",
																"src": "14149:102:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 672,
																					"name": "personExecutingTheExchange",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 266,
																					"src": "14197:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 673,
																					"name": "amountOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "14225:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 668,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 289,
																								"src": "14175:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																									"typeString": "struct SimplePools.Pool storage pointer"
																								}
																							},
																							"id": 669,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "14180:6:0",
																							"memberName": "asset2",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "14175:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 667,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1882,
																						"src": "14168:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1882_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 670,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14168:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1882",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14188:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1831,
																				"src": "14168:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14168:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 675,
																		"nodeType": "ExpressionStatement",
																		"src": "14168:67:0"
																	}
																]
															},
															"id": 677,
															"nodeType": "IfStatement",
															"src": "14010:241:0",
															"trueBody": {
																"id": 666,
																"nodeType": "Block",
																"src": "14053:90:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 663,
																					"name": "amountOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "14117:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 660,
																							"name": "personExecutingTheExchange",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 266,
																							"src": "14080:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 659,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14072:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 658,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "14072:8:0",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14072:35:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14108:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "14072:44:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14072:55:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 665,
																		"nodeType": "ExpressionStatement",
																		"src": "14072:55:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 678,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "14265:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																			"typeString": "struct SimplePools.Pool storage pointer"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14270:12:0",
																	"memberName": "asset2Amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "14265:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 681,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "14286:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14265:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 683,
															"nodeType": "ExpressionStatement",
															"src": "14265:30:0"
														},
														{
															"expression": {
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 684,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "14310:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																			"typeString": "struct SimplePools.Pool storage pointer"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "14315:15:0",
																	"memberName": "constantProduct",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 32,
																	"src": "14310:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"expression": {
																					"id": 687,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 289,
																					"src": "14334:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																						"typeString": "struct SimplePools.Pool storage pointer"
																					}
																				},
																				"id": 688,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14339:12:0",
																				"memberName": "asset1Amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 20,
																				"src": "14334:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 689,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14333:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 690,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "14356:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 691,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14361:12:0",
																					"memberName": "asset2Amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 23,
																					"src": "14356:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"expression": {
																						"id": 692,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "14376:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 693,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "14381:26:0",
																					"memberName": "asset2InitiallyAskedAmount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 26,
																					"src": "14376:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14356:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 695,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14355:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14333:75:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14310:98:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 698,
															"nodeType": "ExpressionStatement",
															"src": "14310:98:0"
														},
														{
															"expression": {
																"id": 699,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "14430:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 278,
															"id": 700,
															"nodeType": "Return",
															"src": "14423:16:0"
														}
													]
												},
												"id": 702,
												"nodeType": "IfStatement",
												"src": "9841:4610:0",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "9861:2339:0",
													"statements": [
														{
															"assignments": [
																309
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 309,
																	"mutability": "mutable",
																	"name": "amountOut",
																	"nameLocation": "9884:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 503,
																	"src": "9876:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9876:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 310,
															"nodeType": "VariableDeclarationStatement",
															"src": "9876:17:0"
														},
														{
															"condition": {
																"expression": {
																	"id": 311,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "9912:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9917:15:0",
																"memberName": "isConstantPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 35,
																"src": "9912:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 342,
																"nodeType": "Block",
																"src": "10161:287:0",
																"statements": [
																	{
																		"expression": {
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 325,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 309,
																				"src": "10290:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 326,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "10302:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 327,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10307:12:0",
																					"memberName": "asset1Amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 20,
																					"src": "10302:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 338,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 328,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "10343:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 329,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10348:15:0",
																						"memberName": "constantProduct",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 32,
																						"src": "10343:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 336,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 334,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 330,
																											"name": "pool",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 289,
																											"src": "10367:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																												"typeString": "struct SimplePools.Pool storage pointer"
																											}
																										},
																										"id": 331,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "10372:26:0",
																										"memberName": "asset2InitiallyAskedAmount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 26,
																										"src": "10367:31:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"expression": {
																											"id": 332,
																											"name": "pool",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 289,
																											"src": "10401:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																												"typeString": "struct SimplePools.Pool storage pointer"
																											}
																										},
																										"id": 333,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "10406:12:0",
																										"memberName": "asset2Amount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 23,
																										"src": "10401:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "10367:51:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 335,
																									"name": "sellAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 272,
																									"src": "10421:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "10367:64:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 337,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "10366:66:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10343:89:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10302:130:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10290:142:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 341,
																		"nodeType": "ExpressionStatement",
																		"src": "10290:142:0"
																	}
																]
															},
															"id": 343,
															"nodeType": "IfStatement",
															"src": "9908:540:0",
															"trueBody": {
																"id": 324,
																"nodeType": "Block",
																"src": "9934:221:0",
																"statements": [
																	{
																		"expression": {
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 313,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 309,
																				"src": "10045:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 316,
																						"name": "sellAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 272,
																						"src": "10069:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 317,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "10081:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 318,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10086:19:0",
																						"memberName": "initialAsset1Amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 38,
																						"src": "10081:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 319,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 289,
																							"src": "10107:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																								"typeString": "struct SimplePools.Pool storage pointer"
																							}
																						},
																						"id": 320,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10112:26:0",
																						"memberName": "asset2InitiallyAskedAmount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 26,
																						"src": "10107:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 314,
																						"name": "Math",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "10057:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Math_$1788_$",
																							"typeString": "type(library Math)"
																						}
																					},
																					"id": 315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10062:6:0",
																					"memberName": "mulDiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1743,
																					"src": "10057:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10057:82:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:94:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 323,
																		"nodeType": "ExpressionStatement",
																		"src": "10045:94:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "10536:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 347,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "10557:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 350,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "10602:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 351,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10607:12:0",
																					"memberName": "asset1Amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 20,
																					"src": "10602:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 352,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "10621:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 353,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10626:33:0",
																					"memberName": "maxBuyAsset1PercentPerTransaction",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 29,
																					"src": "10621:38:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				{
																					"hexValue": "313030",
																					"id": 354,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10661:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					{
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				],
																				"expression": {
																					"id": 348,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1788,
																					"src": "10590:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$1788_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10595:6:0",
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1743,
																				"src": "10590:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10590:75:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 345,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "10548:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1788_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10553:3:0",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1621,
																		"src": "10548:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10548:118:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10536:130:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 358,
															"nodeType": "ExpressionStatement",
															"src": "10536:130:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 360,
																			"name": "minReceiveAssetToBuyAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 274,
																			"src": "10689:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 361,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "10719:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10689:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6d696e52656365697665206973206c657373207468616e2063616c6375616c74656420616d6f756e74",
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10729:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_168794d00d84a4742eb64da5799a77989f5869af614165a7dd58aca136b2333f",
																			"typeString": "literal_string \"minReceive is less than calcualted amount\""
																		},
																		"value": "minReceive is less than calcualted amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_168794d00d84a4742eb64da5799a77989f5869af614165a7dd58aca136b2333f",
																			"typeString": "literal_string \"minReceive is less than calcualted amount\""
																		}
																	],
																	"id": 359,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10681:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10681:92:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 365,
															"nodeType": "ExpressionStatement",
															"src": "10681:92:0"
														},
														{
															"assignments": [
																367
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 367,
																	"mutability": "mutable",
																	"name": "taxDivided",
																	"nameLocation": "10887:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 503,
																	"src": "10879:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 366,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10879:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 371,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "contractTransactionTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "10900:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10900:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10879:47:0"
														},
														{
															"condition": {
																"expression": {
																	"id": 372,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "10945:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10950:32:0",
																"memberName": "isAsset2NativeBlockchainCurrency",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 14,
																"src": "10945:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 450,
																"nodeType": "Block",
																"src": "11320:331:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 413,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "11347:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11351:5:0",
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"src": "11347:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 415,
																						"name": "contractTransactionTax",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1544,
																						"src": "11360:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11347:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "6c6f776572207472616e73616374696f6e2076616c7565",
																					"id": 417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11384:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					},
																					"value": "lower transaction value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					}
																				],
																				"id": 412,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11339:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11339:71:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 419,
																		"nodeType": "ExpressionStatement",
																		"src": "11339:71:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 425,
																					"name": "personExecutingTheExchange",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 266,
																					"src": "11462:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 428,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "11498:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						],
																						"id": 427,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11490:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 426,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11490:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11490:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 430,
																					"name": "sellAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "11505:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 421,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 289,
																								"src": "11436:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																									"typeString": "struct SimplePools.Pool storage pointer"
																								}
																							},
																							"id": 422,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11441:6:0",
																							"memberName": "asset2",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 17,
																							"src": "11436:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 420,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1882,
																						"src": "11429:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1882_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 423,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11429:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1882",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11449:12:0",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1863,
																				"src": "11429:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11429:87:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 432,
																		"nodeType": "ExpressionStatement",
																		"src": "11429:87:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 438,
																					"name": "taxDivided",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "11559:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 433,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "11535:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 436,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11540:9:0",
																					"memberName": "poolOwner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 41,
																					"src": "11535:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11550:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "11535:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11535:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 440,
																		"nodeType": "ExpressionStatement",
																		"src": "11535:35:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 447,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 444,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "11612:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11616:5:0",
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"src": "11612:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 446,
																						"name": "taxDivided",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 367,
																						"src": "11624:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11612:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 441,
																					"name": "contractOwner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "11589:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11603:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "11589:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11589:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 449,
																		"nodeType": "ExpressionStatement",
																		"src": "11589:46:0"
																	}
																]
															},
															"id": 451,
															"nodeType": "IfStatement",
															"src": "10941:710:0",
															"trueBody": {
																"id": 411,
																"nodeType": "Block",
																"src": "10984:330:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 375,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "11011:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "11015:5:0",
																						"memberName": "value",
																						"nodeType": "MemberAccess",
																						"src": "11011:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 379,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 377,
																							"name": "sellAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 272,
																							"src": "11024:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 378,
																							"name": "contractTransactionTax",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1544,
																							"src": "11037:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11024:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11011:48:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "6c6f776572207472616e73616374696f6e2076616c7565",
																					"id": 381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11061:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					},
																					"value": "lower transaction value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_93d591054d97dd94369075a685fd3d6b0e18c2a8091582abaff5648d202ebe19",
																						"typeString": "literal_string \"lower transaction value\""
																					}
																				],
																				"id": 374,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11003:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11003:84:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 383,
																		"nodeType": "ExpressionStatement",
																		"src": "11003:84:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 389,
																					"name": "sellAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "11129:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 386,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "11114:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SimplePools_$1598",
																								"typeString": "contract SimplePools"
																							}
																						],
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11106:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11106:8:0",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11106:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11120:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "11106:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11106:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 391,
																		"nodeType": "ExpressionStatement",
																		"src": "11106:34:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 397,
																					"name": "taxDivided",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "11209:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 392,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "11185:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 395,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11190:9:0",
																					"memberName": "poolOwner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 41,
																					"src": "11185:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11200:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "11185:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11185:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 399,
																		"nodeType": "ExpressionStatement",
																		"src": "11185:35:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 403,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "11262:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 404,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11266:5:0",
																							"memberName": "value",
																							"nodeType": "MemberAccess",
																							"src": "11262:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 405,
																							"name": "sellAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 272,
																							"src": "11274:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11262:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 407,
																						"name": "taxDivided",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 367,
																						"src": "11287:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11262:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 400,
																					"name": "contractOwner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "11239:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11253:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "11239:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11239:59:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 410,
																		"nodeType": "ExpressionStatement",
																		"src": "11239:59:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 452,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "11665:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																			"typeString": "struct SimplePools.Pool storage pointer"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11670:12:0",
																	"memberName": "asset2Amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "11665:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 455,
																	"name": "sellAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "11686:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11665:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 457,
															"nodeType": "ExpressionStatement",
															"src": "11665:31:0"
														},
														{
															"condition": {
																"expression": {
																	"id": 458,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "11761:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11766:32:0",
																"memberName": "isAsset1NativeBlockchainCurrency",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "11761:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 478,
																"nodeType": "Block",
																"src": "11896:102:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 474,
																					"name": "personExecutingTheExchange",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 266,
																					"src": "11944:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 475,
																					"name": "amountOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "11972:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 470,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 289,
																								"src": "11922:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																									"typeString": "struct SimplePools.Pool storage pointer"
																								}
																							},
																							"id": 471,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11927:6:0",
																							"memberName": "asset1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 11,
																							"src": "11922:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 469,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1882,
																						"src": "11915:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1882_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 472,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11915:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1882",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11935:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1831,
																				"src": "11915:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11915:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 477,
																		"nodeType": "ExpressionStatement",
																		"src": "11915:67:0"
																	}
																]
															},
															"id": 479,
															"nodeType": "IfStatement",
															"src": "11757:241:0",
															"trueBody": {
																"id": 468,
																"nodeType": "Block",
																"src": "11800:90:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 465,
																					"name": "amountOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "11864:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 462,
																							"name": "personExecutingTheExchange",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 266,
																							"src": "11827:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 461,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11819:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 460,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "11819:8:0",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11819:35:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11855:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "11819:44:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11819:55:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 467,
																		"nodeType": "ExpressionStatement",
																		"src": "11819:55:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 480,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "12012:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																			"typeString": "struct SimplePools.Pool storage pointer"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "12017:12:0",
																	"memberName": "asset1Amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "12012:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 483,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "12033:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12012:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 485,
															"nodeType": "ExpressionStatement",
															"src": "12012:30:0"
														},
														{
															"expression": {
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 486,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "12059:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																			"typeString": "struct SimplePools.Pool storage pointer"
																		}
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "12064:15:0",
																	"memberName": "constantProduct",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 32,
																	"src": "12059:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"expression": {
																					"id": 489,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 289,
																					"src": "12083:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																						"typeString": "struct SimplePools.Pool storage pointer"
																					}
																				},
																				"id": 490,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12088:12:0",
																				"memberName": "asset1Amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 20,
																				"src": "12083:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 491,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "12082:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 492,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "12105:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 493,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12110:12:0",
																					"memberName": "asset2Amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 23,
																					"src": "12105:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"expression": {
																						"id": 494,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 289,
																						"src": "12125:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																							"typeString": "struct SimplePools.Pool storage pointer"
																						}
																					},
																					"id": 495,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12130:26:0",
																					"memberName": "asset2InitiallyAskedAmount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 26,
																					"src": "12125:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12105:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 497,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "12104:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12082:75:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12059:98:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 500,
															"nodeType": "ExpressionStatement",
															"src": "12059:98:0"
														},
														{
															"expression": {
																"id": 501,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "12179:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 278,
															"id": 502,
															"nodeType": "Return",
															"src": "12172:16:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "8383:998:0",
										"text": " Exchanges asset for asset from a simple pool.\n \n @param personExecutingTheExchange address of the person executing the exchange\n @param poolId the poolId for the pool where the exchange happens\n @param isBuyingAsset1 boolean flag indicating whether asset1 is requested\n            for buying in the transaction. If the value of the flag is true\n            then asset2 from the pool is sold for asset1. Otherwise if the\n            value of the flag is false then asset1 from the pool is sold for asset2.\n @param sellAmount the amount of asset to sell for the exchange\n @param minReceiveAssetToBuyAmount the minimum amount received from assetToBuy.\n        This param ensures that front-runner bots cannot take advantage of the\n        transaction. This should be set automatically by simplepools.org or\n        calculated manually\n @return the actual amount bought from the transaction"
									},
									"functionSelector": "d5700cbb",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exchangeAsset",
									"nameLocation": "9396:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "personExecutingTheExchange",
												"nameLocation": "9428:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "9420:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "9472:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "9465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 267,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "isBuyingAsset1",
												"nameLocation": "9494:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "9489:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9489:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "sellAmount",
												"nameLocation": "9527:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "9519:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "minReceiveAssetToBuyAmount",
												"nameLocation": "9557:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "9549:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:181:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "9617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9616:9:0"
									},
									"scope": 1598,
									"src": "9387:5071:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "14734:1084:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 711,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "14753:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14760:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "14753:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 713,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "14769:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "14753:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706f6f6c206964",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14777:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															},
															"value": "invalid pool id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															}
														],
														"id": 710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14745:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "14745:50:0"
											},
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "14819:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "14806:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														},
														"typeName": {
															"id": 719,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 718,
																"name": "Pool",
																"nameLocations": [
																	"14806:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 48,
																"src": "14806:4:0"
															},
															"referencedDeclaration": 48,
															"src": "14806:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"baseExpression": {
														"id": 721,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "14826:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 723,
													"indexExpression": {
														"id": 722,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "14833:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14826:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14806:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "14859:14:0",
															"subExpression": {
																"expression": {
																	"id": 726,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "14860:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14865:8:0",
																"memberName": "isLocked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "14860:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c206973206c6f636b6564",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14875:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															},
															"value": "pool is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14851:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "14851:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "14911:13:0",
															"subExpression": {
																"expression": {
																	"id": 733,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "14912:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14917:7:0",
																"memberName": "isEmpty",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 47,
																"src": "14912:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c20697320656d707479",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68aa5b02fb88c8bd2c360b9c57f02fd2b702e79c36303dd10ad44b406a29a2ba",
																"typeString": "literal_string \"pool is empty\""
															},
															"value": "pool is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68aa5b02fb88c8bd2c360b9c57f02fd2b702e79c36303dd10ad44b406a29a2ba",
																"typeString": "literal_string \"pool is empty\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14903:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14903:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "14903:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 740,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "14961:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14966:9:0",
																"memberName": "poolOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 41,
																"src": "14961:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 742,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14979:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14983:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14979:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14961:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792074686520706f6f6c206f776e65722063616e20656d70747920706f6f6c",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14991:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_947c76f6392d76410dab8798c2dde843241e22e0a8ca31ff84ccd18c4d932c12",
																"typeString": "literal_string \"only the pool owner can empty pool\""
															},
															"value": "only the pool owner can empty pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_947c76f6392d76410dab8798c2dde843241e22e0a8ca31ff84ccd18c4d932c12",
																"typeString": "literal_string \"only the pool owner can empty pool\""
															}
														],
														"id": 739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14953:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "14953:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 751,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "15068:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 748,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "15039:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15063:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "15039:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint64_$dyn_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_array$_t_uint64_$dyn_storage_ptr_$",
															"typeString": "function (uint64[] storage pointer,uint64)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15039:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "15039:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 755,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "15094:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15098:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "15094:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 757,
																"name": "contractTransactionTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "15107:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15094:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f7765722074617820737065636966696564",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15131:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															},
															"value": "lower tax specified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15086:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "15086:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 765,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15187:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15191:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "15187:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 762,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "15164:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15178:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "15164:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15164:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "15164:33:0"
											},
											{
												"condition": {
													"expression": {
														"id": 769,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "15245:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool storage pointer"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15250:32:0",
													"memberName": "isAsset1NativeBlockchainCurrency",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 8,
													"src": "15245:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "15364:86:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 787,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "15408:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15412:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "15408:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 789,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "15420:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																				"typeString": "struct SimplePools.Pool storage pointer"
																			}
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15425:12:0",
																		"memberName": "asset1Amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "15420:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 783,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 720,
																					"src": "15386:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																						"typeString": "struct SimplePools.Pool storage pointer"
																					}
																				},
																				"id": 784,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15391:6:0",
																				"memberName": "asset1",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 11,
																				"src": "15386:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 782,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "15379:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1882_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15379:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1882",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15399:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1831,
																	"src": "15379:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15379:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "15379:59:0"
														}
													]
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "15241:209:0",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "15284:74:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 777,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "15328:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																				"typeString": "struct SimplePools.Pool storage pointer"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15333:12:0",
																		"memberName": "asset1Amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "15328:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 773,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "15307:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15311:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "15307:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15299:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15299:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15299:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15319:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "15299:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15299:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 780,
															"nodeType": "ExpressionStatement",
															"src": "15299:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 795,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "15460:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15465:12:0",
														"memberName": "asset1Amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "15460:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15480:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15460:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "15460:21:0"
											},
											{
												"condition": {
													"expression": {
														"id": 801,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "15498:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool storage pointer"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15503:32:0",
													"memberName": "isAsset2NativeBlockchainCurrency",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 14,
													"src": "15498:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "15617:86:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 819,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "15661:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15665:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "15661:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 821,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "15673:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																				"typeString": "struct SimplePools.Pool storage pointer"
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15678:12:0",
																		"memberName": "asset2Amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 23,
																		"src": "15673:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 815,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 720,
																					"src": "15639:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																						"typeString": "struct SimplePools.Pool storage pointer"
																					}
																				},
																				"id": 816,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15644:6:0",
																				"memberName": "asset2",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 17,
																				"src": "15639:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 814,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "15632:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1882_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15632:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1882",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15652:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1831,
																	"src": "15632:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15632:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 824,
															"nodeType": "ExpressionStatement",
															"src": "15632:59:0"
														}
													]
												},
												"id": 826,
												"nodeType": "IfStatement",
												"src": "15494:209:0",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "15537:74:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 809,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 720,
																			"src": "15581:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																				"typeString": "struct SimplePools.Pool storage pointer"
																			}
																		},
																		"id": 810,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15586:12:0",
																		"memberName": "asset2Amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 23,
																		"src": "15581:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 805,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "15560:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15564:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "15560:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15552:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 803,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15552:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15552:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15572:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "15552:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15552:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 812,
															"nodeType": "ExpressionStatement",
															"src": "15552:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 827,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "15713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15718:12:0",
														"memberName": "asset2Amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "15713:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15733:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15713:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "15713:21:0"
											},
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 833,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "15745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15750:26:0",
														"memberName": "asset2InitiallyAskedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "15745:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15745:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "15745:35:0"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 839,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "15791:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15796:7:0",
														"memberName": "isEmpty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "15791:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15806:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15791:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "15791:19:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "14466:186:0",
										"text": " Transfers all assets (asset1 and asset2) from a pool to\n the pool owner. Only callable by the pool owner.\n @param poolId the poolId of the pool"
									},
									"functionSelector": "0c95be25",
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllAssetsFromPool",
									"nameLocation": "14667:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "14709:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "14702:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 706,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14702:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14687:29:0"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14734:0:0"
									},
									"scope": 1598,
									"src": "14658:1160:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "16104:494:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 853,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "16123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16130:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16123:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 855,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "16139:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "16123:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706f6f6c206964",
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16147:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															},
															"value": "invalid pool id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27c50272c742b14fa9548b11670b2359d4f802f51675bf0f5b902668827e2f18",
																"typeString": "literal_string \"invalid pool id\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16115:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "16115:50:0"
											},
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "16189:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "16176:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														},
														"typeName": {
															"id": 861,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 860,
																"name": "Pool",
																"nameLocations": [
																	"16176:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 48,
																"src": "16176:4:0"
															},
															"referencedDeclaration": 48,
															"src": "16176:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"baseExpression": {
														"id": 863,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "16196:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 865,
													"indexExpression": {
														"id": 864,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "16203:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16196:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16176:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16229:14:0",
															"subExpression": {
																"expression": {
																	"id": 868,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "16230:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16235:8:0",
																"memberName": "isLocked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "16230:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c20697320616c7265616479206c6f636b6564",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16245:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb5567f76e16c1321ab5e4fcc2047acc74e59bee7f00fb51779ec9d411095025",
																"typeString": "literal_string \"pool is already locked\""
															},
															"value": "pool is already locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb5567f76e16c1321ab5e4fcc2047acc74e59bee7f00fb51779ec9d411095025",
																"typeString": "literal_string \"pool is already locked\""
															}
														],
														"id": 867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16221:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "16221:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 875,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 862,
																	"src": "16289:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16294:9:0",
																"memberName": "poolOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 41,
																"src": "16289:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 877,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "16307:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16311:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "16307:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16289:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792074686520706f6f6c206f776e65722063616e206c6f636b206120706f6f6c",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16319:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_374fbb6225c1fb977525c5887890310c392470f46b82f94af904e1201437ccbc",
																"typeString": "literal_string \"only the pool owner can lock a pool\""
															},
															"value": "only the pool owner can lock a pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_374fbb6225c1fb977525c5887890310c392470f46b82f94af904e1201437ccbc",
																"typeString": "literal_string \"only the pool owner can lock a pool\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16281:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16281:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "16281:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "16397:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 883,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "16368:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16392:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "16368:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint64_$dyn_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_array$_t_uint64_$dyn_storage_ptr_$",
															"typeString": "function (uint64[] storage pointer,uint64)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16368:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "16368:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 890,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "16423:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16427:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "16423:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 892,
																"name": "contractTransactionTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "16436:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16423:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f7765722074617820737065636966696564",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16460:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															},
															"value": "lower tax specified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16415:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "16415:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 900,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16516:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16520:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "16516:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 897,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "16493:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16507:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "16493:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16493:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "16493:33:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 904,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "16570:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16575:8:0",
														"memberName": "isLocked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "16570:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16586:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16570:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "16570:20:0"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "15826:208:0",
										"text": " Locks a pool. Only callable by the pool owner.\n Locked pools cannot be unlocked and the assets cannot be taken from the pool owner.\n @param poolId the id of the pool"
									},
									"functionSelector": "b0b15560",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockPool",
									"nameLocation": "16049:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "16079:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "16072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 848,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16057:29:0"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16104:0:0"
									},
									"scope": 1598,
									"src": "16040:558:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "17016:508:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 920,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "17035:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 921,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "17044:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17051:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "17044:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17035:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706f6f6c4964",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17059:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce92d2de59aef19c5ade25cf4aadd65a734ce790fb730708b4f91dce65d82e4e",
																"typeString": "literal_string \"invalid poolId\""
															},
															"value": "invalid poolId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce92d2de59aef19c5ade25cf4aadd65a734ce790fb730708b4f91dce65d82e4e",
																"typeString": "literal_string \"invalid poolId\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17027:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "17027:49:0"
											},
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "17100:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 980,
														"src": "17087:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														},
														"typeName": {
															"id": 928,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 927,
																"name": "Pool",
																"nameLocations": [
																	"17087:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 48,
																"src": "17087:4:0"
															},
															"referencedDeclaration": 48,
															"src": "17087:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"baseExpression": {
														"id": 930,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "17107:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 932,
													"indexExpression": {
														"id": 931,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "17114:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17107:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17087:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17140:14:0",
															"subExpression": {
																"expression": {
																	"id": 935,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "17141:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17146:8:0",
																"memberName": "isLocked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "17141:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c206973206c6f636b6564",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17156:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															},
															"value": "pool is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															}
														],
														"id": 934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17132:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "17132:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 942,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "17192:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17197:9:0",
																"memberName": "poolOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 41,
																"src": "17192:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 944,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "17210:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17214:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "17210:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17192:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206f776e657273686970",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17222:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3f285a4c2ae0808dbbb4a2ae357cf08c5f1cb86e1c0e811b2793eddc9314286",
																"typeString": "literal_string \"only the pool owner can change ownership\""
															},
															"value": "only the pool owner can change ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3f285a4c2ae0808dbbb4a2ae357cf08c5f1cb86e1c0e811b2793eddc9314286",
																"typeString": "literal_string \"only the pool owner can change ownership\""
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17184:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "17184:81:0"
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 950,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "17276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "17281:9:0",
														"memberName": "poolOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "17276:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 955,
																"name": "newPoolOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "17301:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17293:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 953,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17293:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17293:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "17276:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "17276:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "17354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 959,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "17325:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17349:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "17325:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint64_$dyn_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_array$_t_uint64_$dyn_storage_ptr_$",
															"typeString": "function (uint64[] storage pointer,uint64)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17325:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "17325:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 966,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "17380:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17384:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "17380:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 968,
																"name": "contractTransactionTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "17393:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17380:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f7765722074617820737065636966696564",
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17417:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															},
															"value": "lower tax specified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17372:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "17372:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 976,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "17473:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17477:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "17473:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 973,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "17450:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17464:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "17450:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17450:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "17450:33:0"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "16606:301:0",
										"text": " Changes the ownership of a pool. Only callable by the pool owner.\n If the owner gets compromised and is fast enough, they can transfer the ownership of the pool.\n \n @param poolId the id of the pool\n @param newPoolOwner the address of the new pool owner"
									},
									"functionSelector": "81d802ba",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "16922:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "16955:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "16948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 913,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16948:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "newPoolOwner",
												"nameLocation": "16985:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "16977:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16933:65:0"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17016:0:0"
									},
									"scope": 1598,
									"src": "16913:611:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "17935:791:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 990,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "17954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 991,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "17963:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17970:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "17963:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17954:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706f6f6c4964",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17978:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce92d2de59aef19c5ade25cf4aadd65a734ce790fb730708b4f91dce65d82e4e",
																"typeString": "literal_string \"invalid poolId\""
															},
															"value": "invalid poolId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce92d2de59aef19c5ade25cf4aadd65a734ce790fb730708b4f91dce65d82e4e",
																"typeString": "literal_string \"invalid poolId\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17946:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "17946:49:0"
											},
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "18019:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "18006:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														},
														"typeName": {
															"id": 998,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 997,
																"name": "Pool",
																"nameLocations": [
																	"18006:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 48,
																"src": "18006:4:0"
															},
															"referencedDeclaration": 48,
															"src": "18006:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"baseExpression": {
														"id": 1000,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "18026:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 1002,
													"indexExpression": {
														"id": 1001,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "18033:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18026:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18006:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "18059:14:0",
															"subExpression": {
																"expression": {
																	"id": 1005,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "18060:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18065:8:0",
																"memberName": "isLocked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "18060:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c206973206c6f636b6564",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18075:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															},
															"value": "pool is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18051:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "18051:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1012,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "18111:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18116:9:0",
																"memberName": "poolOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 41,
																"src": "18111:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1014,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18129:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18133:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "18129:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18111:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792074686520706f6f6c206f776e65722063616e206368616e6765206e65774d617842757941737365743150657263656e745065725472616e73616374696f6e",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18159:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_647208e69e64d1d619f82e3795c73fc92741a840ebdd0026cad49d28e39f38b9",
																"typeString": "literal_string \"only the pool owner can change newMaxBuyAsset1PercentPerTransaction\""
															},
															"value": "only the pool owner can change newMaxBuyAsset1PercentPerTransaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_647208e69e64d1d619f82e3795c73fc92741a840ebdd0026cad49d28e39f38b9",
																"typeString": "literal_string \"only the pool owner can change newMaxBuyAsset1PercentPerTransaction\""
															}
														],
														"id": 1011,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18103:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "18103:126:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1021,
																	"name": "newMaxBuyAsset1PercentPerTransaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "18248:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18288:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "18248:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1024,
																	"name": "newMaxBuyAsset1PercentPerTransaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "18316:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18355:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18316:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "18248:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206d61782070657263656e7420706572207472616e73616374696f6e",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18380:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c20372ce88252c0887ad0f08e36403b0c9f945c5adaab8ae173d3e653547f8b",
																"typeString": "literal_string \"invalid max percent per transaction\""
															},
															"value": "invalid max percent per transaction"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c20372ce88252c0887ad0f08e36403b0c9f945c5adaab8ae173d3e653547f8b",
																"typeString": "literal_string \"invalid max percent per transaction\""
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18240:178:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "18240:178:0"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1031,
																"name": "_pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "18429:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																	"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																}
															},
															"id": 1033,
															"indexExpression": {
																"id": 1032,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "18436:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18429:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage",
																"typeString": "struct SimplePools.Pool storage ref"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18444:33:0",
														"memberName": "maxBuyAsset1PercentPerTransaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 29,
														"src": "18429:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1035,
														"name": "newMaxBuyAsset1PercentPerTransaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "18480:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "18429:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "18429:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "18556:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 1038,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "18527:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18551:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "18527:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint64_$dyn_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_array$_t_uint64_$dyn_storage_ptr_$",
															"typeString": "function (uint64[] storage pointer,uint64)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18527:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "18527:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1045,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "18582:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18586:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "18582:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1047,
																"name": "contractTransactionTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "18595:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18582:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f7765722074617820737065636966696564",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18619:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															},
															"value": "lower tax specified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18574:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18574:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "18574:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1055,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18675:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18679:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "18675:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1052,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "18652:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18666:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "18652:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18652:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "18652:33:0"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "17532:240:0",
										"text": " Changes maxBuyAsset1PercentPerTransaction. Only callable by the pool owner.\n \n @param poolId the id of the pool\n @param newMaxBuyAsset1PercentPerTransaction the new maxBuyAsset1PercentPerTransaction"
									},
									"functionSelector": "f6fce7a9",
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changePoolMaxBuyAsset1PercentPerTransaction",
									"nameLocation": "17787:43:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "17852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "17845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 983,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "17845:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "newMaxBuyAsset1PercentPerTransaction",
												"nameLocation": "17880:36:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "17874:42:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 985,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17874:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17830:87:0"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17935:0:0"
									},
									"scope": 1598,
									"src": "17778:948:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "19045:616:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "19064:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1070,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "19073:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19080:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19073:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19064:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420706f6f6c4964",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19088:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce92d2de59aef19c5ade25cf4aadd65a734ce790fb730708b4f91dce65d82e4e",
																"typeString": "literal_string \"invalid poolId\""
															},
															"value": "invalid poolId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce92d2de59aef19c5ade25cf4aadd65a734ce790fb730708b4f91dce65d82e4e",
																"typeString": "literal_string \"invalid poolId\""
															}
														],
														"id": 1068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19056:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "19056:49:0"
											},
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "19129:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "19116:17:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														},
														"typeName": {
															"id": 1077,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1076,
																"name": "Pool",
																"nameLocations": [
																	"19116:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 48,
																"src": "19116:4:0"
															},
															"referencedDeclaration": 48,
															"src": "19116:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"baseExpression": {
														"id": 1079,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "19136:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 1081,
													"indexExpression": {
														"id": 1080,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "19143:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19136:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19116:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19169:14:0",
															"subExpression": {
																"expression": {
																	"id": 1084,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "19170:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19175:8:0",
																"memberName": "isLocked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "19170:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c206973206c6f636b6564",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19185:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															},
															"value": "pool is locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a9fb214f42b52903ba677b9b474b4050734d483b1a2a104ffbe6d48d715d68c",
																"typeString": "literal_string \"pool is locked\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19161:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "19161:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1091,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "19221:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19226:9:0",
																"memberName": "poolOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 41,
																"src": "19221:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1093,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19239:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19243:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "19239:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19221:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792074686520706f6f6c206f776e65722063616e206368616e67652074686520636f6e7374616e742070726f64756374",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19251:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1918d2a9bf93c7b8a482aaeea6e97ee9e967442c96037b41861e05834ed1e53",
																"typeString": "literal_string \"only the pool owner can change the constant product\""
															},
															"value": "only the pool owner can change the constant product"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1918d2a9bf93c7b8a482aaeea6e97ee9e967442c96037b41861e05834ed1e53",
																"typeString": "literal_string \"only the pool owner can change the constant product\""
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19213:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "19213:92:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1100,
																"name": "newConstantProduct",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "19324:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19345:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19324:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420636f6e7374616e742070726f6475637420286f6e6c7920706f736974697665206e756d6265727329",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19348:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c52bd390ebe4a8e1b3e5a2bf6ff36b0d4144170d736913a6d7d3c3b45d29194",
																"typeString": "literal_string \"invalid constant product (only positive numbers)\""
															},
															"value": "invalid constant product (only positive numbers)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c52bd390ebe4a8e1b3e5a2bf6ff36b0d4144170d736913a6d7d3c3b45d29194",
																"typeString": "literal_string \"invalid constant product (only positive numbers)\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19316:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "19316:83:0"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1106,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "19410:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																"typeString": "struct SimplePools.Pool storage pointer"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "19415:15:0",
														"memberName": "constantProduct",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "19410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1109,
														"name": "newConstantProduct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "19433:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19410:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "19410:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1115,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "19491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 1112,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "19462:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19486:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "19462:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint64_$dyn_storage_ptr_$_t_uint64_$returns$__$bound_to$_t_array$_t_uint64_$dyn_storage_ptr_$",
															"typeString": "function (uint64[] storage pointer,uint64)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19462:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "19462:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1119,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19517:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19521:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "19517:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1121,
																"name": "contractTransactionTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "19530:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19517:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f7765722074617820737065636966696564",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19554:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															},
															"value": "lower tax specified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2381f4a0656913d8aea802087ed32213c5a3cc408ea3c11c7540d95c206524f4",
																"typeString": "literal_string \"lower tax specified\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19509:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "19509:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19610:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19614:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "19610:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1126,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "19587:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19601:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "19587:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19587:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "19587:33:0"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "18734:187:0",
										"text": " Changes a pool constant product. Only callable by the pool owner.\n \n @param poolId the poolId\n @param newConstantProduct the new constant product"
									},
									"functionSelector": "fa5a67ed",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeContantProduct",
									"nameLocation": "18936:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "18978:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "18971:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1062,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18971:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "newConstantProduct",
												"nameLocation": "19008:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "19000:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18956:71:0"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19045:0:0"
									},
									"scope": 1598,
									"src": "18927:734:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "19896:49:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1142,
															"name": "_pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "19914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																"typeString": "struct SimplePools.Pool storage ref[] storage ref"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1143,
															"name": "poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "19921:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19914:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage",
															"typeString": "struct SimplePools.Pool storage ref"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19929:8:0",
													"memberName": "isLocked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 44,
													"src": "19914:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1146,
												"nodeType": "Return",
												"src": "19907:30:0"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "19669:155:0",
										"text": " Returns whether a pool is locked.\n \n @param poolId the id of the pool\n @return true if the pool is locked"
									},
									"functionSelector": "1e67d542",
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolLocked",
									"nameLocation": "19839:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "19859:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "19852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1136,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "19852:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19851:15:0"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "19890:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19889:6:0"
									},
									"scope": 1598,
									"src": "19830:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "20080:39:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1154,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "20098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20105:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "20098:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1156,
												"nodeType": "Return",
												"src": "20091:20:0"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "19953:67:0",
										"text": " @return number of pools in the smart contract."
									},
									"functionSelector": "b4ac6860",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsCount",
									"nameLocation": "20035:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20048:2:0"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "20074:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20073:6:0"
									},
									"scope": 1598,
									"src": "20026:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "20578:330:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1171,
																	"name": "endPoolIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "20596:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1172,
																	"name": "startPoolIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "20611:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "20596:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1174,
																	"name": "endPoolIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "20629:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1175,
																		"name": "_pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "20645:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																			"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20652:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "20645:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20629:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "20596:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696e6465786573",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20660:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b9294f4f2f22caa35aa0359076419e04e5086e0e8db7e97e6624f93b159fe17",
																"typeString": "literal_string \"invalid indexes\""
															},
															"value": "invalid indexes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b9294f4f2f22caa35aa0359076419e04e5086e0e8db7e97e6624f93b159fe17",
																"typeString": "literal_string \"invalid indexes\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20588:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "20588:90:0"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "pools",
														"nameLocation": "20702:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "20688:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SimplePools.Pool[]"
														},
														"typeName": {
															"baseType": {
																"id": 1184,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1183,
																	"name": "Pool",
																	"nameLocations": [
																		"20688:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 48,
																	"src": "20688:4:0"
																},
																"referencedDeclaration": 48,
																"src": "20688:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																	"typeString": "struct SimplePools.Pool"
																}
															},
															"id": 1185,
															"nodeType": "ArrayTypeName",
															"src": "20688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
																"typeString": "struct SimplePools.Pool[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1195,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "endPoolIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "20721:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1192,
																"name": "startPoolIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "20736:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "20721:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "20710:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SimplePools.Pool memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1188,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1187,
																	"name": "Pool",
																	"nameLocations": [
																		"20714:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 48,
																	"src": "20714:4:0"
																},
																"referencedDeclaration": 48,
																"src": "20714:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																	"typeString": "struct SimplePools.Pool"
																}
															},
															"id": 1189,
															"nodeType": "ArrayTypeName",
															"src": "20714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
																"typeString": "struct SimplePools.Pool[]"
															}
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20710:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimplePools.Pool memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20688:63:0"
											},
											{
												"body": {
													"id": 1216,
													"nodeType": "Block",
													"src": "20816:63:0",
													"statements": [
														{
															"expression": {
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1206,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "20831:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct SimplePools.Pool memory[] memory"
																		}
																	},
																	"id": 1210,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1207,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "20837:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1208,
																			"name": "startPoolIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1161,
																			"src": "20841:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"src": "20837:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20831:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_memory_ptr",
																		"typeString": "struct SimplePools.Pool memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1211,
																		"name": "_pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "20859:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																			"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																		}
																	},
																	"id": 1213,
																	"indexExpression": {
																		"id": 1212,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "20866:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20859:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage",
																		"typeString": "struct SimplePools.Pool storage ref"
																	}
																},
																"src": "20831:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_memory_ptr",
																	"typeString": "struct SimplePools.Pool memory"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "20831:37:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "20793:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1201,
														"name": "endPoolIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "20797:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "20793:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"initializationExpression": {
													"assignments": [
														1197
													],
													"declarations": [
														{
															"constant": false,
															"id": 1197,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20773:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1217,
															"src": "20766:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1196,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "20766:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1199,
													"initialValue": {
														"id": 1198,
														"name": "startPoolIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "20777:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20766:25:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "20811:3:0",
														"subExpression": {
															"id": 1203,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "20813:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1205,
													"nodeType": "ExpressionStatement",
													"src": "20811:3:0"
												},
												"nodeType": "ForStatement",
												"src": "20761:118:0"
											},
											{
												"expression": {
													"id": 1218,
													"name": "pools",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1186,
													"src": "20895:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimplePools.Pool memory[] memory"
													}
												},
												"functionReturnParameters": 1169,
												"id": 1219,
												"nodeType": "Return",
												"src": "20888:12:0"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "20127:311:0",
										"text": " Gets the states of the pools in a given range [startPoolIndex, ..., endPoolIndex).\n Start index is included and end index is not included.\n \n @param startPoolIndex the start index\n @param endPoolIndex the end index\n @return list of requested pools"
									},
									"functionSelector": "f8c81b90",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPools",
									"nameLocation": "20453:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "startPoolIndex",
												"nameLocation": "20483:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "20476:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1160,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "20476:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "endPoolIndex",
												"nameLocation": "20520:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "20513:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1162,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "20513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20461:78:0"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "20563:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SimplePools.Pool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1166,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1165,
															"name": "Pool",
															"nameLocations": [
																"20563:4:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 48,
															"src": "20563:4:0"
														},
														"referencedDeclaration": 48,
														"src": "20563:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														}
													},
													"id": 1167,
													"nodeType": "ArrayTypeName",
													"src": "20563:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
														"typeString": "struct SimplePools.Pool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20562:15:0"
									},
									"scope": 1598,
									"src": "20444:464:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "21217:300:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "startPoolIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "21235:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1233,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "21252:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21259:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "21252:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21235:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696e646578",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21267:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec10de46689465ba18c6864e832857be046b11c97f1f0cc21612a4362d6a98c4",
																"typeString": "literal_string \"invalid index\""
															},
															"value": "invalid index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec10de46689465ba18c6864e832857be046b11c97f1f0cc21612a4362d6a98c4",
																"typeString": "literal_string \"invalid index\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21227:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "21227:56:0"
											},
											{
												"assignments": [
													1243
												],
												"declarations": [
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "pools",
														"nameLocation": "21307:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "21293:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SimplePools.Pool[]"
														},
														"typeName": {
															"baseType": {
																"id": 1241,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1240,
																	"name": "Pool",
																	"nameLocations": [
																		"21293:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 48,
																	"src": "21293:4:0"
																},
																"referencedDeclaration": 48,
																"src": "21293:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																	"typeString": "struct SimplePools.Pool"
																}
															},
															"id": 1242,
															"nodeType": "ArrayTypeName",
															"src": "21293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
																"typeString": "struct SimplePools.Pool[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1248,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "21326:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21333:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "21326:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1250,
																"name": "startPoolIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "21342:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "21326:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "21315:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SimplePools.Pool memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1245,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1244,
																	"name": "Pool",
																	"nameLocations": [
																		"21319:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 48,
																	"src": "21319:4:0"
																},
																"referencedDeclaration": 48,
																"src": "21319:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																	"typeString": "struct SimplePools.Pool"
																}
															},
															"id": 1246,
															"nodeType": "ArrayTypeName",
															"src": "21319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
																"typeString": "struct SimplePools.Pool[]"
															}
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21315:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimplePools.Pool memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21293:64:0"
											},
											{
												"body": {
													"id": 1275,
													"nodeType": "Block",
													"src": "21423:64:0",
													"statements": [
														{
															"expression": {
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1265,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1243,
																		"src": "21438:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct SimplePools.Pool memory[] memory"
																		}
																	},
																	"id": 1269,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1266,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "21444:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1267,
																			"name": "startPoolIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "21448:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"src": "21444:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21438:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_memory_ptr",
																		"typeString": "struct SimplePools.Pool memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1270,
																		"name": "_pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "21466:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																			"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																		}
																	},
																	"id": 1272,
																	"indexExpression": {
																		"id": 1271,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "21473:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21466:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage",
																		"typeString": "struct SimplePools.Pool storage ref"
																	}
																},
																"src": "21438:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_memory_ptr",
																	"typeString": "struct SimplePools.Pool memory"
																}
															},
															"id": 1274,
															"nodeType": "ExpressionStatement",
															"src": "21438:37:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1258,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "21399:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1259,
															"name": "_pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "21403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																"typeString": "struct SimplePools.Pool storage ref[] storage ref"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21410:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21403:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21399:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"initializationExpression": {
													"assignments": [
														1255
													],
													"declarations": [
														{
															"constant": false,
															"id": 1255,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21379:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1276,
															"src": "21372:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1254,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "21372:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1257,
													"initialValue": {
														"id": 1256,
														"name": "startPoolIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "21383:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21372:25:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "21418:3:0",
														"subExpression": {
															"id": 1262,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "21420:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1264,
													"nodeType": "ExpressionStatement",
													"src": "21418:3:0"
												},
												"nodeType": "ForStatement",
												"src": "21367:120:0"
											},
											{
												"expression": {
													"id": 1277,
													"name": "pools",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1243,
													"src": "21504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimplePools.Pool memory[] memory"
													}
												},
												"functionReturnParameters": 1230,
												"id": 1278,
												"nodeType": "Return",
												"src": "21497:12:0"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "20920:194:0",
										"text": " Gets the states of the pools from a given starting index till the end.\n \n @param startPoolIndex the start index\n @return list of requested pools"
									},
									"functionSelector": "0376e49c",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsFrom",
									"nameLocation": "21129:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "startPoolIndex",
												"nameLocation": "21163:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "21156:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1223,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "21156:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21141:37:0"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "21202:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SimplePools.Pool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1227,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1226,
															"name": "Pool",
															"nameLocations": [
																"21202:4:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 48,
															"src": "21202:4:0"
														},
														"referencedDeclaration": 48,
														"src": "21202:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														}
													},
													"id": 1228,
													"nodeType": "ArrayTypeName",
													"src": "21202:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
														"typeString": "struct SimplePools.Pool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21201:15:0"
									},
									"scope": 1598,
									"src": "21120:397:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "21822:239:0",
										"statements": [
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "pools",
														"nameLocation": "21847:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1334,
														"src": "21833:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SimplePools.Pool[]"
														},
														"typeName": {
															"baseType": {
																"id": 1293,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1292,
																	"name": "Pool",
																	"nameLocations": [
																		"21833:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 48,
																	"src": "21833:4:0"
																},
																"referencedDeclaration": 48,
																"src": "21833:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																	"typeString": "struct SimplePools.Pool"
																}
															},
															"id": 1294,
															"nodeType": "ArrayTypeName",
															"src": "21833:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
																"typeString": "struct SimplePools.Pool[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1300,
																"name": "indexes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "21866:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
																	"typeString": "uint64[] memory"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "21874:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "21866:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "21855:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SimplePools.Pool memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1297,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1296,
																	"name": "Pool",
																	"nameLocations": [
																		"21859:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 48,
																	"src": "21859:4:0"
																},
																"referencedDeclaration": 48,
																"src": "21859:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																	"typeString": "struct SimplePools.Pool"
																}
															},
															"id": 1298,
															"nodeType": "ArrayTypeName",
															"src": "21859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
																"typeString": "struct SimplePools.Pool[]"
															}
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21855:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimplePools.Pool memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21833:48:0"
											},
											{
												"body": {
													"id": 1330,
													"nodeType": "Block",
													"src": "21936:95:0",
													"statements": [
														{
															"assignments": [
																1317
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1317,
																	"mutability": "mutable",
																	"name": "pool",
																	"nameLocation": "21964:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1330,
																	"src": "21951:17:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool"
																	},
																	"typeName": {
																		"id": 1316,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1315,
																			"name": "Pool",
																			"nameLocations": [
																				"21951:4:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 48,
																			"src": "21951:4:0"
																		},
																		"referencedDeclaration": 48,
																		"src": "21951:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																			"typeString": "struct SimplePools.Pool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1323,
															"initialValue": {
																"baseExpression": {
																	"id": 1318,
																	"name": "_pools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "21971:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
																		"typeString": "struct SimplePools.Pool storage ref[] storage ref"
																	}
																},
																"id": 1322,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1319,
																		"name": "indexes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "21978:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
																			"typeString": "uint64[] memory"
																		}
																	},
																	"id": 1321,
																	"indexExpression": {
																		"id": 1320,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "21986:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21978:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21971:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_storage",
																	"typeString": "struct SimplePools.Pool storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21951:38:0"
														},
														{
															"expression": {
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1324,
																		"name": "pools",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "22004:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct SimplePools.Pool memory[] memory"
																		}
																	},
																	"id": 1326,
																	"indexExpression": {
																		"id": 1325,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "22010:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "22004:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_memory_ptr",
																		"typeString": "struct SimplePools.Pool memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1327,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "22015:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
																		"typeString": "struct SimplePools.Pool storage pointer"
																	}
																},
																"src": "22004:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$48_memory_ptr",
																	"typeString": "struct SimplePools.Pool memory"
																}
															},
															"id": 1329,
															"nodeType": "ExpressionStatement",
															"src": "22004:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1308,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "21911:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1309,
															"name": "indexes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "21915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
																"typeString": "uint64[] memory"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21923:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21915:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21911:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1331,
												"initializationExpression": {
													"assignments": [
														1305
													],
													"declarations": [
														{
															"constant": false,
															"id": 1305,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21904:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1331,
															"src": "21897:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1304,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "21897:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1307,
													"initialValue": {
														"hexValue": "30",
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21908:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21897:12:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "21931:3:0",
														"subExpression": {
															"id": 1312,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "21933:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1314,
													"nodeType": "ExpressionStatement",
													"src": "21931:3:0"
												},
												"nodeType": "ForStatement",
												"src": "21892:139:0"
											},
											{
												"expression": {
													"id": 1332,
													"name": "pools",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1295,
													"src": "22048:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimplePools.Pool memory[] memory"
													}
												},
												"functionReturnParameters": 1290,
												"id": 1333,
												"nodeType": "Return",
												"src": "22041:12:0"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "21525:196:0",
										"text": " Returns the states of the pools with the requested indexes.\n \n @param indexes the list of requested pool indexes\n \n @return list of requested pools"
									},
									"functionSelector": "22668de1",
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPools",
									"nameLocation": "21736:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "indexes",
												"nameLocation": "21775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "21759:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1282,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "21759:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1283,
													"nodeType": "ArrayTypeName",
													"src": "21759:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21744:39:0"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "21807:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Pool_$48_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SimplePools.Pool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1286,
															"name": "Pool",
															"nameLocations": [
																"21807:4:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 48,
															"src": "21807:4:0"
														},
														"referencedDeclaration": 48,
														"src": "21807:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
															"typeString": "struct SimplePools.Pool"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "21807:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage_ptr",
														"typeString": "struct SimplePools.Pool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21806:15:0"
									},
									"scope": 1598,
									"src": "21727:334:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "22304:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1344,
														"name": "_pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "22322:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Pool_$48_storage_$dyn_storage",
															"typeString": "struct SimplePools.Pool storage ref[] storage ref"
														}
													},
													"id": 1346,
													"indexExpression": {
														"id": 1345,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "22329:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22322:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage",
														"typeString": "struct SimplePools.Pool storage ref"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1347,
												"nodeType": "Return",
												"src": "22315:21:0"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "22069:161:0",
										"text": " Returns the state of a single pool.\n \n @param poolId the id of the requested pool\n \n @return the requested pool "
									},
									"functionSelector": "919adab8",
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "22245:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "22260:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "22253:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1337,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "22253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22252:15:0"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "22291:11:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Pool_$48_memory_ptr",
													"typeString": "struct SimplePools.Pool"
												},
												"typeName": {
													"id": 1341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1340,
														"name": "Pool",
														"nameLocations": [
															"22291:4:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 48,
														"src": "22291:4:0"
													},
													"referencedDeclaration": 48,
													"src": "22291:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$48_storage_ptr",
														"typeString": "struct SimplePools.Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22290:13:0"
									},
									"scope": 1598,
									"src": "22236:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "22514:56:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1355,
														"name": "_allTransactionsPoolIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "22532:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
															"typeString": "uint64[] storage ref"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "22556:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "22532:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1357,
												"nodeType": "Return",
												"src": "22525:37:0"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "22352:92:0",
										"text": " Returns the count of all transactions executed with the smart contract."
									},
									"functionSelector": "578cb8f9",
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTransactionsCount",
									"nameLocation": "22459:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22479:2:0"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "22505:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22504:9:0"
									},
									"scope": 1598,
									"src": "22450:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "23164:465:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1371,
																	"name": "endTransactionIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "23183:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1372,
																	"name": "startTransactionIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "23205:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "23183:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1374,
																	"name": "endTransactionIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "23248:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1375,
																		"name": "_allTransactionsPoolIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "23271:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																			"typeString": "uint64[] storage ref"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23295:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "23271:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23248:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "23183:118:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696e6465786573",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23303:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b9294f4f2f22caa35aa0359076419e04e5086e0e8db7e97e6624f93b159fe17",
																"typeString": "literal_string \"invalid indexes\""
															},
															"value": "invalid indexes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b9294f4f2f22caa35aa0359076419e04e5086e0e8db7e97e6624f93b159fe17",
																"typeString": "literal_string \"invalid indexes\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23175:146:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "23175:146:0"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "poolIndexes",
														"nameLocation": "23348:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "23332:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
															"typeString": "uint64[]"
														},
														"typeName": {
															"baseType": {
																"id": 1384,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "23332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1385,
															"nodeType": "ArrayTypeName",
															"src": "23332:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
																"typeString": "uint64[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1394,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1390,
																"name": "endTransactionIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "23375:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1391,
																"name": "startTransactionIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "23397:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "23375:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "23362:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint64_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint64[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1387,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "23366:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1388,
															"nodeType": "ArrayTypeName",
															"src": "23366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
																"typeString": "uint64[]"
															}
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23362:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
														"typeString": "uint64[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23332:87:0"
											},
											{
												"body": {
													"id": 1415,
													"nodeType": "Block",
													"src": "23499:94:0",
													"statements": [
														{
															"expression": {
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1405,
																		"name": "poolIndexes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "23514:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
																			"typeString": "uint64[] memory"
																		}
																	},
																	"id": 1409,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1406,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1396,
																			"src": "23526:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1407,
																			"name": "startTransactionIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "23530:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"src": "23526:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23514:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1410,
																		"name": "_allTransactionsPoolIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "23555:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																			"typeString": "uint64[] storage ref"
																		}
																	},
																	"id": 1412,
																	"indexExpression": {
																		"id": 1411,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "23579:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23555:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "23514:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1414,
															"nodeType": "ExpressionStatement",
															"src": "23514:67:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1399,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "23469:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1400,
														"name": "endTransactionIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "23473:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "23469:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1416,
												"initializationExpression": {
													"assignments": [
														1396
													],
													"declarations": [
														{
															"constant": false,
															"id": 1396,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "23442:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1416,
															"src": "23435:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1395,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "23435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1398,
													"initialValue": {
														"id": 1397,
														"name": "startTransactionIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "23446:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "23435:32:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "23494:3:0",
														"subExpression": {
															"id": 1402,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "23496:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1404,
													"nodeType": "ExpressionStatement",
													"src": "23494:3:0"
												},
												"nodeType": "ForStatement",
												"src": "23430:163:0"
											},
											{
												"expression": {
													"id": 1417,
													"name": "poolIndexes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1386,
													"src": "23610:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
														"typeString": "uint64[] memory"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1418,
												"nodeType": "Return",
												"src": "23603:18:0"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "22578:398:0",
										"text": " Returns the list of pool indexes of the pools participating in\n the list of requested transactions in range [startTransactionIndex, ..., endTransactionIndex).\n \n @param startTransactionIndex the index of the starting transaction\n @param endTransactionIndex the index of the last transaction\n @return the requested list of pool indexes"
									},
									"functionSelector": "acb8001f",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsForTransactionsWithIndexesBetween",
									"nameLocation": "22991:41:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "startTransactionIndex",
												"nameLocation": "23054:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "23047:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1361,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "23047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "endTransactionIndex",
												"nameLocation": "23097:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "23090:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1363,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "23090:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23032:91:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "23147:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "23147:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "23147:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23146:17:0"
									},
									"scope": 1598,
									"src": "22982:647:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "24115:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1430,
																"name": "startTransactionIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "24134:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1431,
																	"name": "_allTransactionsPoolIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "24158:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																		"typeString": "uint64[] storage ref"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24182:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "24158:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24134:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420696e646578",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24190:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec10de46689465ba18c6864e832857be046b11c97f1f0cc21612a4362d6a98c4",
																"typeString": "literal_string \"invalid index\""
															},
															"value": "invalid index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec10de46689465ba18c6864e832857be046b11c97f1f0cc21612a4362d6a98c4",
																"typeString": "literal_string \"invalid index\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24126:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "24126:80:0"
											},
											{
												"assignments": [
													1441
												],
												"declarations": [
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "poolIndexes",
														"nameLocation": "24233:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1476,
														"src": "24217:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
															"typeString": "uint64[]"
														},
														"typeName": {
															"baseType": {
																"id": 1439,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "24217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1440,
															"nodeType": "ArrayTypeName",
															"src": "24217:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
																"typeString": "uint64[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1445,
																	"name": "_allTransactionsPoolIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "24260:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																		"typeString": "uint64[] storage ref"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24284:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "24260:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1447,
																"name": "startTransactionIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "24293:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "24260:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "24247:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint64_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint64[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1442,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "24251:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1443,
															"nodeType": "ArrayTypeName",
															"src": "24251:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
																"typeString": "uint64[]"
															}
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24247:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
														"typeString": "uint64[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24217:98:0"
											},
											{
												"body": {
													"id": 1472,
													"nodeType": "Block",
													"src": "24406:94:0",
													"statements": [
														{
															"expression": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1462,
																		"name": "poolIndexes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "24421:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
																			"typeString": "uint64[] memory"
																		}
																	},
																	"id": 1466,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1463,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "24433:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1464,
																			"name": "startTransactionIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "24437:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"src": "24433:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "24421:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1467,
																		"name": "_allTransactionsPoolIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "24462:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																			"typeString": "uint64[] storage ref"
																		}
																	},
																	"id": 1469,
																	"indexExpression": {
																		"id": 1468,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "24486:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "24462:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "24421:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "24421:67:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1455,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "24365:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1456,
															"name": "_allTransactionsPoolIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "24369:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint64_$dyn_storage",
																"typeString": "uint64[] storage ref"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24393:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24369:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24365:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"initializationExpression": {
													"assignments": [
														1452
													],
													"declarations": [
														{
															"constant": false,
															"id": 1452,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "24338:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1473,
															"src": "24331:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1451,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "24331:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1454,
													"initialValue": {
														"id": 1453,
														"name": "startTransactionIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "24342:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "24331:32:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "24401:3:0",
														"subExpression": {
															"id": 1459,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "24403:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1461,
													"nodeType": "ExpressionStatement",
													"src": "24401:3:0"
												},
												"nodeType": "ForStatement",
												"src": "24326:174:0"
											},
											{
												"expression": {
													"id": 1474,
													"name": "poolIndexes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "24517:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
														"typeString": "uint64[] memory"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1475,
												"nodeType": "Return",
												"src": "24510:18:0"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "23637:340:0",
										"text": " Returns the list of pool indexes of the pools participating in\n the list of requested transactions in range [startTransactionIndex, ..., _allTransactionsPoolIds.length).\n \n @param startTransactionIndex the index of the starting transaction\n @return the requested list of pool indexes"
									},
									"functionSelector": "455b5adc",
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsForTransactionsWithIndexesFrom",
									"nameLocation": "23992:38:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "startTransactionIndex",
												"nameLocation": "24052:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "24045:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1422,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "24045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24030:44:0"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "24098:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1425,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "24098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1426,
													"nodeType": "ArrayTypeName",
													"src": "24098:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24097:17:0"
									},
									"scope": 1598,
									"src": "23983:553:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "24544:75:0",
										"text": " The owner of the contract (the receiver of the taxes)."
									},
									"functionSelector": "ce606ee0",
									"id": 1480,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "24648:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1598,
									"src": "24625:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1479,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24625:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "24760:54:0",
										"statements": [
											{
												"expression": {
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1484,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "24771:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1487,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "24795:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24799:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "24795:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24787:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1485,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24787:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24787:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "24771:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "24771:35:0"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "24670:70:0",
										"text": " Set the initial contract owner to the msg.sender."
									},
									"id": 1493,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24757:2:0"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24760:0:0"
									},
									"scope": 1598,
									"src": "24746:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "24933:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "24822:78:0",
										"text": " Function to receive native asset, msg.data must be empty."
									},
									"id": 1498,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24913:2:0"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24933:0:0"
									},
									"scope": 1598,
									"src": "24906:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "25053:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "24943:76:0",
										"text": " Fallback function is called when msg.data is not empty."
									},
									"id": 1503,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25033:2:0"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25053:0:0"
									},
									"scope": 1598,
									"src": "25025:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "25189:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1511,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "25215:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SimplePools_$1598",
																	"typeString": "contract SimplePools"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SimplePools_$1598",
																	"typeString": "contract SimplePools"
																}
															],
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1509,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25207:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25207:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "25221:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "25207:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1514,
												"nodeType": "Return",
												"src": "25200:28:0"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "25063:71:0",
										"text": " Gets the current native asset balance of contract."
									},
									"functionSelector": "12065fe0",
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "25149:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25159:2:0"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "25183:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "25183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25182:6:0"
									},
									"scope": 1598,
									"src": "25140:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "25390:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1523,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "25409:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25413:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "25409:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1525,
																"name": "contractOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "25423:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25409:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79207468652063757272656e74206f776e65722063616e206368616e676520746865206f776e6572",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25438:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67bb8b445a09024f90c5caf5f08d62cf15f6acf5c7ed516f432954515bdaaf5f",
																"typeString": "literal_string \"only the current owner can change the owner\""
															},
															"value": "only the current owner can change the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67bb8b445a09024f90c5caf5f08d62cf15f6acf5c7ed516f432954515bdaaf5f",
																"typeString": "literal_string \"only the current owner can change the owner\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25401:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "25401:83:0"
											},
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1530,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "25495:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1533,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "25519:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25511:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1531,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "25511:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25511:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "25495:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "25495:33:0"
											}
										]
									},
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "25244:92:0",
										"text": " Sets a new contract owner. Only callable by the current contract owner."
									},
									"functionSelector": "f5a1f5b4",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setNewOwner",
									"nameLocation": "25351:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "25371:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "25363:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:18:0"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25390:0:0"
									},
									"scope": 1598,
									"src": "25342:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "25544:103:0",
										"text": " Tax is equally divided by the contract owner and pool creator on each transaction."
									},
									"id": 1544,
									"mutability": "mutable",
									"name": "contractTransactionTax",
									"nameLocation": "25661:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1598,
									"src": "25653:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1540,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25653:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1543,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1541,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "25686:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3135",
											"id": 1542,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "25692:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_15_by_1",
												"typeString": "int_const 15"
											},
											"value": "15"
										},
										"src": "25686:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "25703:103:0",
										"text": " This is the list of valid transaction taxes that can be set by the contract owner."
									},
									"id": 1564,
									"mutability": "mutable",
									"name": "validContractTransactionTaxes",
									"nameLocation": "25822:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 1598,
									"src": "25812:82:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1546,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "25812:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1547,
										"nodeType": "ArrayTypeName",
										"src": "25812:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"components": [
											{
												"commonType": {
													"typeIdentifier": "t_rational_10000000000000_by_1",
													"typeString": "int_const 10000000000000"
												},
												"id": 1550,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25855:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "3133",
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25859:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_13_by_1",
														"typeString": "int_const 13"
													},
													"value": "13"
												},
												"src": "25855:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10000000000000_by_1",
													"typeString": "int_const 10000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_100000000000000_by_1",
													"typeString": "int_const 100000000000000"
												},
												"id": 1553,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25863:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "3134",
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25867:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_14_by_1",
														"typeString": "int_const 14"
													},
													"value": "14"
												},
												"src": "25863:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000_by_1",
													"typeString": "int_const 100000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_1000000000000000_by_1",
													"typeString": "int_const 1000000000000000"
												},
												"id": 1556,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25871:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "3135",
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25875:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_15_by_1",
														"typeString": "int_const 15"
													},
													"value": "15"
												},
												"src": "25871:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000000000000000_by_1",
													"typeString": "int_const 1000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_10000000000000000_by_1",
													"typeString": "int_const 10000000000000000"
												},
												"id": 1559,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25879:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "3136",
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25883:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_16_by_1",
														"typeString": "int_const 16"
													},
													"value": "16"
												},
												"src": "25879:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10000000000000000_by_1",
													"typeString": "int_const 10000000000000000"
												}
											},
											{
												"commonType": {
													"typeIdentifier": "t_rational_100000000000000000_by_1",
													"typeString": "int_const 100000000000000000"
												},
												"id": 1562,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"leftExpression": {
													"hexValue": "3130",
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25887:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "BinaryOperation",
												"operator": "**",
												"rightExpression": {
													"hexValue": "3137",
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25891:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_17_by_1",
														"typeString": "int_const 17"
													},
													"value": "17"
												},
												"src": "25887:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100000000000000000_by_1",
													"typeString": "int_const 100000000000000000"
												}
											}
										],
										"id": 1563,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "25854:40:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint64_$5_memory_ptr",
											"typeString": "uint64[5] memory"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "26190:458:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1571,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "26209:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26213:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "26209:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1573,
																"name": "contractOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "26223:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "26209:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79207468652063757272656e74206f776e65722063616e206368616e67652074686520746178",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26238:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20e4bad316f35c1a411fc71154da9031f04a7c5964094c264459f329a588e978",
																"typeString": "literal_string \"only the current owner can change the tax\""
															},
															"value": "only the current owner can change the tax"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20e4bad316f35c1a411fc71154da9031f04a7c5964094c264459f329a588e978",
																"typeString": "literal_string \"only the current owner can change the tax\""
															}
														],
														"id": 1570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26201:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "26201:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1579,
																	"name": "newTaxIndexFromValidContractTransactionTaxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "26301:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1580,
																		"name": "validContractTransactionTaxes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "26348:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26378:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "26348:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26301:83:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1583,
																	"name": "newTaxIndexFromValidContractTransactionTaxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "26405:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26453:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26405:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "26301:153:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206e6577546178496e64657846726f6d56616c6964436f6e74726163745472616e73616374696f6e5461786573",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26474:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3dd43b4c5e9fc7e836b80e18bb3d38ec837dd6512fa525bd9b2f3dda24f6014f",
																"typeString": "literal_string \"invalid newTaxIndexFromValidContractTransactionTaxes\""
															},
															"value": "invalid newTaxIndexFromValidContractTransactionTaxes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3dd43b4c5e9fc7e836b80e18bb3d38ec837dd6512fa525bd9b2f3dda24f6014f",
																"typeString": "literal_string \"invalid newTaxIndexFromValidContractTransactionTaxes\""
															}
														],
														"id": 1578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26293:236:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "26293:236:0"
											},
											{
												"expression": {
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1590,
														"name": "contractTransactionTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "26540:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1591,
															"name": "validContractTransactionTaxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "26565:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1593,
														"indexExpression": {
															"id": 1592,
															"name": "newTaxIndexFromValidContractTransactionTaxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "26595:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26565:75:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26540:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "26540:100:0"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "25903:195:0",
										"text": " Sets a new contractTransactionNax. Only callable by the current contract owner.\n The list of valid transaction taxes which can be set is validContractTransactionTaxes."
									},
									"functionSelector": "74d13a23",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setNewGlobalTax",
									"nameLocation": "26113:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "newTaxIndexFromValidContractTransactionTaxes",
												"nameLocation": "26135:44:0",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "26129:50:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1566,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "26129:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26128:52:0"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26190:0:0"
									},
									"scope": 1598,
									"src": "26104:544:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "886:25765:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1599,
								"nodeType": "StructuredDocumentation",
								"src": "26655:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1788,
							"linearizedBaseContracts": [
								1788
							],
							"name": "Math",
							"nameLocation": "26740:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1603,
									"members": [
										{
											"id": 1600,
											"name": "Down",
											"nameLocation": "26777:4:0",
											"nodeType": "EnumValue",
											"src": "26777:4:0"
										},
										{
											"id": 1601,
											"name": "Up",
											"nameLocation": "26820:2:0",
											"nodeType": "EnumValue",
											"src": "26820:2:0"
										},
										{
											"id": 1602,
											"name": "Zero",
											"nameLocation": "26852:4:0",
											"nodeType": "EnumValue",
											"src": "26852:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "26757:8:0",
									"nodeType": "EnumDefinition",
									"src": "26752:126:0"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "27021:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1613,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "27039:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1614,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "27043:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27039:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1617,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "27051:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "27039:13:0",
													"trueExpression": {
														"id": 1616,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "27047:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1619,
												"nodeType": "Return",
												"src": "27032:20:0"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "26886:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "26963:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "26967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "26978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26966:22:0"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "27012:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27011:9:0"
									},
									"scope": 1788,
									"src": "26954:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "27515:3873:0",
										"statements": [
											{
												"id": 1741,
												"nodeType": "UncheckedBlock",
												"src": "27526:3855:0",
												"statements": [
													{
														"assignments": [
															1634
														],
														"declarations": [
															{
																"constant": false,
																"id": 1634,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "27859:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1741,
																"src": "27851:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1633,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27851:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1635,
														"nodeType": "VariableDeclarationStatement",
														"src": "27851:13:0"
													},
													{
														"assignments": [
															1637
														],
														"declarations": [
															{
																"constant": false,
																"id": 1637,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "27932:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1741,
																"src": "27924:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27924:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1638,
														"nodeType": "VariableDeclarationStatement",
														"src": "27924:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "28005:161:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28024:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "28041:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "28044:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28051:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "28047:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28047:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "28034:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28034:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "28028:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28072:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "28085:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "28088:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "28081:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28081:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "28072:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28108:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "28125:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "28129:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "28121:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28121:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "28140:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "28144:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "28137:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28137:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28117:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28117:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "28108:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "28072:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "28129:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "28144:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "28108:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1624,
																"isOffset": false,
																"isSlot": false,
																"src": "28041:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1624,
																"isOffset": false,
																"isSlot": false,
																"src": "28085:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1626,
																"isOffset": false,
																"isSlot": false,
																"src": "28044:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1626,
																"isOffset": false,
																"isSlot": false,
																"src": "28088:1:0",
																"valueSize": 1
															}
														],
														"id": 1639,
														"nodeType": "InlineAssembly",
														"src": "27996:170:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1640,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "28250:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28259:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28250:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1648,
														"nodeType": "IfStatement",
														"src": "28246:77:0",
														"trueBody": {
															"id": 1647,
															"nodeType": "Block",
															"src": "28262:61:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1643,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1634,
																			"src": "28288:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1644,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "28296:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28288:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1632,
																	"id": 1646,
																	"nodeType": "Return",
																	"src": "28281:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1650,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "28436:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1651,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1637,
																		"src": "28450:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "28436:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1649,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "28428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28428:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1654,
														"nodeType": "ExpressionStatement",
														"src": "28428:28:0"
													},
													{
														"assignments": [
															1656
														],
														"declarations": [
															{
																"constant": false,
																"id": 1656,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "28727:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 1741,
																"src": "28719:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1655,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28719:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1657,
														"nodeType": "VariableDeclarationStatement",
														"src": "28719:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "28760:298:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "28831:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "28851:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "28854:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "28857:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "28844:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28844:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "28831:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28954:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "28967:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "28977:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "28988:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "28974:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28974:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28963:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28963:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "28954:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29013:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "29026:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "29033:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29022:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29022:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "29013:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1628,
																"isOffset": false,
																"isSlot": false,
																"src": "28857:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "28988:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "29013:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "29026:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "28954:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "28967:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "28831:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "28977:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "29033:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1624,
																"isOffset": false,
																"isSlot": false,
																"src": "28851:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1626,
																"isOffset": false,
																"isSlot": false,
																"src": "28854:1:0",
																"valueSize": 1
															}
														],
														"id": 1658,
														"nodeType": "InlineAssembly",
														"src": "28751:307:0"
													},
													{
														"assignments": [
															1660
														],
														"declarations": [
															{
																"constant": false,
																"id": 1660,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "29379:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 1741,
																"src": "29371:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29371:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1668,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1661,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "29386:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "29401:12:0",
																			"subExpression": {
																				"id": 1662,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1628,
																				"src": "29402:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29416:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "29401:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1666,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29400:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29386:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29371:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "29442:371:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "29509:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "29528:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "29541:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "29524:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29524:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "29509:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29616:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "29629:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "29636:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "29625:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29625:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "29616:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29759:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "29779:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "29782:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "29775:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29775:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "29789:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "29771:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29771:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29796:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29767:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29767:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "29759:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1628,
																"isOffset": false,
																"isSlot": false,
																"src": "29509:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1628,
																"isOffset": false,
																"isSlot": false,
																"src": "29528:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "29616:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1634,
																"isOffset": false,
																"isSlot": false,
																"src": "29629:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1660,
																"isOffset": false,
																"isSlot": false,
																"src": "29541:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1660,
																"isOffset": false,
																"isSlot": false,
																"src": "29636:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1660,
																"isOffset": false,
																"isSlot": false,
																"src": "29759:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1660,
																"isOffset": false,
																"isSlot": false,
																"src": "29782:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1660,
																"isOffset": false,
																"isSlot": false,
																"src": "29789:4:0",
																"valueSize": 1
															}
														],
														"id": 1669,
														"nodeType": "InlineAssembly",
														"src": "29433:380:0"
													},
													{
														"expression": {
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1670,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "29882:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1671,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "29891:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1672,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "29899:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29891:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29882:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1675,
														"nodeType": "ExpressionStatement",
														"src": "29882:21:0"
													},
													{
														"assignments": [
															1677
														],
														"declarations": [
															{
																"constant": false,
																"id": 1677,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "30234:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1741,
																"src": "30226:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1676,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30226:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1684,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30245:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1679,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "30249:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "30245:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "30244:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30264:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "30244:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30226:39:0"
													},
													{
														"expression": {
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1685,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "30486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30497:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1687,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "30501:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1688,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "30515:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30501:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30497:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30486:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1692,
														"nodeType": "ExpressionStatement",
														"src": "30486:36:0"
													},
													{
														"expression": {
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1693,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "30556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1695,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "30571:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1696,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "30585:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30571:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30567:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30556:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1700,
														"nodeType": "ExpressionStatement",
														"src": "30556:36:0"
													},
													{
														"expression": {
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1701,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "30627:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30638:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1703,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "30642:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1704,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "30656:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30642:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30638:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30627:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1708,
														"nodeType": "ExpressionStatement",
														"src": "30627:36:0"
													},
													{
														"expression": {
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1709,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "30698:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1711,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "30713:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1712,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "30727:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30713:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30709:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30698:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1716,
														"nodeType": "ExpressionStatement",
														"src": "30698:36:0"
													},
													{
														"expression": {
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1717,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "30769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1719,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "30784:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1720,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "30798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30784:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30780:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30769:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1724,
														"nodeType": "ExpressionStatement",
														"src": "30769:36:0"
													},
													{
														"expression": {
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1725,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "30841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30852:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1727,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "30856:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1728,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "30870:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "30856:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30852:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30841:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1732,
														"nodeType": "ExpressionStatement",
														"src": "30841:36:0"
													},
													{
														"expression": {
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1733,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "31317:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1734,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "31326:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1735,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1677,
																	"src": "31334:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31326:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31317:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1738,
														"nodeType": "ExpressionStatement",
														"src": "31317:24:0"
													},
													{
														"expression": {
															"id": 1739,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "31363:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1632,
														"id": 1740,
														"nodeType": "Return",
														"src": "31356:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "27068:309:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "27392:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "27417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "27409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "27437:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "27429:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "27457:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "27449:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27398:77:0"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "27507:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "27499:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27498:16:0"
									},
									"scope": 1788,
									"src": "27383:4005:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "31678:195:0",
										"statements": [
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "31697:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "31689:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"arguments": [
														{
															"id": 1761,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "31713:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1762,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "31716:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1763,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "31719:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1760,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1743,
															1787
														],
														"referencedDeclaration": 1743,
														"src": "31706:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31706:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31689:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1603",
															"typeString": "enum Math.Rounding"
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1766,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "31746:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1603",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1767,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "31758:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1603_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "31767:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1601,
															"src": "31758:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1603",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "31746:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1771,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "31780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1772,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "31783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1773,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "31786:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1770,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "31773:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31773:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31801:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "31773:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "31746:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1783,
												"nodeType": "IfStatement",
												"src": "31742:100:0",
												"trueBody": {
													"id": 1782,
													"nodeType": "Block",
													"src": "31804:38:0",
													"statements": [
														{
															"expression": {
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1778,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "31819:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31829:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "31819:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1781,
															"nodeType": "ExpressionStatement",
															"src": "31819:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1784,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1759,
													"src": "31859:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1785,
												"nodeType": "Return",
												"src": "31852:13:0"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "31396:123:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "31534:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "31559:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "31551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "31579:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "31571:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "31599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "31591:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31630:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "31621:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1603",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1751,
														"name": "Rounding",
														"nameLocations": [
															"31621:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1603,
														"src": "31621:8:0"
													},
													"referencedDeclaration": 1603,
													"src": "31621:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1603",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31540:105:0"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "31669:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31668:9:0"
									},
									"scope": 1788,
									"src": "31525:348:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1883,
							"src": "26732:5144:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1789,
								"nodeType": "StructuredDocumentation",
								"src": "31880:40:0",
								"text": " Interface for ERC20 assets."
							},
							"fullyImplemented": false,
							"id": 1882,
							"linearizedBaseContracts": [
								1882
							],
							"name": "IERC20",
							"nameLocation": "31932:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "31946:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1798,
									"name": "Transfer",
									"nameLocation": "32121:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32146:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "32130:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32168:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "32152:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32180:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "32172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32129:57:0"
									},
									"src": "32115:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "32195:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1807,
									"name": "Approval",
									"nameLocation": "32358:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32383:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "32367:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32406:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "32390:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32423:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "32415:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32366:63:0"
									},
									"src": "32352:78:0"
								},
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "32438:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "32521:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32532:2:0"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "32558:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32557:9:0"
									},
									"scope": 1882,
									"src": "32512:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "32575:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "32664:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "32674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32673:17:0"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "32714:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32713:9:0"
									},
									"scope": 1882,
									"src": "32655:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "32731:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "32954:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32971:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "32963:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32983:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "32975:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32962:28:0"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "33009:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33008:6:0"
									},
									"scope": 1882,
									"src": "32945:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "33023:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "33308:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33326:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "33318:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "33341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "33333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33317:32:0"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "33373:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33372:9:0"
									},
									"scope": 1882,
									"src": "33299:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "33390:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "34060:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "34076:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "34068:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34093:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "34085:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34067:33:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "34119:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34119:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34118:6:0"
									},
									"scope": 1882,
									"src": "34051:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "34133:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "34443:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34474:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "34466:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "34489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34518:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "34510:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34455:76:0"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "34550:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34550:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34549:6:0"
									},
									"scope": 1882,
									"src": "34434:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "34564:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "34635:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34639:2:0"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1869,
												"src": "34665:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34665:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34664:15:0"
									},
									"scope": 1882,
									"src": "34626:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "34688:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "34808:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34814:2:0"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "34840:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1872,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34840:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34839:15:0"
									},
									"scope": 1882,
									"src": "34799:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "34863:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "35503:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35511:2:0"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "35537:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1878,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "35537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35536:7:0"
									},
									"scope": 1882,
									"src": "35494:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "31922:3625:0",
							"usedErrors": []
						}
					],
					"src": "0:35549:0"
				},
				"id": 0
			}
		}
	}
}